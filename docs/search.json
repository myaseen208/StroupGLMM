[{"path":"https://myaseen208.com/StroupGLMM/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Muhammad Yaseen. Author, maintainer, copyright holder. Adeela Munawar. Author, contributor. Walter W. Stroup. Author, contributor. Kent M. Eskridge. Author, contributor.","code":""},{"path":"https://myaseen208.com/StroupGLMM/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Yaseen M, Munawar , Stroup WW, Eskridge KM (2016). StroupGLMM: R Codes Datasets Generalized Linear Mixed Models: Modern Concepts, Methods Applications Walter W. Stroup.","code":"@Manual{,   title = {StroupGLMM: R Codes and Datasets for Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup},   author = {Muhammad Yaseen and Adeela Munawar and Walter W. Stroup and Kent M. Eskridge},   year = {2016},   journal = {The Comprehensive R Archive Network (CRAN)}, }"},{"path":[]},{"path":[]},{"path":"https://myaseen208.com/StroupGLMM/index.html","id":"muhammad-yaseen12-adeela-munawar2-walter-w-stroup3-and-kent-m-eskridge3","dir":"","previous_headings":"StroupGLMM: R Codes and Datasets for Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup","what":"Muhammad Yaseen1,2, Adeela Munawar2, Walter W. Stroup3, and Kent M. Eskridge3","title":"StroupGLMM","text":"School Mathematical & Statistical Sciences, Clemson University, Clemson, South Carolina, USA Department Mathematics Statistics, University Agriculture Faisalabad, Pakistan Department Statistics, University Nebraska Lincoln, NE, USA   ***","code":""},{"path":"https://myaseen208.com/StroupGLMM/index.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"StroupGLMM","text":"R Codes Datasets Stroup, W. W. (2012). Generalized Linear Mixed Models Modern Concepts, Methods Applications, CRC Press.","code":""},{"path":"https://myaseen208.com/StroupGLMM/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"StroupGLMM","text":"package can installed CRAN follows: development version can installed github follows:","code":"install.packages(\"StroupGLMM\", dependencies = TRUE) if (!require(\"remotes\")) install.packages(\"remotes\") remotes::install_github(\"myaseen208/StroupGLMM\")"},{"path":"https://myaseen208.com/StroupGLMM/index.html","id":"whats-new","dir":"","previous_headings":"","what":"What’s new","title":"StroupGLMM","text":"know whats new version type:","code":"news(package = \"StroupGLMM\")"},{"path":"https://myaseen208.com/StroupGLMM/index.html","id":"links","dir":"","previous_headings":"","what":"Links","title":"StroupGLMM","text":"CRAN page Github page Documentation website","code":""},{"path":"https://myaseen208.com/StroupGLMM/index.html","id":"citing-stroupglmm","dir":"","previous_headings":"","what":"Citing StroupGLMM","title":"StroupGLMM","text":"cite methods package use:","code":"citation(\"StroupGLMM\") Please, support this project by citing it in your publications!    Yaseen M, Munawar A, Stroup WW, Eskridge KM (2016). _StroupGLMM: R   Codes and Datasets for Generalized Linear Mixed Models: Modern   Concepts, Methods and Applications by Walter W. Stroup_.  A BibTeX entry for LaTeX users is    @Manual{,     title = {StroupGLMM: R Codes and Datasets for Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup},     author = {Muhammad Yaseen and Adeela Munawar and Walter W. Stroup and Kent M. Eskridge},     year = {2016},     journal = {The Comprehensive R Archive Network (CRAN)},   }"},{"path":"https://myaseen208.com/StroupGLMM/reference/DataExam2.B.2.html","id":null,"dir":"Reference","previous_headings":"","what":"Data for Example 2.B.2 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup (p-54) — DataExam2.B.2","title":"Data for Example 2.B.2 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup (p-54) — DataExam2.B.2","text":"Exam2.B.2 used visualize effect glm model statement binomial data logit probit links.","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/DataExam2.B.2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data for Example 2.B.2 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup (p-54) — DataExam2.B.2","text":"","code":"data(DataExam2.B.2)"},{"path":"https://myaseen208.com/StroupGLMM/reference/DataExam2.B.2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data for Example 2.B.2 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup (p-54) — DataExam2.B.2","text":"data.frame 11 rows 3 variables.","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/DataExam2.B.2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Data for Example 2.B.2 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup (p-54) — DataExam2.B.2","text":"x independent variable n bernouli trials (bernouli outcomes individual) y number successes individual","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/DataExam2.B.2.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Data for Example 2.B.2 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup (p-54) — DataExam2.B.2","text":"Stroup, W. W. (2012).Generalized linear mixed models: modern concepts, methods applications.              CRC press.","code":""},{"path":[]},{"path":"https://myaseen208.com/StroupGLMM/reference/DataExam2.B.2.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Data for Example 2.B.2 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup (p-54) — DataExam2.B.2","text":"Muhammad Yaseen (myaseen208@gmail.com) Adeela Munawar (adeela.uaf@gmail.com)","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/DataExam2.B.2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data for Example 2.B.2 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup (p-54) — DataExam2.B.2","text":"","code":"data(DataExam2.B.2)"},{"path":"https://myaseen208.com/StroupGLMM/reference/DataExam2.B.3.html","id":null,"dir":"Reference","previous_headings":"","what":"Data for Example 2.B.3 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup (p-55) — DataExam2.B.3","title":"Data for Example 2.B.3 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup (p-55) — DataExam2.B.3","text":"Exam2.B.3 used illustrate one way treatment design Gaussian observations.","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/DataExam2.B.3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data for Example 2.B.3 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup (p-55) — DataExam2.B.3","text":"","code":"data(DataExam2.B.3)"},{"path":"https://myaseen208.com/StroupGLMM/reference/DataExam2.B.3.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data for Example 2.B.3 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup (p-55) — DataExam2.B.3","text":"data.frame 6 rows 2 variables.","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/DataExam2.B.3.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Data for Example 2.B.3 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup (p-55) — DataExam2.B.3","text":"trt treatments factor number 1 3 y   response variable","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/DataExam2.B.3.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Data for Example 2.B.3 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup (p-55) — DataExam2.B.3","text":"Stroup, W. W. (2012).Generalized linear mixed models: modern concepts, methods applications.              CRC press.","code":""},{"path":[]},{"path":"https://myaseen208.com/StroupGLMM/reference/DataExam2.B.3.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Data for Example 2.B.3 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup (p-55) — DataExam2.B.3","text":"Muhammad Yaseen (myaseen208@gmail.com) Adeela Munawar (adeela.uaf@gmail.com)","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/DataExam2.B.3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data for Example 2.B.3 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup (p-55) — DataExam2.B.3","text":"","code":"data(DataExam2.B.3)"},{"path":"https://myaseen208.com/StroupGLMM/reference/DataExam2.B.4.html","id":null,"dir":"Reference","previous_headings":"","what":"Data for Example 2.B.4 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup (p-54) — DataExam2.B.4","title":"Data for Example 2.B.4 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup (p-54) — DataExam2.B.4","text":"Exam2.B.4 used illustrate one way treatment design Binomial observations.","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/DataExam2.B.4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data for Example 2.B.4 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup (p-54) — DataExam2.B.4","text":"","code":"data(DataExam2.B.4)"},{"path":"https://myaseen208.com/StroupGLMM/reference/DataExam2.B.4.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data for Example 2.B.4 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup (p-54) — DataExam2.B.4","text":"data.frame 6 rows 4 variables.","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/DataExam2.B.4.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Data for Example 2.B.4 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup (p-54) — DataExam2.B.4","text":"obs number observations trt three treatments class factor Nij  number bernouli trials individual y  number successes individual","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/DataExam2.B.4.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Data for Example 2.B.4 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup (p-54) — DataExam2.B.4","text":"Stroup, W. W. (2012).Generalized linear mixed models: modern concepts, methods applications.              CRC press.","code":""},{"path":[]},{"path":"https://myaseen208.com/StroupGLMM/reference/DataExam2.B.4.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Data for Example 2.B.4 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup (p-54) — DataExam2.B.4","text":"Muhammad Yaseen (myaseen208@gmail.com) Adeela Munawar (adeela.uaf@gmail.com)","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/DataExam2.B.4.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data for Example 2.B.4 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup (p-54) — DataExam2.B.4","text":"","code":"data(DataExam2.B.4)"},{"path":"https://myaseen208.com/StroupGLMM/reference/DataExam2.B.7.html","id":null,"dir":"Reference","previous_headings":"","what":"Data for Example 2.B.7 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup (p-60) — DataExam2.B.7","title":"Data for Example 2.B.7 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup (p-60) — DataExam2.B.7","text":"Exam2.B.7 related multi batch regression data assuming different forms linear models factorial experiment.","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/DataExam2.B.7.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data for Example 2.B.7 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup (p-60) — DataExam2.B.7","text":"","code":"data(DataExam2.B.7)"},{"path":"https://myaseen208.com/StroupGLMM/reference/DataExam2.B.7.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data for Example 2.B.7 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup (p-60) — DataExam2.B.7","text":"data.frame 16 rows 4 variables.","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/DataExam2.B.7.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Data for Example 2.B.7 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup (p-60) — DataExam2.B.7","text":"Rep number replications factor two levels 1 2 b factor two levels 1 2 y  response variable","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/DataExam2.B.7.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Data for Example 2.B.7 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup (p-60) — DataExam2.B.7","text":"Stroup, W. W. (2012).Generalized linear mixed models: modern concepts, methods applications.              CRC press.","code":""},{"path":[]},{"path":"https://myaseen208.com/StroupGLMM/reference/DataExam2.B.7.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Data for Example 2.B.7 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup (p-60) — DataExam2.B.7","text":"Muhammad Yaseen (myaseen208@gmail.com) Adeela Munawar (adeela.uaf@gmail.com)","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/DataExam2.B.7.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data for Example 2.B.7 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup (p-60) — DataExam2.B.7","text":"","code":"data(DataExam2.B.7)"},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet3.1.html","id":null,"dir":"Reference","previous_headings":"","what":"Data for Example 3.1 and Example 3.2 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet3.1","title":"Data for Example 3.1 and Example 3.2 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet3.1","text":"DataSet3.1 used linear generalized linear models","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet3.1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data for Example 3.1 and Example 3.2 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet3.1","text":"","code":"data(DataSet3.1)"},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet3.1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data for Example 3.1 and Example 3.2 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet3.1","text":"data.frame 20 rows 5 variables.","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet3.1.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Data for Example 3.1 and Example 3.2 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet3.1","text":"trt two treatment 0 1 rep unit observation observation ID Y  continuous & may assumed Gaussian N  number obs F  number \"successes\"(N F specify binomial response)","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet3.1.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Data for Example 3.1 and Example 3.2 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet3.1","text":"Stroup, W. W. (2012).Generalized linear mixed models: modern concepts, methods applications.              CRC press.","code":""},{"path":[]},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet3.1.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Data for Example 3.1 and Example 3.2 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet3.1","text":"Muhammad Yaseen (myaseen208@gmail.com) Adeela Munawar (adeela.uaf@gmail.com)","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet3.1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data for Example 3.1 and Example 3.2 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet3.1","text":"","code":"data(DataSet3.1)"},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet3.2.html","id":null,"dir":"Reference","previous_headings":"","what":"DataSt3.2 for Example 3.3, Example 3.4, Example3.6, Example3.8 and Example 3.9 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet3.2","title":"DataSt3.2 for Example 3.3, Example 3.4, Example3.6, Example3.8 and Example 3.9 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet3.2","text":"DataSet3.2 Multi-Location, 4 Treatment Randomized Block","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet3.2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DataSt3.2 for Example 3.3, Example 3.4, Example3.6, Example3.8 and Example 3.9 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet3.2","text":"","code":"data(DataSet3.2)"},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet3.2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"DataSt3.2 for Example 3.3, Example 3.4, Example3.6, Example3.8 and Example 3.9 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet3.2","text":"data.frame 32 rows 10 variables.","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet3.2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"DataSt3.2 for Example 3.3, Example 3.4, Example3.6, Example3.8 and Example 3.9 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet3.2","text":"trt              two treatment 0 1 loc              four locations used blocks Y                Gaussian response variable Nbin             subjects Loc x Trt binomial response S1 S2        two binomial response variables count1 count 2 used later B          factors level 0 1","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet3.2.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"DataSt3.2 for Example 3.3, Example 3.4, Example3.6, Example3.8 and Example 3.9 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet3.2","text":"Stroup, W. W. (2012).Generalized linear mixed models: modern concepts, methods applications.              CRC press.","code":""},{"path":[]},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet3.2.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"DataSt3.2 for Example 3.3, Example 3.4, Example3.6, Example3.8 and Example 3.9 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet3.2","text":"Muhammad Yaseen (myaseen208@gmail.com) Adeela Munawar (adeela.uaf@gmail.com)","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet3.2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DataSt3.2 for Example 3.3, Example 3.4, Example3.6, Example3.8 and Example 3.9 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet3.2","text":"","code":"data(DataSet3.2)"},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet3.3.html","id":null,"dir":"Reference","previous_headings":"","what":"Data for Example3.7 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet3.3","title":"Data for Example3.7 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet3.3","text":"Exam1.2 used see types model effects plotting regression data","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet3.3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data for Example3.7 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet3.3","text":"","code":"data(DataSet3.3)"},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet3.3.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data for Example3.7 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet3.3","text":"data.frame 36 rows 6 variables.","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet3.3.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Data for Example3.7 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet3.3","text":"X     batch observed several times:0,3,6,12,24,36,48 months Y     continuous variable observed level X Fav   number successes N     isndependent bernoulli trials Batch Batches 1, 2, 3, 4 Count binomial response variable","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet3.3.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Data for Example3.7 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet3.3","text":"Stroup, W. W. (2012).Generalized linear mixed models: modern concepts, methods applications.              CRC press.","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet3.3.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Data for Example3.7 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet3.3","text":"Muhammad Yaseen (myaseen208@gmail.com) Adeela Munawar (adeela.uaf@gmail.com)","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet3.3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data for Example3.7 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet3.3","text":"","code":"data(DataSet3.3)"},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet4.1.html","id":null,"dir":"Reference","previous_headings":"","what":"Data for Example 4.1 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet4.1","title":"Data for Example 4.1 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet4.1","text":"DataSet4.1 comes Cochran Cox (1957) Experimental Design","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet4.1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data for Example 4.1 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet4.1","text":"","code":"data(DataSet4.1)"},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet4.1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data for Example 4.1 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet4.1","text":"data.frame 60 rows 3 variables.","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet4.1.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Data for Example 4.1 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet4.1","text":"blocks 15 blocks incomplete block desgin trt    treatments representing incomplete block desgin y      continuous & may assumed Gaussian","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet4.1.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Data for Example 4.1 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet4.1","text":"Stroup, W. W. (2012).Generalized linear mixed models: modern concepts, methods applications.              CRC press. Cochran, W. G., & Cox, G. M. (1957). Experimental designs.","code":""},{"path":[]},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet4.1.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Data for Example 4.1 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet4.1","text":"Muhammad Yaseen (myaseen208@gmail.com) Adeela Munawar (adeela.uaf@gmail.com)","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet4.1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data for Example 4.1 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet4.1","text":"","code":"data(DataSet4.1)"},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet5.1.html","id":null,"dir":"Reference","previous_headings":"","what":"Data for Example 5.1 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet5.1","title":"Data for Example 5.1 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet5.1","text":"DataSet5.1 used polynomial multiple regression","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet5.1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data for Example 5.1 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet5.1","text":"","code":"data(DataSet5.1)"},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet5.1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data for Example 5.1 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet5.1","text":"data.frame 14 rows 3 variables.","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet5.1.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Data for Example 5.1 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet5.1","text":"X  predictor variable  level 0, 1, 2, 4, 8, 12, 16 N  number independent bernoulli trials given observation F  number \"successes\"(N F specify binomial response)","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet5.1.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Data for Example 5.1 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet5.1","text":"Stroup, W. W. (2012).Generalized linear mixed models: modern concepts, methods applications.              CRC press.","code":""},{"path":[]},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet5.1.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Data for Example 5.1 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet5.1","text":"Muhammad Yaseen (myaseen208@gmail.com) Adeela Munawar (adeela.uaf@gmail.com)","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet5.1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data for Example 5.1 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet5.1","text":"","code":"data(DataSet5.1)"},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet5.2.html","id":null,"dir":"Reference","previous_headings":"","what":"Data for Example 5.2 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet5.2","title":"Data for Example 5.2 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet5.2","text":"DataSet5.2 used three factor orthogonal main effects design sequential fitting predictors","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet5.2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data for Example 5.2 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet5.2","text":"","code":"data(DataSet5.2)"},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet5.2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data for Example 5.2 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet5.2","text":"data.frame 9 rows 4 variables.","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet5.2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Data for Example 5.2 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet5.2","text":" predictor variable  level 0, 1 b  predictor variable  level 0, 1 c  predictor variable  level 0, 1 y  response variable","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet5.2.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Data for Example 5.2 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet5.2","text":"Stroup, W. W. (2012).Generalized linear mixed models: modern concepts, methods applications.              CRC press.","code":""},{"path":[]},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet5.2.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Data for Example 5.2 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet5.2","text":"Muhammad Yaseen (myaseen208@gmail.com) Adeela Munawar (adeela.uaf@gmail.com)","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet5.2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data for Example 5.2 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet5.2","text":"","code":"data(DataSet5.2)"},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet7.1.html","id":null,"dir":"Reference","previous_headings":"","what":"Data for Example 7.1 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet7.1","title":"Data for Example 7.1 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet7.1","text":"Data Example 7.1 Generalized Linear Mixed Models: Modern Concepts, Methods Applications Walter W. Stroup","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet7.1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data for Example 7.1 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet7.1","text":"","code":"data(DataSet7.1)"},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet7.1.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Data for Example 7.1 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet7.1","text":"Stroup, W. W. (2012).Generalized linear mixed models: modern concepts, methods applications.              CRC press.","code":""},{"path":[]},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet7.1.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Data for Example 7.1 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet7.1","text":"Muhammad Yaseen (myaseen208@gmail.com) Adeela Munawar (adeela.uaf@gmail.com)","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet7.1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data for Example 7.1 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet7.1","text":"","code":"data(DataSet7.1)"},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet7.2.html","id":null,"dir":"Reference","previous_headings":"","what":"Data for Example 7.2 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet7.2","title":"Data for Example 7.2 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet7.2","text":"Data Example 7.2 Generalized Linear Mixed Models: Modern Concepts, Methods Applications Walter W. Stroup","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet7.2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data for Example 7.2 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet7.2","text":"","code":"data(DataSet7.2)"},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet7.2.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Data for Example 7.2 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet7.2","text":"Stroup, W. W. (2012).Generalized linear mixed models: modern concepts, methods applications.              CRC press.","code":""},{"path":[]},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet7.2.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Data for Example 7.2 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet7.2","text":"Muhammad Yaseen (myaseen208@gmail.com) Adeela Munawar (adeela.uaf@gmail.com)","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet7.2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data for Example 7.2 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet7.2","text":"","code":"data(DataSet7.2)"},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet7.3.html","id":null,"dir":"Reference","previous_headings":"","what":"Data for Example 7.3 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet7.3","title":"Data for Example 7.3 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet7.3","text":"Data Example 7.3 Generalized Linear Mixed Models: Modern Concepts, Methods Applications Walter W. Stroup","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet7.3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data for Example 7.3 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet7.3","text":"","code":"data(DataSet7.3)"},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet7.3.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Data for Example 7.3 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet7.3","text":"Stroup, W. W. (2012).Generalized linear mixed models: modern concepts, methods applications.              CRC press.","code":""},{"path":[]},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet7.3.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Data for Example 7.3 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet7.3","text":"Muhammad Yaseen (myaseen208@gmail.com) Adeela Munawar (adeela.uaf@gmail.com)","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet7.3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data for Example 7.3 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet7.3","text":"","code":"data(DataSet7.3)"},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet7.4.html","id":null,"dir":"Reference","previous_headings":"","what":"Data for Example 7.4 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet7.4","title":"Data for Example 7.4 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet7.4","text":"Data Example 7.4 Generalized Linear Mixed Models: Modern Concepts, Methods Applications Walter W. Stroup","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet7.4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data for Example 7.4 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet7.4","text":"","code":"data(DataSet7.4)"},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet7.4.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Data for Example 7.4 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet7.4","text":"Stroup, W. W. (2012).Generalized linear mixed models: modern concepts, methods applications.              CRC press.","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet7.4.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Data for Example 7.4 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet7.4","text":"Muhammad Yaseen (myaseen208@gmail.com) Adeela Munawar (adeela.uaf@gmail.com)","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet7.4.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data for Example 7.4 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet7.4","text":"","code":"data(DataSet7.4)"},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet7.4rsm.html","id":null,"dir":"Reference","previous_headings":"","what":"Data for Example 7.4 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet7.4rsm","title":"Data for Example 7.4 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet7.4rsm","text":"Data Example 7.4 Generalized Linear Mixed Models: Modern Concepts, Methods Applications Walter W. Stroup","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet7.4rsm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data for Example 7.4 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet7.4rsm","text":"","code":"data(DataSet7.4rsm)"},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet7.4rsm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Data for Example 7.4 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet7.4rsm","text":"Stroup, W. W. (2012).Generalized linear mixed models: modern concepts, methods applications.              CRC press.","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet7.4rsm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Data for Example 7.4 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet7.4rsm","text":"Muhammad Yaseen (myaseen208@gmail.com) Adeela Munawar (adeela.uaf@gmail.com)","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet7.4rsm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data for Example 7.4 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet7.4rsm","text":"","code":"data(DataSet7.4rsm)"},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet7.6.html","id":null,"dir":"Reference","previous_headings":"","what":"Data for Example 7.6 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet7.6","title":"Data for Example 7.6 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet7.6","text":"Data Example 7.6 Generalized Linear Mixed Models: Modern Concepts, Methods Applications Walter W. Stroup","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet7.6.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data for Example 7.6 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet7.6","text":"","code":"data(DataSet7.6)"},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet7.6.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Data for Example 7.6 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet7.6","text":"Stroup, W. W. (2012).Generalized linear mixed models: modern concepts, methods applications.              CRC press.","code":""},{"path":[]},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet7.6.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Data for Example 7.6 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet7.6","text":"Muhammad Yaseen (myaseen208@gmail.com) Adeela Munawar (adeela.uaf@gmail.com)","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet7.6.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data for Example 7.6 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet7.6","text":"","code":"data(DataSet7.6)"},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet7.7.html","id":null,"dir":"Reference","previous_headings":"","what":"Data for Example 7.7 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet7.7","title":"Data for Example 7.7 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet7.7","text":"Data Example 7.7 Generalized Linear Mixed Models: Modern Concepts, Methods Applications Walter W. Stroup","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet7.7.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data for Example 7.7 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet7.7","text":"","code":"data(DataSet7.7)"},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet7.7.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Data for Example 7.7 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet7.7","text":"Stroup, W. W. (2012).Generalized linear mixed models: modern concepts, methods applications.              CRC press.","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet7.7.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Data for Example 7.7 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet7.7","text":"Muhammad Yaseen (myaseen208@gmail.com) Adeela Munawar (adeela.uaf@gmail.com)","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/DataSet7.7.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data for Example 7.7 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — DataSet7.7","text":"","code":"data(DataSet7.7)"},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam1.1.html","id":null,"dir":"Reference","previous_headings":"","what":"Example1.1 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-5) — Exam1.1","title":"Example1.1 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-5) — Exam1.1","text":"Exam1.1 used inspecting probability distribution define plausible process linear models generalized linear models.","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam1.1.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Example1.1 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-5) — Exam1.1","text":"Stroup, W. W. (2012).      Generalized Linear Mixed Models: Modern Concepts, Methods Applications.        CRC Press.","code":""},{"path":[]},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam1.1.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Example1.1 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-5) — Exam1.1","text":"Muhammad Yaseen (myaseen208@gmail.com) Adeela Munawar (adeela.uaf@gmail.com)","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam1.1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example1.1 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-5) — Exam1.1","text":"","code":"#------------------------------------------------------------- ## Linear Model and results discussed in Article 1.2.1 after Table1.1 #------------------------------------------------------------- data(Table1.1) Exam1.1.lm1 <- lm(formula =  y/Nx ~ x, data = Table1.1) summary(Exam1.1.lm1 ) #>  #> Call: #> lm(formula = y/Nx ~ x, data = Table1.1) #>  #> Residuals: #>      Min       1Q   Median       3Q      Max  #> -0.18995 -0.09450  0.05671  0.08904  0.10883  #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|)     #> (Intercept) -0.08944    0.06625  -1.350     0.21     #> x            0.11152    0.01120   9.958 3.71e-06 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 0.1175 on 9 degrees of freedom #> Multiple R-squared:  0.9168,\tAdjusted R-squared:  0.9075  #> F-statistic: 99.16 on 1 and 9 DF,  p-value: 3.706e-06 #>  library(parameters) model_parameters(Exam1.1.lm1) #> Parameter   | Coefficient |   SE |        95% CI |  t(9) |      p #> ----------------------------------------------------------------- #> (Intercept) |       -0.09 | 0.07 | [-0.24, 0.06] | -1.35 | 0.210  #> x           |        0.11 | 0.01 | [ 0.09, 0.14] |  9.96 | < .001 #>  #> Uncertainty intervals (equal-tailed) and p-values (two-tailed) computed #>   using a Wald t-distribution approximation.  #------------------------------------------------------------- ## GLM fitting with logit link (family=binomial) #------------------------------------------------------------- Exam1.1.glm1 <-         glm(               formula = y/Nx ~ x             , family  =  binomial(link = \"logit\")             , data    = Table1.1             ) #> Warning: non-integer #successes in a binomial glm! ## this glm() function gives warning message of non-integer success summary(Exam1.1.glm1) #>  #> Call: #> glm(formula = y/Nx ~ x, family = binomial(link = \"logit\"), data = Table1.1) #>  #> Coefficients: #>             Estimate Std. Error z value Pr(>|z|)   #> (Intercept)  -3.9082     2.3234  -1.682   0.0925 . #> x             0.7287     0.4057   1.796   0.0725 . #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> (Dispersion parameter for binomial family taken to be 1) #>  #>     Null deviance: 7.45149  on 10  degrees of freedom #> Residual deviance: 0.67672  on  9  degrees of freedom #> AIC: 8.3671 #>  #> Number of Fisher Scoring iterations: 5 #>  model_parameters(Exam1.1.glm1) #> Parameter   | Log-Odds |   SE |          95% CI |     z |     p #> --------------------------------------------------------------- #> (Intercept) |    -3.91 | 2.32 | [-10.64, -0.54] | -1.68 | 0.093 #> x           |     0.73 | 0.41 | [  0.14,  1.92] |  1.80 | 0.072 #>  #> Uncertainty intervals (profile-likelihood) and p-values (two-tailed) #>   computed using a Wald z-distribution approximation. #>  #> The model has a log- or logit-link. Consider using `exponentiate = #>   TRUE` to interpret coefficients as ratios.  #------------------------------------------------------------- ## GLM fitting with logit link (family = Quasibinomial) #------------------------------------------------------------- Exam1.1.glm2 <-       glm(            formula = y/Nx~x          , family =  quasibinomial(link = \"logit\")          , data   =  Table1.1          ) ## problem of \"warning message of non-integer success\" is overome by using quasibinomial family summary(Exam1.1.glm2) #>  #> Call: #> glm(formula = y/Nx ~ x, family = quasibinomial(link = \"logit\"),  #>     data = Table1.1) #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|)     #> (Intercept)  -3.9082     0.6366  -6.139 0.000171 *** #> x             0.7287     0.1112   6.555 0.000105 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> (Dispersion parameter for quasibinomial family taken to be 0.07508072) #>  #>     Null deviance: 7.45149  on 10  degrees of freedom #> Residual deviance: 0.67672  on  9  degrees of freedom #> AIC: NA #>  #> Number of Fisher Scoring iterations: 5 #>  model_parameters(Exam1.1.glm2) #> Parameter   | Log-Odds |   SE |         95% CI |  t(9) |      p #> --------------------------------------------------------------- #> (Intercept) |    -3.91 | 0.64 | [-5.29, -2.77] | -6.14 | < .001 #> x           |     0.73 | 0.11 | [ 0.53,  0.97] |  6.55 | < .001 #>  #> Uncertainty intervals (profile-likelihood) and p-values (two-tailed) #>   computed using a Wald t-distribution approximation.  #------------------------------------------------------------- ## GLM fitting with survey package(produces same result as using quasi binomial family in glm) #------------------------------------------------------------- library(survey) #> Loading required package: grid #> Loading required package: Matrix #> Loading required package: survival #>  #> Attaching package: ‘survey’ #> The following object is masked from ‘package:graphics’: #>  #>     dotchart design   <- svydesign(ids =  ~1, data =  Table1.1) #> Warning: No weights or probabilities supplied, assuming equal probability  Exam1.1.svyglm  <-         svyglm(                  formula  =  y/Nx~x                , design   =  design                , family   =  quasibinomial(link = \"logit\")                ) summary(Exam1.1.svyglm) #>  #> Call: #> svyglm(formula = y/Nx ~ x, design = design, family = quasibinomial(link = \"logit\")) #>  #> Survey design: #> svydesign(ids = ~1, data = Table1.1) #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|)     #> (Intercept)  -3.9082     0.7060  -5.535 0.000363 *** #> x             0.7287     0.1171   6.225 0.000154 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> (Dispersion parameter for quasibinomial family taken to be 0.06754992) #>  #> Number of Fisher Scoring iterations: 5 #>  model_parameters(Exam1.1.svyglm) #> Parameter   | Log-Odds |   SE |         95% CI |  t(9) |      p #> --------------------------------------------------------------- #> (Intercept) |    -3.91 | 0.71 | [-5.51, -2.31] | -5.54 | < .001 #> x           |     0.73 | 0.12 | [ 0.46,  0.99] |  6.23 | < .001 #>  #> Uncertainty intervals (equal-tailed) and p-values (two-tailed) computed #>   using a Wald t-distribution approximation.  #------------------------------------------------------------- ## Figure 1.1 #------------------------------------------------------------- Newdata     <-   data.frame(     Table1.1     , LM       =  Exam1.1.lm1$fitted.values     , GLM      =  Exam1.1.glm1$fitted.values     , QB       =  Exam1.1.glm2$fitted.values     , SM       =  Exam1.1.svyglm$fitted.values   ) #------------------------------------------------------------- ## One Method to plot  Figure1.1 #------------------------------------------------------------- library(ggplot2)  Figure1.1   <-   ggplot(       data     = Newdata     , mapping  = aes(x = x, y = y/Nx)   )     +   geom_point (     mapping  = aes(colour = \"black\")   )  +   geom_point (     data     = Newdata     , mapping  = aes(x = x, y = LM, colour = \"blue\"), shape = 2   )  +   geom_line(     data     = Newdata     , mapping  = aes(x = x, y = LM, colour = \"blue\")   )   +   geom_point (     data     = Newdata     , mapping  = aes(x = x, y = GLM, colour =\"red\"), shape = 3   ) +   geom_smooth (     data     = Newdata     , mapping  = aes(x = x, y = GLM, colour = \"red\")     , stat     = \"smooth\"   ) +   theme_bw()    +   scale_colour_manual (     values = c(\"black\", \"blue\", \"red\"),     labels = c(\"observed\", \"LM\", \"GLM\")   )  +   guides (     colour   = guide_legend(title = \"Plot\")   ) +   labs (     title     = \"Linear Model vs Logistic Model\"   ) +   labs (     y         = \"p\"   ) print(Figure1.1) #> `geom_smooth()` using method = 'loess' and formula = 'y ~ x'   #------------------------------------------------------------- ## Another way to plot Figure 1.1 #------------------------------------------------------------- newdata   <-   data.frame(     P     =  c(                 Table1.1$y/Table1.1$Nx               , Exam1.1.lm1$fitted.values               , Exam1.1.glm1$fitted.values                )     , X     =  rep(Table1.1$x, 3)     , group =  rep(c('Obs','LM','GLM'), each = length(Table1.1$x))   )  Figure1.1      <-   ggplot(       data    = newdata     , mapping = aes(x = X , y = P)   )    +   geom_point(     mapping = aes(x = X , y = P, colour = group , shape=group)   ) +   geom_smooth(     data    = subset(x = newdata, group == \"LM\")     , mapping = aes(x=X,y=P)     , col     = \"green\"   ) +   geom_smooth(     data    = subset(x = newdata, group==\"GLM\")     , mapping = aes(x = X , y = P)     , col     = \"red\"   ) +   theme_bw() +   labs(     title   = \"Linear Model vs Logistic Model\"   ) print(Figure1.1) #> `geom_smooth()` using method = 'loess' and formula = 'y ~ x' #> `geom_smooth()` using method = 'loess' and formula = 'y ~ x'   #------------------------------------------------------------- ## Correlation among p and fitted values using Gaussian link #------------------------------------------------------------- (lmCor <- cor(Table1.1$y/Table1.1$Nx, Exam1.1.lm1$fitted.values)) #> [1] 0.9574927  #------------------------------------------------------------- ## Correlation among p and fitted values using quasi binomial link #------------------------------------------------------------- (glmCor <- cor(Table1.1$y/Table1.1$Nx, Exam1.1.glm1$fitted.values)) #> [1] 0.9810858"},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam1.2.html","id":null,"dir":"Reference","previous_headings":"","what":"Example1.2 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-9) — Exam1.2","title":"Example1.2 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-9) — Exam1.2","text":"Exam1.2 used see types model effects plotting regression data","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam1.2.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Example1.2 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-9) — Exam1.2","text":"Stroup, W. W. (2012).      Generalized Linear Mixed Models: Modern Concepts, Methods Applications.        CRC Press.","code":""},{"path":[]},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam1.2.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Example1.2 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-9) — Exam1.2","text":"Muhammad Yaseen (myaseen208@gmail.com) Adeela Munawar (adeela.uaf@gmail.com)","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam1.2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example1.2 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-9) — Exam1.2","text":"","code":"#------------------------------------------------------------- ## Plot of multi-batch regression data discussed in Article 1.3 #------------------------------------------------------------- data(Table1.1)  Table1.2$Batch <- factor(x  = Table1.2$Batch)  library(ggplot2) Plot  <-  ggplot(data = Table1.2, mapping = aes(y = Y, x = X, colour = Batch, shape = Batch))      +  geom_point() +  geom_smooth(method = \"lm\", fill =  NA) +  labs(title   = \"Plot of Multi Batch Regression data\") +  theme_bw() Plot #> `geom_smooth()` using formula = 'y ~ x'"},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam2.B.1.html","id":null,"dir":"Reference","previous_headings":"","what":"Example 2.B.1 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-53) — Exam2.B.1","title":"Example 2.B.1 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-53) — Exam2.B.1","text":"Exam2.B.1 used visualize effect lm model statement Gaussian data design matrix","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam2.B.1.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Example 2.B.1 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-53) — Exam2.B.1","text":"Stroup, W. W. (2012).      Generalized Linear Mixed Models: Modern Concepts, Methods Applications.        CRC Press.","code":""},{"path":[]},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam2.B.1.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Example 2.B.1 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-53) — Exam2.B.1","text":"Muhammad Yaseen (myaseen208@gmail.com) Adeela Munawar (adeela.uaf@gmail.com)","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam2.B.1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example 2.B.1 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-53) — Exam2.B.1","text":"","code":"#----------------------------------------------------------------------------------- ## Linear Model  discussed in Example 2.B.1 using simple regression data of Table1.1 #-----------------------------------------------------------------------------------  data(Table1.1)  Exam2.B.1.lm1 <- lm(formula = y~x, data = Table1.1) summary(Exam2.B.1.lm1) #>  #> Call: #> lm(formula = y ~ x, data = Table1.1) #>  #> Residuals: #>     Min      1Q  Median      3Q     Max  #> -4.0909 -0.9727 -0.2182  0.8364  4.3455  #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|)     #> (Intercept)  -1.2727     1.4066  -0.905 0.389136     #> x             1.4364     0.2378   6.041 0.000193 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 2.494 on 9 degrees of freedom #> Multiple R-squared:  0.8022,\tAdjusted R-squared:  0.7802  #> F-statistic:  36.5 on 1 and 9 DF,  p-value: 0.0001925 #>  library(parameters) model_parameters(Exam2.B.1.lm1) #> Parameter   | Coefficient |   SE |        95% CI |  t(9) |      p #> ----------------------------------------------------------------- #> (Intercept) |       -1.27 | 1.41 | [-4.45, 1.91] | -0.90 | 0.389  #> x           |        1.44 | 0.24 | [ 0.90, 1.97] |  6.04 | < .001 #>  #> Uncertainty intervals (equal-tailed) and p-values (two-tailed) computed #>   using a Wald t-distribution approximation.  DesignMatrix.lm1 <- model.matrix (object = Exam2.B.1.lm1) DesignMatrix.lm1 #>    (Intercept)  x #> 1            1  0 #> 2            1  1 #> 3            1  2 #> 4            1  3 #> 5            1  4 #> 6            1  5 #> 7            1  6 #> 8            1  7 #> 9            1  8 #> 10           1  9 #> 11           1 10 #> attr(,\"assign\") #> [1] 0 1"},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam2.B.2.html","id":null,"dir":"Reference","previous_headings":"","what":"Example 2.B.2 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-54) — Exam2.B.2","title":"Example 2.B.2 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-54) — Exam2.B.2","text":"Exam2.B.2 used visualize effect glm model statement binomial data logit probit links.","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam2.B.2.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Example 2.B.2 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-54) — Exam2.B.2","text":"Stroup, W. W. (2012).      Generalized Linear Mixed Models: Modern Concepts, Methods Applications.        CRC Press.","code":""},{"path":[]},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam2.B.2.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Example 2.B.2 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-54) — Exam2.B.2","text":"Muhammad Yaseen (myaseen208@gmail.com) Adeela Munawar (adeela.uaf@gmail.com)","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam2.B.2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example 2.B.2 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-54) — Exam2.B.2","text":"","code":"#----------------------------------------------------------------------------------- ## probitit Model  discussed in Example 2.B.2 using DataExam2.B.2 ## Default link is logit ## using fmaily = binomial gives warning message of no-integer successes #----------------------------------------------------------------------------------- data(DataExam2.B.2) Exam2.B.2glm <- glm(formula = y/n~x, family = quasibinomial(link = \"probit\"), data =  DataExam2.B.2) summary(Exam2.B.2glm) #>  #> Call: #> glm(formula = y/n ~ x, family = quasibinomial(link = \"probit\"),  #>     data = DataExam2.B.2) #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|)     #> (Intercept) -0.45281    0.18202  -2.488 0.034555 *   #> x            0.25157    0.03928   6.405 0.000125 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> (Dispersion parameter for quasibinomial family taken to be 0.05522989) #>  #>     Null deviance: 3.49679  on 10  degrees of freedom #> Residual deviance: 0.61969  on  9  degrees of freedom #> AIC: NA #>  #> Number of Fisher Scoring iterations: 5 #>  library(parameters) model_parameters(Exam2.B.2glm) #> Parameter   | Log-Risk |   SE |         95% CI |  t(9) |      p #> --------------------------------------------------------------- #> (Intercept) |    -0.45 | 0.18 | [-0.81, -0.10] | -2.49 | 0.013  #> x           |     0.25 | 0.04 | [ 0.18,  0.33] |  6.40 | < .001 #>  #> Uncertainty intervals (profile-likelihood) and p-values (two-tailed) #>   computed using a Wald t-distribution approximation."},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam2.B.3.html","id":null,"dir":"Reference","previous_headings":"","what":"Example 2.B.3 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-55) — Exam2.B.3","title":"Example 2.B.3 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-55) — Exam2.B.3","text":"Exam2.B.3 used illustrate one way treatment design Gaussian observations.","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam2.B.3.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Example 2.B.3 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-55) — Exam2.B.3","text":"Stroup, W. W. (2012).      Generalized Linear Mixed Models: Modern Concepts, Methods Applications.        CRC Press.","code":""},{"path":[]},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam2.B.3.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Example 2.B.3 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-55) — Exam2.B.3","text":"Muhammad Yaseen (myaseen208@gmail.com) Adeela Munawar (adeela.uaf@gmail.com)","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam2.B.3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example 2.B.3 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-55) — Exam2.B.3","text":"","code":"#----------------------------------------------------------------------------------- ## Means Model  discussed in Example 2.B.3 using DataExam2.B.3 #----------------------------------------------------------------------------------- Exam2.B.3.lm1 <- lm(formula = y ~ trt, data = DataExam2.B.3) summary(Exam2.B.3.lm1) #>  #> Call: #> lm(formula = y ~ trt, data = DataExam2.B.3) #>  #> Residuals: #>      1      2      3      4      5      6  #> -0.325 -0.125  1.000 -0.100 -1.275  0.825  #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|)     #> (Intercept)  17.7500     1.0013  17.727 5.95e-05 *** #> trt           1.5750     0.4635   3.398   0.0273 *   #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 0.927 on 4 degrees of freedom #> Multiple R-squared:  0.7427,\tAdjusted R-squared:  0.6784  #> F-statistic: 11.55 on 1 and 4 DF,  p-value: 0.02733 #>   #----------------------------------------------------------------------------------- ## Effectss Model  discussed in Example 2.B.3 using DataExam2.B.3 #----------------------------------------------------------------------------------- Exam2.B.3.lm2 <- lm(formula = y ~ 0 + trt, data = DataExam2.B.3) summary(Exam2.B.3.lm2) #>  #> Call: #> lm(formula = y ~ 0 + trt, data = DataExam2.B.3) #>  #> Residuals: #>      1      2      3      4      5      6  #>  9.818 10.018  3.536  2.436 -6.346 -4.246  #>  #> Coefficients: #>     Estimate Std. Error t value Pr(>|t|)    #> trt    9.182      1.398    6.57  0.00123 ** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 7.396 on 5 degrees of freedom #> Multiple R-squared:  0.8962,\tAdjusted R-squared:  0.8754  #> F-statistic: 43.16 on 1 and 5 DF,  p-value: 0.001226 #>  library(parameters) model_parameters(Exam2.B.3.lm2) #> Parameter | Coefficient |   SE |        95% CI | t(5) |     p #> ------------------------------------------------------------- #> trt       |        9.18 | 1.40 | [5.59, 12.77] | 6.57 | 0.001 #>  #> Uncertainty intervals (equal-tailed) and p-values (two-tailed) computed #>   using a Wald t-distribution approximation."},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam2.B.4.html","id":null,"dir":"Reference","previous_headings":"","what":"Example 2.B.4 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-56) — Exam2.B.4","title":"Example 2.B.4 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-56) — Exam2.B.4","text":"Exam2.B.4 used illustrate one way treatment design Binomial observations.","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam2.B.4.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Example 2.B.4 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-56) — Exam2.B.4","text":"Stroup, W. W. (2012).      Generalized Linear Mixed Models: Modern Concepts, Methods Applications.        CRC Press.","code":""},{"path":[]},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam2.B.4.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Example 2.B.4 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-56) — Exam2.B.4","text":"Muhammad Yaseen (myaseen208@gmail.com) Adeela Munawar (adeela.uaf@gmail.com)","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam2.B.4.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example 2.B.4 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-56) — Exam2.B.4","text":"","code":"#----------------------------------------------------------------------------------- ## logit Model  discussed in Example 2.B.2 using DataExam2.B.4 ## Default link is logit ## using fmaily=binomial gives warning message of no-integer successes #----------------------------------------------------------------------------------- data(DataExam2.B.4) DataExam2.B.4$trt <- factor(x =  DataExam2.B.4$trt) Exam2.B.4glm <-                 glm(                       formula = Yij/Nij ~ trt                     , family  =  quasibinomial(link = \"probit\")                     , data    = DataExam2.B.4                     ) summary(Exam2.B.4glm) #>  #> Call: #> glm(formula = Yij/Nij ~ trt, family = quasibinomial(link = \"probit\"),  #>     data = DataExam2.B.4) #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|) #> (Intercept)  -0.7729     0.3737  -2.068    0.130 #> trt2          0.7729     0.5017   1.541    0.221 #> trt3          0.9408     0.5029   1.871    0.158 #>  #> (Dispersion parameter for quasibinomial family taken to be 0.1426701) #>  #>     Null deviance: 1.01671  on 5  degrees of freedom #> Residual deviance: 0.43701  on 3  degrees of freedom #> AIC: NA #>  #> Number of Fisher Scoring iterations: 4 #>  library(parameters) model_parameters(Exam2.B.4glm) #> Parameter   | Log-Risk |   SE |         95% CI |  t(3) |     p #> -------------------------------------------------------------- #> (Intercept) |    -0.77 | 0.37 | [-1.55, -0.07] | -2.07 | 0.039 #> trt [2]     |     0.77 | 0.50 | [-0.19,  1.78] |  1.54 | 0.123 #> trt [3]     |     0.94 | 0.50 | [-0.03,  1.95] |  1.87 | 0.061 #>  #> Uncertainty intervals (profile-likelihood) and p-values (two-tailed) #>   computed using a Wald t-distribution approximation."},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam2.B.5.html","id":null,"dir":"Reference","previous_headings":"","what":"Example 2.B.5 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-57) — Exam2.B.5","title":"Example 2.B.5 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-57) — Exam2.B.5","text":"Exam2.B.5 related multi batch regression data assuming different forms linear models.","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam2.B.5.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Example 2.B.5 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-57) — Exam2.B.5","text":"Stroup, W. W. (2012).      Generalized Linear Mixed Models: Modern Concepts, Methods Applications.        CRC Press.","code":""},{"path":[]},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam2.B.5.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Example 2.B.5 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-57) — Exam2.B.5","text":"Muhammad Yaseen (myaseen208@gmail.com) Adeela Munawar (adeela.uaf@gmail.com)","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam2.B.5.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example 2.B.5 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-57) — Exam2.B.5","text":"","code":"#----------------------------------------------------------------------------------- ## Nested Model with no intercept #-----------------------------------------------------------------------------------  data(Table1.2) Table1.2$Batch <- factor(x = Table1.2$Batch)  Exam2.B.5.lm1 <- lm(formula = Y ~ 0 + Batch + Batch/X, data = Table1.2) DesignMatrix.lm1 <- model.matrix (object = Exam2.B.5.lm1) DesignMatrix.lm1 #>    Batch1 Batch2 Batch3 Batch4 Batch1:X Batch2:X Batch3:X Batch4:X #> 1       1      0      0      0        0        0        0        0 #> 2       1      0      0      0        3        0        0        0 #> 3       1      0      0      0        6        0        0        0 #> 4       1      0      0      0        9        0        0        0 #> 5       1      0      0      0       12        0        0        0 #> 6       1      0      0      0       18        0        0        0 #> 7       1      0      0      0       24        0        0        0 #> 8       1      0      0      0       36        0        0        0 #> 9       1      0      0      0       48        0        0        0 #> 10      0      1      0      0        0        0        0        0 #> 11      0      1      0      0        0        3        0        0 #> 12      0      1      0      0        0        6        0        0 #> 13      0      1      0      0        0        9        0        0 #> 14      0      1      0      0        0       12        0        0 #> 15      0      1      0      0        0       18        0        0 #> 16      0      1      0      0        0       24        0        0 #> 17      0      1      0      0        0       36        0        0 #> 18      0      1      0      0        0       48        0        0 #> 19      0      0      1      0        0        0        0        0 #> 20      0      0      1      0        0        0        3        0 #> 21      0      0      1      0        0        0        6        0 #> 22      0      0      1      0        0        0        9        0 #> 23      0      0      1      0        0        0       12        0 #> 24      0      0      1      0        0        0       18        0 #> 25      0      0      1      0        0        0       24        0 #> 26      0      0      1      0        0        0       36        0 #> 27      0      0      1      0        0        0       48        0 #> 28      0      0      0      1        0        0        0        0 #> 29      0      0      0      1        0        0        0        3 #> 30      0      0      0      1        0        0        0        6 #> 31      0      0      0      1        0        0        0        9 #> 32      0      0      0      1        0        0        0       12 #> 33      0      0      0      1        0        0        0       18 #> 34      0      0      0      1        0        0        0       24 #> 35      0      0      0      1        0        0        0       36 #> 36      0      0      0      1        0        0        0       48 #> attr(,\"assign\") #> [1] 1 1 1 1 2 2 2 2 #> attr(,\"contrasts\") #> attr(,\"contrasts\")$Batch #> [1] \"contr.treatment\" #>   #----------------------------------------------------------------------------------- ## Interaction Model with intercept #----------------------------------------------------------------------------------- Exam2.B.5.lm2 <-lm(formula = Y ~ Batch + X + Batch*X, data  = Table1.2) DesignMatrix.lm2 <-   model.matrix (object = Exam2.B.5.lm2) DesignMatrix.lm2 #>    (Intercept) Batch2 Batch3 Batch4  X Batch2:X Batch3:X Batch4:X #> 1            1      0      0      0  0        0        0        0 #> 2            1      0      0      0  3        0        0        0 #> 3            1      0      0      0  6        0        0        0 #> 4            1      0      0      0  9        0        0        0 #> 5            1      0      0      0 12        0        0        0 #> 6            1      0      0      0 18        0        0        0 #> 7            1      0      0      0 24        0        0        0 #> 8            1      0      0      0 36        0        0        0 #> 9            1      0      0      0 48        0        0        0 #> 10           1      1      0      0  0        0        0        0 #> 11           1      1      0      0  3        3        0        0 #> 12           1      1      0      0  6        6        0        0 #> 13           1      1      0      0  9        9        0        0 #> 14           1      1      0      0 12       12        0        0 #> 15           1      1      0      0 18       18        0        0 #> 16           1      1      0      0 24       24        0        0 #> 17           1      1      0      0 36       36        0        0 #> 18           1      1      0      0 48       48        0        0 #> 19           1      0      1      0  0        0        0        0 #> 20           1      0      1      0  3        0        3        0 #> 21           1      0      1      0  6        0        6        0 #> 22           1      0      1      0  9        0        9        0 #> 23           1      0      1      0 12        0       12        0 #> 24           1      0      1      0 18        0       18        0 #> 25           1      0      1      0 24        0       24        0 #> 26           1      0      1      0 36        0       36        0 #> 27           1      0      1      0 48        0       48        0 #> 28           1      0      0      1  0        0        0        0 #> 29           1      0      0      1  3        0        0        3 #> 30           1      0      0      1  6        0        0        6 #> 31           1      0      0      1  9        0        0        9 #> 32           1      0      0      1 12        0        0       12 #> 33           1      0      0      1 18        0        0       18 #> 34           1      0      0      1 24        0        0       24 #> 35           1      0      0      1 36        0        0       36 #> 36           1      0      0      1 48        0        0       48 #> attr(,\"assign\") #> [1] 0 1 1 1 2 3 3 3 #> attr(,\"contrasts\") #> attr(,\"contrasts\")$Batch #> [1] \"contr.treatment\" #>   #----------------------------------------------------------------------------------- ## Interaction Model with no intercept #----------------------------------------------------------------------------------- Exam2.B.5.lm3 <- lm(formula = Y ~ 0 + Batch + Batch*X, data = Table1.2) DesignMatrix.lm3 <-   model.matrix(object = Exam2.B.5.lm3) DesignMatrix.lm3 #>    Batch1 Batch2 Batch3 Batch4  X Batch2:X Batch3:X Batch4:X #> 1       1      0      0      0  0        0        0        0 #> 2       1      0      0      0  3        0        0        0 #> 3       1      0      0      0  6        0        0        0 #> 4       1      0      0      0  9        0        0        0 #> 5       1      0      0      0 12        0        0        0 #> 6       1      0      0      0 18        0        0        0 #> 7       1      0      0      0 24        0        0        0 #> 8       1      0      0      0 36        0        0        0 #> 9       1      0      0      0 48        0        0        0 #> 10      0      1      0      0  0        0        0        0 #> 11      0      1      0      0  3        3        0        0 #> 12      0      1      0      0  6        6        0        0 #> 13      0      1      0      0  9        9        0        0 #> 14      0      1      0      0 12       12        0        0 #> 15      0      1      0      0 18       18        0        0 #> 16      0      1      0      0 24       24        0        0 #> 17      0      1      0      0 36       36        0        0 #> 18      0      1      0      0 48       48        0        0 #> 19      0      0      1      0  0        0        0        0 #> 20      0      0      1      0  3        0        3        0 #> 21      0      0      1      0  6        0        6        0 #> 22      0      0      1      0  9        0        9        0 #> 23      0      0      1      0 12        0       12        0 #> 24      0      0      1      0 18        0       18        0 #> 25      0      0      1      0 24        0       24        0 #> 26      0      0      1      0 36        0       36        0 #> 27      0      0      1      0 48        0       48        0 #> 28      0      0      0      1  0        0        0        0 #> 29      0      0      0      1  3        0        0        3 #> 30      0      0      0      1  6        0        0        6 #> 31      0      0      0      1  9        0        0        9 #> 32      0      0      0      1 12        0        0       12 #> 33      0      0      0      1 18        0        0       18 #> 34      0      0      0      1 24        0        0       24 #> 35      0      0      0      1 36        0        0       36 #> 36      0      0      0      1 48        0        0       48 #> attr(,\"assign\") #> [1] 1 1 1 1 2 3 3 3 #> attr(,\"contrasts\") #> attr(,\"contrasts\")$Batch #> [1] \"contr.treatment\" #>   #----------------------------------------------------------------------------------- ## Interaction Model with intercept  but omitting X term as main effect #----------------------------------------------------------------------------------- Exam2.B.5.lm4 <- lm(formula = Y ~ Batch + Batch*X, data = Table1.2) DesignMatrix.lm4 <-   model.matrix(object = Exam2.B.5.lm4) DesignMatrix.lm4 #>    (Intercept) Batch2 Batch3 Batch4  X Batch2:X Batch3:X Batch4:X #> 1            1      0      0      0  0        0        0        0 #> 2            1      0      0      0  3        0        0        0 #> 3            1      0      0      0  6        0        0        0 #> 4            1      0      0      0  9        0        0        0 #> 5            1      0      0      0 12        0        0        0 #> 6            1      0      0      0 18        0        0        0 #> 7            1      0      0      0 24        0        0        0 #> 8            1      0      0      0 36        0        0        0 #> 9            1      0      0      0 48        0        0        0 #> 10           1      1      0      0  0        0        0        0 #> 11           1      1      0      0  3        3        0        0 #> 12           1      1      0      0  6        6        0        0 #> 13           1      1      0      0  9        9        0        0 #> 14           1      1      0      0 12       12        0        0 #> 15           1      1      0      0 18       18        0        0 #> 16           1      1      0      0 24       24        0        0 #> 17           1      1      0      0 36       36        0        0 #> 18           1      1      0      0 48       48        0        0 #> 19           1      0      1      0  0        0        0        0 #> 20           1      0      1      0  3        0        3        0 #> 21           1      0      1      0  6        0        6        0 #> 22           1      0      1      0  9        0        9        0 #> 23           1      0      1      0 12        0       12        0 #> 24           1      0      1      0 18        0       18        0 #> 25           1      0      1      0 24        0       24        0 #> 26           1      0      1      0 36        0       36        0 #> 27           1      0      1      0 48        0       48        0 #> 28           1      0      0      1  0        0        0        0 #> 29           1      0      0      1  3        0        0        3 #> 30           1      0      0      1  6        0        0        6 #> 31           1      0      0      1  9        0        0        9 #> 32           1      0      0      1 12        0        0       12 #> 33           1      0      0      1 18        0        0       18 #> 34           1      0      0      1 24        0        0       24 #> 35           1      0      0      1 36        0        0       36 #> 36           1      0      0      1 48        0        0       48 #> attr(,\"assign\") #> [1] 0 1 1 1 2 3 3 3 #> attr(,\"contrasts\") #> attr(,\"contrasts\")$Batch #> [1] \"contr.treatment\" #>"},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam2.B.6.html","id":null,"dir":"Reference","previous_headings":"","what":"Example 2.B.6 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-58) — Exam2.B.6","title":"Example 2.B.6 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-58) — Exam2.B.6","text":"Exam2.B.6 related multi batch regression data assuming different forms linear models keeping batch effect random.","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam2.B.6.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Example 2.B.6 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-58) — Exam2.B.6","text":"Stroup, W. W. (2012).      Generalized Linear Mixed Models: Modern Concepts, Methods Applications.        CRC Press.","code":""},{"path":[]},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam2.B.6.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Example 2.B.6 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-58) — Exam2.B.6","text":"Muhammad Yaseen (myaseen208@gmail.com) Adeela Munawar (adeela.uaf@gmail.com)","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam2.B.6.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example 2.B.6 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-58) — Exam2.B.6","text":"","code":"#----------------------------------------------------------------------------------- ## Nested Model with no intercept #-----------------------------------------------------------------------------------  data(Table1.2) Table1.2$Batch <- factor(x = Table1.2$Batch) library(nlme) Exam2.B.6fm1 <- lme(       fixed       = Y ~ X     , data        = Table1.2     , random      = list(Batch = pdDiag(~1), X = pdDiag(~1))     , method      = c(\"REML\", \"ML\")[1]     ) Exam2.B.6fm1 #> Linear mixed-effects model fit by REML #>   Data: Table1.2  #>   Log-restricted-likelihood: -87.76411 #>   Fixed: Y ~ X  #> (Intercept)           X  #>  96.4894724   0.1241651  #>  #> Random effects: #>  Formula: ~1 | Batch #>         (Intercept) #> StdDev:    2.511884 #>  #>  Formula: ~1 | X %in% Batch #>         (Intercept)  Residual #> StdDev:    2.192282 0.9529553 #>  #> Number of Observations: 36 #> Number of Groups:  #>        Batch X %in% Batch  #>            4           36  library(broom.mixed) tidy(Exam2.B.6fm1) #> Warning: ran_pars not yet implemented for multiple levels of nesting #> # A tibble: 2 × 7 #>   effect term        estimate std.error    df statistic  p.value #>   <chr>  <chr>          <dbl>     <dbl> <dbl>     <dbl>    <dbl> #> 1 fixed  (Intercept)   96.5      1.39      31     69.2  1.52e-35 #> 2 fixed  X              0.124    0.0263    31      4.72 4.76e- 5"},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam2.B.7.html","id":null,"dir":"Reference","previous_headings":"","what":"Example 2.B.7 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-60) — Exam2.B.7","title":"Example 2.B.7 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-60) — Exam2.B.7","text":"Exam2.B.7 related multi batch regression data assuming different forms linear models factorial experiment.","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam2.B.7.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Example 2.B.7 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-60) — Exam2.B.7","text":"Stroup, W. W. (2012).      Generalized Linear Mixed Models: Modern Concepts, Methods Applications.        CRC Press.","code":""},{"path":[]},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam2.B.7.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Example 2.B.7 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-60) — Exam2.B.7","text":"Muhammad Yaseen (myaseen208@gmail.com) Adeela Munawar (adeela.uaf@gmail.com)","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam2.B.7.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example 2.B.7 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-60) — Exam2.B.7","text":"","code":"#----------------------------------------------------------------------------------- ## Classical main effects and Interaction Model #----------------------------------------------------------------------------------- data(DataExam2.B.7) DataExam2.B.7$a <- factor(x = DataExam2.B.7$a) DataExam2.B.7$b <- factor(x = DataExam2.B.7$b) Exam2.B.7.lm1 <- lm(formula = y~ a + b + a*b, data = DataExam2.B.7) #----------------------------------------------------------------------------------- ## One way treatment effects model #----------------------------------------------------------------------------------- DesignMatrix.lm1 <- model.matrix (object = Exam2.B.7.lm1) DesignMatrix2.B.7.2 <- DesignMatrix.lm1[,!colnames(DesignMatrix.lm1) %in% c(\"a2\",\"b\")]  lmfit2 <- lm.fit(x = DesignMatrix2.B.7.2, y = DataExam2.B.7$y) Coefficientslmfit2 <- coef( object = lmfit2) Coefficientslmfit2 #> (Intercept)          b2       a2:b2  #>      41.050      -2.800      -6.725   #----------------------------------------------------------------------------------- ## One way treatment effects model without intercept #----------------------------------------------------------------------------------- DesignMatrix2.B.7.3    <-   as.matrix(DesignMatrix.lm1[,!colnames(DesignMatrix.lm1) %in% c(\"(Intercept)\",\"a2\",\"b\")])  lmfit3 <- lm.fit(x = DesignMatrix2.B.7.3, y = DataExam2.B.7$y) Coefficientslmfit3 <- coef( object = lmfit3) Coefficientslmfit3 #>     b2  a2:b2  #> 38.250 -6.725   #----------------------------------------------------------------------------------- ## Nested Model (both models give the same result) #----------------------------------------------------------------------------------- Exam2.B.7.lm4 <- lm(formula = y~ a + a/b, data  = DataExam2.B.7) summary(Exam2.B.7.lm4) #>  #> Call: #> lm(formula = y ~ a + a/b, data = DataExam2.B.7) #>  #> Residuals: #>    Min     1Q Median     3Q    Max  #> -7.325 -1.769 -0.475  2.581  6.775  #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|)     #> (Intercept)   40.975      2.164  18.933 2.64e-10 *** #> a2             0.150      3.061   0.049  0.96172     #> a1:b2         -2.725      3.061  -0.890  0.39078     #> a2:b2         -9.600      3.061  -3.137  0.00859 **  #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 4.328 on 12 degrees of freedom #> Multiple R-squared:  0.5188,\tAdjusted R-squared:  0.3985  #> F-statistic: 4.313 on 3 and 12 DF,  p-value: 0.02787 #>   Exam2.B.7.lm4 <- lm(formula = y~ a + a*b, data = DataExam2.B.7) summary(Exam2.B.7.lm4) #>  #> Call: #> lm(formula = y ~ a + a * b, data = DataExam2.B.7) #>  #> Residuals: #>    Min     1Q Median     3Q    Max  #> -7.325 -1.769 -0.475  2.581  6.775  #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|)     #> (Intercept)   40.975      2.164  18.933 2.64e-10 *** #> a2             0.150      3.061   0.049    0.962     #> b2            -2.725      3.061  -0.890    0.391     #> a2:b2         -6.875      4.328  -1.588    0.138     #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 4.328 on 12 degrees of freedom #> Multiple R-squared:  0.5188,\tAdjusted R-squared:  0.3985  #> F-statistic: 4.313 on 3 and 12 DF,  p-value: 0.02787 #>"},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam3.2.html","id":null,"dir":"Reference","previous_headings":"","what":"Example 3.2 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-73) — Exam3.2","title":"Example 3.2 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-73) — Exam3.2","text":"Exam3.2 used binomial data, two treatment samples","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam3.2.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Example 3.2 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-73) — Exam3.2","text":"Stroup, W. W. (2012).      Generalized Linear Mixed Models: Modern Concepts, Methods Applications.        CRC Press.","code":""},{"path":[]},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam3.2.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Example 3.2 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-73) — Exam3.2","text":"Muhammad Yaseen (myaseen208@gmail.com) Adeela Munawar (adeela.uaf@gmail.com)","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam3.2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example 3.2 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-73) — Exam3.2","text":"","code":"#------------------------------------------------------------- ## Linear Model and results discussed in Article 1.2.1 after Table1.1 #------------------------------------------------------------- data(DataSet3.1) DataSet3.1$trt <- factor(x =  DataSet3.1$trt) Exam3.2.glm <- glm(formula =  F/N~trt, family =  quasibinomial(link = \"logit\"), data =  DataSet3.1) summary(Exam3.2.glm) #>  #> Call: #> glm(formula = F/N ~ trt, family = quasibinomial(link = \"logit\"),  #>     data = DataSet3.1) #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|)     #> (Intercept)  -2.2473     0.2168 -10.366 5.12e-09 *** #> trt1          1.3646     0.2581   5.287 5.01e-05 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> (Dispersion parameter for quasibinomial family taken to be 0.04062774) #>  #>     Null deviance: 2.21652  on 19  degrees of freedom #> Residual deviance: 0.92684  on 18  degrees of freedom #> AIC: NA #>  #> Number of Fisher Scoring iterations: 5 #>  library(parameters) model_parameters(Exam3.2.glm) #> Parameter   | Log-Odds |   SE |         95% CI |  t(18) |      p #> ---------------------------------------------------------------- #> (Intercept) |    -2.25 | 0.22 | [-2.70, -1.84] | -10.37 | < .001 #> trt [1]     |     1.36 | 0.26 | [ 0.87,  1.89] |   5.29 | < .001 #>  #> Uncertainty intervals (profile-likelihood) and p-values (two-tailed) #>   computed using a Wald t-distribution approximation.  #------------------------------------------------------------- ## Individula least squares treatment means #------------------------------------------------------------- library(emmeans) #> Welcome to emmeans. #> Caution: You lose important information if you filter this package's results. #> See '? untidy' emmeans(object  = Exam3.2.glm, specs   = \"trt\") #>  trt emmean    SE  df asymp.LCL asymp.UCL #>  0   -2.247 0.217 Inf     -2.67    -1.822 #>  1   -0.883 0.140 Inf     -1.16    -0.608 #>  #> Results are given on the logit (not the response) scale.  #> Confidence level used: 0.95  emmeans(object  = Exam3.2.glm, specs   = \"trt\", type = \"response\") #>  trt   prob     SE  df asymp.LCL asymp.UCL #>  0   0.0956 0.0187 Inf    0.0646     0.139 #>  1   0.2926 0.0290 Inf    0.2392     0.352 #>  #> Confidence level used: 0.95  #> Intervals are back-transformed from the logit scale   #--------------------------------------------------- ## Over all mean #--------------------------------------------------- library(phia) #> Loading required package: car #> Loading required package: carData list3.2 <-   list(trt = c(\"0\" = 0.5, \"1\" = 0.5 )) testFactors(model  =  Exam3.2.glm, levels =  list3.2 ) #>  #> Call: base::tryCatch(model = base::withCallingHandlers({     NULL     base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/tmp/RtmpLnzsD7/callr-fun-51ea920e40b\"),          base::list(envir = .GlobalEnv, quote = TRUE)), envir = .GlobalEnv,          quote = TRUE), file = \"/tmp/RtmpLnzsD7/callr-res-51ea773c12d7\",          compress = FALSE)     base::flush(base::stdout())     base::flush(base::stderr())     NULL     base::invisible() }, error = function(e) {     {         callr_data <- base::as.environment(\"tools:callr\")$`__callr_data__`         err <- callr_data$err         if (FALSE) {             base::assign(\".Traceback\", base::.traceback(4), envir = callr_data)             utils::dump.frames(\"__callr_dump__\")             base::assign(\".Last.dump\", .GlobalEnv$`__callr_dump__`,                  envir = callr_data)             base::rm(\"__callr_dump__\", envir = .GlobalEnv)         }         e <- err$process_call(e)         e2 <- err$new_error(\"error in callr subprocess\")         class <- base::class         class(e2) <- base::c(\"callr_remote_error\", class(e2))         e2 <- err$add_trace_back(e2)         cut <- base::which(e2$trace$scope == \"global\")[1]         if (!base::is.na(cut)) {             e2$trace <- e2$trace[-(1:cut), ]         }         base::saveRDS(base::list(\"error\", e2, e), file = base::paste0(\"/tmp/RtmpLnzsD7/callr-res-51ea773c12d7\",              \".error\"))     } }, interrupt = function(e) {     {         callr_data <- base::as.environment(\"tools:callr\")$`__callr_data__`         err <- callr_data$err         if (FALSE) {             base::assign(\".Traceback\", base::.traceback(4), envir = callr_data)             utils::dump.frames(\"__callr_dump__\")             base::assign(\".Last.dump\", .GlobalEnv$`__callr_dump__`,                  envir = callr_data)             base::rm(\"__callr_dump__\", envir = .GlobalEnv)         }         e <- err$process_call(e)         e2 <- err$new_error(\"error in callr subprocess\")         class <- base::class         class(e2) <- base::c(\"callr_remote_error\", class(e2))         e2 <- err$add_trace_back(e2)         cut <- base::which(e2$trace$scope == \"global\")[1]         if (!base::is.na(cut)) {             e2$trace <- e2$trace[-(1:cut), ]         }         base::saveRDS(base::list(\"error\", e2, e), file = base::paste0(\"/tmp/RtmpLnzsD7/callr-res-51ea773c12d7\",              \".error\"))     } }, callr_message = function(e) {     base::try(base::signalCondition(e)) }), error = function(e) {     NULL     if (FALSE) {         base::try(base::stop(e))     }     else {         base::invisible()     } }, interrupt = function(e) {     NULL     if (FALSE) {         e     }     else {         base::invisible()     } })  #>  #> Term (Intercept)  #>  #> Adjusted mean: #>            #> 0.1729334  #>  #> Std. Error of link function: #>            #> 0.1290583  #>  #> Linear hypothesis test #>  #> Hypothesis: #> (Intercept)  + 0.5 trt1 = 0 #>  #> Model 1: restricted model #> Model 2: F/N ~ trt #>  #>   Res.Df Df    Chisq Pr(>Chisq)     #> 1     19                            #> 2     18  1 147.0432 < 2.22e-16 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #> ------  #--------------------------------------------------- ## Repairwise treatment means estimate #--------------------------------------------------- contrast(emmeans(object  = Exam3.2.glm, specs   = \"trt\")) #>  contrast    estimate    SE  df z.ratio p.value #>  trt0 effect   -0.682 0.129 Inf  -5.287  <.0001 #>  trt1 effect    0.682 0.129 Inf   5.287  <.0001 #>  #> Results are given on the log odds ratio (not the response) scale.  #> P value adjustment: fdr method for 2 tests  contrast(emmeans(object  = Exam3.2.glm, specs   = \"trt\", type = \"response\")) #>  contrast    odds.ratio     SE  df null z.ratio p.value #>  trt0 effect      0.505 0.0652 Inf    1  -5.287  <.0001 #>  trt1 effect      1.978 0.2553 Inf    1   5.287  <.0001 #>  #> P value adjustment: fdr method for 2 tests  #> Tests are performed on the log odds ratio scale"},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam3.3.html","id":null,"dir":"Reference","previous_headings":"","what":"Example 3.3 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-77) — Exam3.3","title":"Example 3.3 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-77) — Exam3.3","text":"Exam3.3 use RCBD data fixed location effect different forms estimable functions shown example.","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam3.3.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Example 3.3 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-77) — Exam3.3","text":"Stroup, W. W. (2012).      Generalized Linear Mixed Models: Modern Concepts, Methods Applications.        CRC Press.","code":""},{"path":[]},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam3.3.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Example 3.3 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-77) — Exam3.3","text":"Muhammad Yaseen (myaseen208@gmail.com) Adeela Munawar (adeela.uaf@gmail.com)","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam3.3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example 3.3 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-77) — Exam3.3","text":"","code":"#----------------------------------------------------------------------------------- ## linear model for Gaussian data #----------------------------------------------------------------------------------- data(DataSet3.2) DataSet3.2$trt <- factor(x = DataSet3.2$trt, level = c(3,0,1,2)) DataSet3.2$loc <- factor(x = DataSet3.2$loc, level = c(8, 1, 2, 3, 4, 5, 6, 7))  levels(DataSet3.2$trt) #> [1] \"3\" \"0\" \"1\" \"2\" levels(DataSet3.2$loc) #> [1] \"8\" \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\"  Exam3.3.lm1 <- lm(formula = Y~ trt + loc, data = DataSet3.2) summary( Exam3.3.lm1 ) #>  #> Call: #> lm(formula = Y ~ trt + loc, data = DataSet3.2) #>  #> Residuals: #>     Min      1Q  Median      3Q     Max  #> -2.7750 -0.7875  0.3625  1.0813  2.3000  #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|)     #> (Intercept)  28.2500     0.9945  28.407  < 2e-16 *** #> trt0         -2.1375     0.8481  -2.520  0.01988 *   #> trt1         -2.9500     0.8481  -3.478  0.00224 **  #> trt2          0.2875     0.8481   0.339  0.73798     #> loc1         -0.9750     1.1994  -0.813  0.42538     #> loc2         -3.2500     1.1994  -2.710  0.01312 *   #> loc3         -1.6750     1.1994  -1.397  0.17713     #> loc4         -0.3500     1.1994  -0.292  0.77329     #> loc5          0.8250     1.1994   0.688  0.49907     #> loc6         -0.3000     1.1994  -0.250  0.80492     #> loc7         -3.5750     1.1994  -2.981  0.00713 **  #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 1.696 on 21 degrees of freedom #> Multiple R-squared:  0.6818,\tAdjusted R-squared:  0.5303  #> F-statistic:   4.5 on 10 and 21 DF,  p-value: 0.001795 #>   #------------------------------------------------------------- ## Individual least squares treatment means #------------------------------------------------------------- library(emmeans) (Lsm3.3 <- emmeans(object  = Exam3.3.lm1, specs = ~trt)) #>  trt emmean  SE df lower.CL upper.CL #>  3     27.1 0.6 21     25.8     28.3 #>  0     24.9 0.6 21     23.7     26.2 #>  1     24.1 0.6 21     22.9     25.4 #>  2     27.4 0.6 21     26.1     28.6 #>  #> Results are averaged over the levels of: loc  #> Confidence level used: 0.95   #--------------------------------------------------- ## Pairwise treatment means estimate #--------------------------------------------------- contrast(object = Lsm3.3 , method = \"pairwise\") #>  contrast    estimate    SE df t.ratio p.value #>  trt3 - trt0    2.138 0.848 21   2.520  0.0856 #>  trt3 - trt1    2.950 0.848 21   3.478  0.0111 #>  trt3 - trt2   -0.287 0.848 21  -0.339  0.9862 #>  trt0 - trt1    0.812 0.848 21   0.958  0.7742 #>  trt0 - trt2   -2.425 0.848 21  -2.859  0.0430 #>  trt1 - trt2   -3.237 0.848 21  -3.817  0.0051 #>  #> Results are averaged over the levels of: loc  #> P value adjustment: tukey method for comparing a family of 4 estimates   #--------------------------------------------------- ## Revpairwise treatment means estimate #--------------------------------------------------- contrast(object = Lsm3.3, method = \"revpairwise\") #>  contrast    estimate    SE df t.ratio p.value #>  trt0 - trt3   -2.138 0.848 21  -2.520  0.0856 #>  trt1 - trt3   -2.950 0.848 21  -3.478  0.0111 #>  trt1 - trt0   -0.812 0.848 21  -0.958  0.7742 #>  trt2 - trt3    0.287 0.848 21   0.339  0.9862 #>  trt2 - trt0    2.425 0.848 21   2.859  0.0430 #>  trt2 - trt1    3.237 0.848 21   3.817  0.0051 #>  #> Results are averaged over the levels of: loc  #> P value adjustment: tukey method for comparing a family of 4 estimates  #------------------------------------------------------- ## LSM Trt0 (This term is used in Walter Stroups' book) #------------------------------------------------------- contrast(        object = emmeans(object  = Exam3.3.lm1, specs   = ~ trt)      , list(trt = c(0, 1, 0, 0))      ) #>  contrast estimate  SE df t.ratio p.value #>  trt          24.9 0.6 21  41.605  <.0001 #>  #> Results are averaged over the levels of: loc   library(phia) testFactors(model  =  Exam3.3.lm1, levels =  list(trt = c(\"0\" = 1))) #>  #> Call: base::tryCatch(model = base::withCallingHandlers({     NULL     base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/tmp/RtmpLnzsD7/callr-fun-51ea920e40b\"),          base::list(envir = .GlobalEnv, quote = TRUE)), envir = .GlobalEnv,          quote = TRUE), file = \"/tmp/RtmpLnzsD7/callr-res-51ea773c12d7\",          compress = FALSE)     base::flush(base::stdout())     base::flush(base::stderr())     NULL     base::invisible() }, error = function(e) {     {         callr_data <- base::as.environment(\"tools:callr\")$`__callr_data__`         err <- callr_data$err         if (FALSE) {             base::assign(\".Traceback\", base::.traceback(4), envir = callr_data)             utils::dump.frames(\"__callr_dump__\")             base::assign(\".Last.dump\", .GlobalEnv$`__callr_dump__`,                  envir = callr_data)             base::rm(\"__callr_dump__\", envir = .GlobalEnv)         }         e <- err$process_call(e)         e2 <- err$new_error(\"error in callr subprocess\")         class <- base::class         class(e2) <- base::c(\"callr_remote_error\", class(e2))         e2 <- err$add_trace_back(e2)         cut <- base::which(e2$trace$scope == \"global\")[1]         if (!base::is.na(cut)) {             e2$trace <- e2$trace[-(1:cut), ]         }         base::saveRDS(base::list(\"error\", e2, e), file = base::paste0(\"/tmp/RtmpLnzsD7/callr-res-51ea773c12d7\",              \".error\"))     } }, interrupt = function(e) {     {         callr_data <- base::as.environment(\"tools:callr\")$`__callr_data__`         err <- callr_data$err         if (FALSE) {             base::assign(\".Traceback\", base::.traceback(4), envir = callr_data)             utils::dump.frames(\"__callr_dump__\")             base::assign(\".Last.dump\", .GlobalEnv$`__callr_dump__`,                  envir = callr_data)             base::rm(\"__callr_dump__\", envir = .GlobalEnv)         }         e <- err$process_call(e)         e2 <- err$new_error(\"error in callr subprocess\")         class <- base::class         class(e2) <- base::c(\"callr_remote_error\", class(e2))         e2 <- err$add_trace_back(e2)         cut <- base::which(e2$trace$scope == \"global\")[1]         if (!base::is.na(cut)) {             e2$trace <- e2$trace[-(1:cut), ]         }         base::saveRDS(base::list(\"error\", e2, e), file = base::paste0(\"/tmp/RtmpLnzsD7/callr-res-51ea773c12d7\",              \".error\"))     } }, callr_message = function(e) {     base::try(base::signalCondition(e)) }), error = function(e) {     NULL     if (FALSE) {         base::try(base::stop(e))     }     else {         base::invisible()     } }, interrupt = function(e) {     NULL     if (FALSE) {         e     }     else {         base::invisible()     } })  #>  #> Term (Intercept)  #>  #> Adjusted mean: #>        #> 24.95  #>  #> Std. Error: #>            #> 0.5996899  #>  #> Linear hypothesis test #>  #> Hypothesis: #> (Intercept)  + trt0  + 0.125 loc1  + 0.125 loc2  + 0.125 loc3  + 0.125 loc4  + 0.125 loc5  + 0.125 loc6  + 0.125 loc7 = 0 #>  #> Model 1: restricted model #> Model 2: Y ~ trt + loc #>  #>   Res.Df      RSS Df Sum of Sq        F     Pr(>F)     #> 1     22 5040.437                                      #> 2     21   60.417  1   4980.02 1730.962 < 2.22e-16 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #> ------   #------------------------------------------------------- ## LSM Trt0 alt(This term is used in Walter Stroups' book) #------------------------------------------------------- # contrast( #        object = emmeans(object  = Exam3.3.lm1, specs   = ~ trt + loc) #      , list( #         trt = c(0, 1, 0, 0) #       , loc = c(1, 0, 0, 0, 0, 0, 0, 0) #        ) #      ) # # # list3.3.2 <- #   list( #         trt = c(\"0\" = 1 ) #       , loc = c(\"1\" = 0, \"2\" = 0,\"3\" = 0,\"4\" = 0,\"5\" = 0,\"6\" = 0,\"7\" = 0) #   ) # testFactors(model  =  Exam3.3.lm1, levels =  list3.3.2)  #------------------------------------------------------- ##  Trt0 Vs Trt1 #------------------------------------------------------- contrast(     emmeans(object  = Exam3.3.lm1, specs = ~trt)   , list(trt = c(0, 1, -1, 0))   ) #>  contrast estimate    SE df t.ratio p.value #>  trt         0.812 0.848 21   0.958  0.3489 #>  #> Results are averaged over the levels of: loc   testFactors(model  =  Exam3.3.lm1, levels =  list(trt = c(\"0\" = 1, \"1\" = -1))) #>  #> Call: base::tryCatch(model = base::withCallingHandlers({     NULL     base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/tmp/RtmpLnzsD7/callr-fun-51ea920e40b\"),          base::list(envir = .GlobalEnv, quote = TRUE)), envir = .GlobalEnv,          quote = TRUE), file = \"/tmp/RtmpLnzsD7/callr-res-51ea773c12d7\",          compress = FALSE)     base::flush(base::stdout())     base::flush(base::stderr())     NULL     base::invisible() }, error = function(e) {     {         callr_data <- base::as.environment(\"tools:callr\")$`__callr_data__`         err <- callr_data$err         if (FALSE) {             base::assign(\".Traceback\", base::.traceback(4), envir = callr_data)             utils::dump.frames(\"__callr_dump__\")             base::assign(\".Last.dump\", .GlobalEnv$`__callr_dump__`,                  envir = callr_data)             base::rm(\"__callr_dump__\", envir = .GlobalEnv)         }         e <- err$process_call(e)         e2 <- err$new_error(\"error in callr subprocess\")         class <- base::class         class(e2) <- base::c(\"callr_remote_error\", class(e2))         e2 <- err$add_trace_back(e2)         cut <- base::which(e2$trace$scope == \"global\")[1]         if (!base::is.na(cut)) {             e2$trace <- e2$trace[-(1:cut), ]         }         base::saveRDS(base::list(\"error\", e2, e), file = base::paste0(\"/tmp/RtmpLnzsD7/callr-res-51ea773c12d7\",              \".error\"))     } }, interrupt = function(e) {     {         callr_data <- base::as.environment(\"tools:callr\")$`__callr_data__`         err <- callr_data$err         if (FALSE) {             base::assign(\".Traceback\", base::.traceback(4), envir = callr_data)             utils::dump.frames(\"__callr_dump__\")             base::assign(\".Last.dump\", .GlobalEnv$`__callr_dump__`,                  envir = callr_data)             base::rm(\"__callr_dump__\", envir = .GlobalEnv)         }         e <- err$process_call(e)         e2 <- err$new_error(\"error in callr subprocess\")         class <- base::class         class(e2) <- base::c(\"callr_remote_error\", class(e2))         e2 <- err$add_trace_back(e2)         cut <- base::which(e2$trace$scope == \"global\")[1]         if (!base::is.na(cut)) {             e2$trace <- e2$trace[-(1:cut), ]         }         base::saveRDS(base::list(\"error\", e2, e), file = base::paste0(\"/tmp/RtmpLnzsD7/callr-res-51ea773c12d7\",              \".error\"))     } }, callr_message = function(e) {     base::try(base::signalCondition(e)) }), error = function(e) {     NULL     if (FALSE) {         base::try(base::stop(e))     }     else {         base::invisible()     } }, interrupt = function(e) {     NULL     if (FALSE) {         e     }     else {         base::invisible()     } })  #>  #> Term (Intercept)  #>  #> Adjusted mean: #>         #> 0.8125  #>  #> Std. Error: #>            #> 0.8480896  #>  #> Linear hypothesis test #>  #> Hypothesis: #> trt0 - trt1 = 0 #>  #> Model 1: restricted model #> Model 2: Y ~ trt + loc #>  #>   Res.Df      RSS Df Sum of Sq       F  Pr(>F) #> 1     22 63.05812                              #> 2     21 60.41750  1  2.640625 0.91783 0.34895 #> ------  #------------------------------------------------------- ##  average Trt0 + Trt1 #------------------------------------------------------- contrast(     emmeans(object  = Exam3.3.lm1, specs = ~trt)   , list(trt = c(0, 1/2, 1/2, 0))   ) #>  contrast estimate    SE df t.ratio p.value #>  trt          24.5 0.424 21  57.880  <.0001 #>  #> Results are averaged over the levels of: loc   testFactors(model  =  Exam3.3.lm1, levels =  list(trt = c(\"0\" = 0.5 , \"1\" = 0.5))) #>  #> Call: base::tryCatch(model = base::withCallingHandlers({     NULL     base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/tmp/RtmpLnzsD7/callr-fun-51ea920e40b\"),          base::list(envir = .GlobalEnv, quote = TRUE)), envir = .GlobalEnv,          quote = TRUE), file = \"/tmp/RtmpLnzsD7/callr-res-51ea773c12d7\",          compress = FALSE)     base::flush(base::stdout())     base::flush(base::stderr())     NULL     base::invisible() }, error = function(e) {     {         callr_data <- base::as.environment(\"tools:callr\")$`__callr_data__`         err <- callr_data$err         if (FALSE) {             base::assign(\".Traceback\", base::.traceback(4), envir = callr_data)             utils::dump.frames(\"__callr_dump__\")             base::assign(\".Last.dump\", .GlobalEnv$`__callr_dump__`,                  envir = callr_data)             base::rm(\"__callr_dump__\", envir = .GlobalEnv)         }         e <- err$process_call(e)         e2 <- err$new_error(\"error in callr subprocess\")         class <- base::class         class(e2) <- base::c(\"callr_remote_error\", class(e2))         e2 <- err$add_trace_back(e2)         cut <- base::which(e2$trace$scope == \"global\")[1]         if (!base::is.na(cut)) {             e2$trace <- e2$trace[-(1:cut), ]         }         base::saveRDS(base::list(\"error\", e2, e), file = base::paste0(\"/tmp/RtmpLnzsD7/callr-res-51ea773c12d7\",              \".error\"))     } }, interrupt = function(e) {     {         callr_data <- base::as.environment(\"tools:callr\")$`__callr_data__`         err <- callr_data$err         if (FALSE) {             base::assign(\".Traceback\", base::.traceback(4), envir = callr_data)             utils::dump.frames(\"__callr_dump__\")             base::assign(\".Last.dump\", .GlobalEnv$`__callr_dump__`,                  envir = callr_data)             base::rm(\"__callr_dump__\", envir = .GlobalEnv)         }         e <- err$process_call(e)         e2 <- err$new_error(\"error in callr subprocess\")         class <- base::class         class(e2) <- base::c(\"callr_remote_error\", class(e2))         e2 <- err$add_trace_back(e2)         cut <- base::which(e2$trace$scope == \"global\")[1]         if (!base::is.na(cut)) {             e2$trace <- e2$trace[-(1:cut), ]         }         base::saveRDS(base::list(\"error\", e2, e), file = base::paste0(\"/tmp/RtmpLnzsD7/callr-res-51ea773c12d7\",              \".error\"))     } }, callr_message = function(e) {     base::try(base::signalCondition(e)) }), error = function(e) {     NULL     if (FALSE) {         base::try(base::stop(e))     }     else {         base::invisible()     } }, interrupt = function(e) {     NULL     if (FALSE) {         e     }     else {         base::invisible()     } })  #>  #> Term (Intercept)  #>  #> Adjusted mean: #>           #> 24.54375  #>  #> Std. Error: #>            #> 0.4240448  #>  #> Linear hypothesis test #>  #> Hypothesis: #> (Intercept)  + 0.5 trt0  + 0.5 trt1  + 0.125 loc1  + 0.125 loc2  + 0.125 loc3  + 0.125 loc4  + 0.125 loc5  + 0.125 loc6  + 0.125 loc7 = 0 #>  #> Model 1: restricted model #> Model 2: Y ~ trt + loc #>  #>   Res.Df      RSS Df Sum of Sq        F     Pr(>F)     #> 1     22 9698.748                                      #> 2     21   60.417  1  9638.331 3350.105 < 2.22e-16 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #> ------  #------------------------------------------------------- ##  average Trt0+2+3 #------------------------------------------------------- contrast(     emmeans(object  = Exam3.3.lm1, specs = ~trt)   , list(trt = c(1/3, 1/3, 0, 1/3))   ) #>  contrast estimate    SE df t.ratio p.value #>  trt          26.5 0.346 21  76.454  <.0001 #>  #> Results are averaged over the levels of: loc   testFactors(model  =  Exam3.3.lm1, levels = list(trt = c(\"0\" = 1/3,\"2\" = 1/3,\"3\" = 1/3))) #>  #> Call: base::tryCatch(model = base::withCallingHandlers({     NULL     base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/tmp/RtmpLnzsD7/callr-fun-51ea920e40b\"),          base::list(envir = .GlobalEnv, quote = TRUE)), envir = .GlobalEnv,          quote = TRUE), file = \"/tmp/RtmpLnzsD7/callr-res-51ea773c12d7\",          compress = FALSE)     base::flush(base::stdout())     base::flush(base::stderr())     NULL     base::invisible() }, error = function(e) {     {         callr_data <- base::as.environment(\"tools:callr\")$`__callr_data__`         err <- callr_data$err         if (FALSE) {             base::assign(\".Traceback\", base::.traceback(4), envir = callr_data)             utils::dump.frames(\"__callr_dump__\")             base::assign(\".Last.dump\", .GlobalEnv$`__callr_dump__`,                  envir = callr_data)             base::rm(\"__callr_dump__\", envir = .GlobalEnv)         }         e <- err$process_call(e)         e2 <- err$new_error(\"error in callr subprocess\")         class <- base::class         class(e2) <- base::c(\"callr_remote_error\", class(e2))         e2 <- err$add_trace_back(e2)         cut <- base::which(e2$trace$scope == \"global\")[1]         if (!base::is.na(cut)) {             e2$trace <- e2$trace[-(1:cut), ]         }         base::saveRDS(base::list(\"error\", e2, e), file = base::paste0(\"/tmp/RtmpLnzsD7/callr-res-51ea773c12d7\",              \".error\"))     } }, interrupt = function(e) {     {         callr_data <- base::as.environment(\"tools:callr\")$`__callr_data__`         err <- callr_data$err         if (FALSE) {             base::assign(\".Traceback\", base::.traceback(4), envir = callr_data)             utils::dump.frames(\"__callr_dump__\")             base::assign(\".Last.dump\", .GlobalEnv$`__callr_dump__`,                  envir = callr_data)             base::rm(\"__callr_dump__\", envir = .GlobalEnv)         }         e <- err$process_call(e)         e2 <- err$new_error(\"error in callr subprocess\")         class <- base::class         class(e2) <- base::c(\"callr_remote_error\", class(e2))         e2 <- err$add_trace_back(e2)         cut <- base::which(e2$trace$scope == \"global\")[1]         if (!base::is.na(cut)) {             e2$trace <- e2$trace[-(1:cut), ]         }         base::saveRDS(base::list(\"error\", e2, e), file = base::paste0(\"/tmp/RtmpLnzsD7/callr-res-51ea773c12d7\",              \".error\"))     } }, callr_message = function(e) {     base::try(base::signalCondition(e)) }), error = function(e) {     NULL     if (FALSE) {         base::try(base::stop(e))     }     else {         base::invisible()     } }, interrupt = function(e) {     NULL     if (FALSE) {         e     }     else {         base::invisible()     } })  #>  #> Term (Intercept)  #>  #> Adjusted mean: #>           #> 26.47083  #>  #> Std. Error: #>            #> 0.3462311  #>  #> Linear hypothesis test #>  #> Hypothesis: #> (Intercept)  + 0.333333333333333 trt0  + 0.333333333333333 trt2  + 0.125 loc1  + 0.125 loc2  + 0.125 loc3  + 0.125 loc4  + 0.125 loc5  + 0.125 loc6  + 0.125 loc7 = 0 #>  #> Model 1: restricted model #> Model 2: Y ~ trt + loc #>  #>   Res.Df       RSS Df Sum of Sq        F     Pr(>F)     #> 1     22 16877.338                                      #> 2     21    60.417  1  16816.92 5845.249 < 2.22e-16 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #> ------  #------------------------------------------------------- ##  Trt 2 Vs 3 difference #------------------------------------------------------- contrast(     emmeans(object  = Exam3.3.lm1, specs = ~trt)   , list(trt = c(-1, 0, 0, 1))   ) #>  contrast estimate    SE df t.ratio p.value #>  trt         0.287 0.848 21   0.339  0.7380 #>  #> Results are averaged over the levels of: loc   testFactors(model = Exam3.3.lm1, levels = list(trt = c(\"2\" = 1,\"3\" = -1))) #>  #> Call: base::tryCatch(model = base::withCallingHandlers({     NULL     base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/tmp/RtmpLnzsD7/callr-fun-51ea920e40b\"),          base::list(envir = .GlobalEnv, quote = TRUE)), envir = .GlobalEnv,          quote = TRUE), file = \"/tmp/RtmpLnzsD7/callr-res-51ea773c12d7\",          compress = FALSE)     base::flush(base::stdout())     base::flush(base::stderr())     NULL     base::invisible() }, error = function(e) {     {         callr_data <- base::as.environment(\"tools:callr\")$`__callr_data__`         err <- callr_data$err         if (FALSE) {             base::assign(\".Traceback\", base::.traceback(4), envir = callr_data)             utils::dump.frames(\"__callr_dump__\")             base::assign(\".Last.dump\", .GlobalEnv$`__callr_dump__`,                  envir = callr_data)             base::rm(\"__callr_dump__\", envir = .GlobalEnv)         }         e <- err$process_call(e)         e2 <- err$new_error(\"error in callr subprocess\")         class <- base::class         class(e2) <- base::c(\"callr_remote_error\", class(e2))         e2 <- err$add_trace_back(e2)         cut <- base::which(e2$trace$scope == \"global\")[1]         if (!base::is.na(cut)) {             e2$trace <- e2$trace[-(1:cut), ]         }         base::saveRDS(base::list(\"error\", e2, e), file = base::paste0(\"/tmp/RtmpLnzsD7/callr-res-51ea773c12d7\",              \".error\"))     } }, interrupt = function(e) {     {         callr_data <- base::as.environment(\"tools:callr\")$`__callr_data__`         err <- callr_data$err         if (FALSE) {             base::assign(\".Traceback\", base::.traceback(4), envir = callr_data)             utils::dump.frames(\"__callr_dump__\")             base::assign(\".Last.dump\", .GlobalEnv$`__callr_dump__`,                  envir = callr_data)             base::rm(\"__callr_dump__\", envir = .GlobalEnv)         }         e <- err$process_call(e)         e2 <- err$new_error(\"error in callr subprocess\")         class <- base::class         class(e2) <- base::c(\"callr_remote_error\", class(e2))         e2 <- err$add_trace_back(e2)         cut <- base::which(e2$trace$scope == \"global\")[1]         if (!base::is.na(cut)) {             e2$trace <- e2$trace[-(1:cut), ]         }         base::saveRDS(base::list(\"error\", e2, e), file = base::paste0(\"/tmp/RtmpLnzsD7/callr-res-51ea773c12d7\",              \".error\"))     } }, callr_message = function(e) {     base::try(base::signalCondition(e)) }), error = function(e) {     NULL     if (FALSE) {         base::try(base::stop(e))     }     else {         base::invisible()     } }, interrupt = function(e) {     NULL     if (FALSE) {         e     }     else {         base::invisible()     } })  #>  #> Term (Intercept)  #>  #> Adjusted mean: #>         #> 0.2875  #>  #> Std. Error: #>            #> 0.8480896  #>  #> Linear hypothesis test #>  #> Hypothesis: #> trt2 = 0 #>  #> Model 1: restricted model #> Model 2: Y ~ trt + loc #>  #>   Res.Df      RSS Df Sum of Sq       F  Pr(>F) #> 1     22 60.74812                              #> 2     21 60.41750  1  0.330625 0.11492 0.73798 #> ------  #------------------------------------------------------- ##  Trt 1 Vs 2 difference #------------------------------------------------------- contrast(     emmeans(object  = Exam3.3.lm1, specs = ~trt)   , list(trt = c(0, 0, 1, -1))   ) #>  contrast estimate    SE df t.ratio p.value #>  trt         -3.24 0.848 21  -3.817  0.0010 #>  #> Results are averaged over the levels of: loc  testFactors(model = Exam3.3.lm1, levels = list(trt = c(\"1\" = 1,\"2\" = -1))) #>  #> Call: base::tryCatch(model = base::withCallingHandlers({     NULL     base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/tmp/RtmpLnzsD7/callr-fun-51ea920e40b\"),          base::list(envir = .GlobalEnv, quote = TRUE)), envir = .GlobalEnv,          quote = TRUE), file = \"/tmp/RtmpLnzsD7/callr-res-51ea773c12d7\",          compress = FALSE)     base::flush(base::stdout())     base::flush(base::stderr())     NULL     base::invisible() }, error = function(e) {     {         callr_data <- base::as.environment(\"tools:callr\")$`__callr_data__`         err <- callr_data$err         if (FALSE) {             base::assign(\".Traceback\", base::.traceback(4), envir = callr_data)             utils::dump.frames(\"__callr_dump__\")             base::assign(\".Last.dump\", .GlobalEnv$`__callr_dump__`,                  envir = callr_data)             base::rm(\"__callr_dump__\", envir = .GlobalEnv)         }         e <- err$process_call(e)         e2 <- err$new_error(\"error in callr subprocess\")         class <- base::class         class(e2) <- base::c(\"callr_remote_error\", class(e2))         e2 <- err$add_trace_back(e2)         cut <- base::which(e2$trace$scope == \"global\")[1]         if (!base::is.na(cut)) {             e2$trace <- e2$trace[-(1:cut), ]         }         base::saveRDS(base::list(\"error\", e2, e), file = base::paste0(\"/tmp/RtmpLnzsD7/callr-res-51ea773c12d7\",              \".error\"))     } }, interrupt = function(e) {     {         callr_data <- base::as.environment(\"tools:callr\")$`__callr_data__`         err <- callr_data$err         if (FALSE) {             base::assign(\".Traceback\", base::.traceback(4), envir = callr_data)             utils::dump.frames(\"__callr_dump__\")             base::assign(\".Last.dump\", .GlobalEnv$`__callr_dump__`,                  envir = callr_data)             base::rm(\"__callr_dump__\", envir = .GlobalEnv)         }         e <- err$process_call(e)         e2 <- err$new_error(\"error in callr subprocess\")         class <- base::class         class(e2) <- base::c(\"callr_remote_error\", class(e2))         e2 <- err$add_trace_back(e2)         cut <- base::which(e2$trace$scope == \"global\")[1]         if (!base::is.na(cut)) {             e2$trace <- e2$trace[-(1:cut), ]         }         base::saveRDS(base::list(\"error\", e2, e), file = base::paste0(\"/tmp/RtmpLnzsD7/callr-res-51ea773c12d7\",              \".error\"))     } }, callr_message = function(e) {     base::try(base::signalCondition(e)) }), error = function(e) {     NULL     if (FALSE) {         base::try(base::stop(e))     }     else {         base::invisible()     } }, interrupt = function(e) {     NULL     if (FALSE) {         e     }     else {         base::invisible()     } })  #>  #> Term (Intercept)  #>  #> Adjusted mean: #>          #> -3.2375  #>  #> Std. Error: #>            #> 0.8480896  #>  #> Linear hypothesis test #>  #> Hypothesis: #> trt1 - trt2 = 0 #>  #> Model 1: restricted model #> Model 2: Y ~ trt + loc #>  #>   Res.Df      RSS Df Sum of Sq        F    Pr(>F)    #> 1     22 102.3431                                    #> 2     21  60.4175  1  41.92562 14.57257 0.0010045 ** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #> ------  #------------------------------------------------------- ##  Trt 1 Vs 3 difference #------------------------------------------------------- contrast(     emmeans(object  = Exam3.3.lm1, specs = ~trt)   , list(trt = c(-1, 0, 1, 0))   ) #>  contrast estimate    SE df t.ratio p.value #>  trt         -2.95 0.848 21  -3.478  0.0022 #>  #> Results are averaged over the levels of: loc  testFactors(model = Exam3.3.lm1, levels = list(trt = c(\"1\" = 1,\"3\" = -1))) #>  #> Call: base::tryCatch(model = base::withCallingHandlers({     NULL     base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/tmp/RtmpLnzsD7/callr-fun-51ea920e40b\"),          base::list(envir = .GlobalEnv, quote = TRUE)), envir = .GlobalEnv,          quote = TRUE), file = \"/tmp/RtmpLnzsD7/callr-res-51ea773c12d7\",          compress = FALSE)     base::flush(base::stdout())     base::flush(base::stderr())     NULL     base::invisible() }, error = function(e) {     {         callr_data <- base::as.environment(\"tools:callr\")$`__callr_data__`         err <- callr_data$err         if (FALSE) {             base::assign(\".Traceback\", base::.traceback(4), envir = callr_data)             utils::dump.frames(\"__callr_dump__\")             base::assign(\".Last.dump\", .GlobalEnv$`__callr_dump__`,                  envir = callr_data)             base::rm(\"__callr_dump__\", envir = .GlobalEnv)         }         e <- err$process_call(e)         e2 <- err$new_error(\"error in callr subprocess\")         class <- base::class         class(e2) <- base::c(\"callr_remote_error\", class(e2))         e2 <- err$add_trace_back(e2)         cut <- base::which(e2$trace$scope == \"global\")[1]         if (!base::is.na(cut)) {             e2$trace <- e2$trace[-(1:cut), ]         }         base::saveRDS(base::list(\"error\", e2, e), file = base::paste0(\"/tmp/RtmpLnzsD7/callr-res-51ea773c12d7\",              \".error\"))     } }, interrupt = function(e) {     {         callr_data <- base::as.environment(\"tools:callr\")$`__callr_data__`         err <- callr_data$err         if (FALSE) {             base::assign(\".Traceback\", base::.traceback(4), envir = callr_data)             utils::dump.frames(\"__callr_dump__\")             base::assign(\".Last.dump\", .GlobalEnv$`__callr_dump__`,                  envir = callr_data)             base::rm(\"__callr_dump__\", envir = .GlobalEnv)         }         e <- err$process_call(e)         e2 <- err$new_error(\"error in callr subprocess\")         class <- base::class         class(e2) <- base::c(\"callr_remote_error\", class(e2))         e2 <- err$add_trace_back(e2)         cut <- base::which(e2$trace$scope == \"global\")[1]         if (!base::is.na(cut)) {             e2$trace <- e2$trace[-(1:cut), ]         }         base::saveRDS(base::list(\"error\", e2, e), file = base::paste0(\"/tmp/RtmpLnzsD7/callr-res-51ea773c12d7\",              \".error\"))     } }, callr_message = function(e) {     base::try(base::signalCondition(e)) }), error = function(e) {     NULL     if (FALSE) {         base::try(base::stop(e))     }     else {         base::invisible()     } }, interrupt = function(e) {     NULL     if (FALSE) {         e     }     else {         base::invisible()     } })  #>  #> Term (Intercept)  #>  #> Adjusted mean: #>        #> -2.95  #>  #> Std. Error: #>            #> 0.8480896  #>  #> Linear hypothesis test #>  #> Hypothesis: #> trt1 = 0 #>  #> Model 1: restricted model #> Model 2: Y ~ trt + loc #>  #>   Res.Df     RSS Df Sum of Sq        F    Pr(>F)    #> 1     22 95.2275                                    #> 2     21 60.4175  1     34.81 12.09931 0.0022437 ** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #> ------  #------------------------------------------------------- ##  Average trt0+1  vs Average Trt2+3 #------------------------------------------------------- contrast(     emmeans(object  = Exam3.3.lm1, specs = ~trt)   , list(trt = c(-1/2, 1/2, 1/2, -1/2))   ) #>  contrast estimate  SE df t.ratio p.value #>  trt         -2.69 0.6 21  -4.481  0.0002 #>  #> Results are averaged over the levels of: loc  testFactors(model = Exam3.3.lm1, levels = list(trt = c(\"0\" = 0.5,\"1\" = 0.5,\"2\" = -0.5,\"3\" = -0.5))) #>  #> Call: base::tryCatch(model = base::withCallingHandlers({     NULL     base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/tmp/RtmpLnzsD7/callr-fun-51ea920e40b\"),          base::list(envir = .GlobalEnv, quote = TRUE)), envir = .GlobalEnv,          quote = TRUE), file = \"/tmp/RtmpLnzsD7/callr-res-51ea773c12d7\",          compress = FALSE)     base::flush(base::stdout())     base::flush(base::stderr())     NULL     base::invisible() }, error = function(e) {     {         callr_data <- base::as.environment(\"tools:callr\")$`__callr_data__`         err <- callr_data$err         if (FALSE) {             base::assign(\".Traceback\", base::.traceback(4), envir = callr_data)             utils::dump.frames(\"__callr_dump__\")             base::assign(\".Last.dump\", .GlobalEnv$`__callr_dump__`,                  envir = callr_data)             base::rm(\"__callr_dump__\", envir = .GlobalEnv)         }         e <- err$process_call(e)         e2 <- err$new_error(\"error in callr subprocess\")         class <- base::class         class(e2) <- base::c(\"callr_remote_error\", class(e2))         e2 <- err$add_trace_back(e2)         cut <- base::which(e2$trace$scope == \"global\")[1]         if (!base::is.na(cut)) {             e2$trace <- e2$trace[-(1:cut), ]         }         base::saveRDS(base::list(\"error\", e2, e), file = base::paste0(\"/tmp/RtmpLnzsD7/callr-res-51ea773c12d7\",              \".error\"))     } }, interrupt = function(e) {     {         callr_data <- base::as.environment(\"tools:callr\")$`__callr_data__`         err <- callr_data$err         if (FALSE) {             base::assign(\".Traceback\", base::.traceback(4), envir = callr_data)             utils::dump.frames(\"__callr_dump__\")             base::assign(\".Last.dump\", .GlobalEnv$`__callr_dump__`,                  envir = callr_data)             base::rm(\"__callr_dump__\", envir = .GlobalEnv)         }         e <- err$process_call(e)         e2 <- err$new_error(\"error in callr subprocess\")         class <- base::class         class(e2) <- base::c(\"callr_remote_error\", class(e2))         e2 <- err$add_trace_back(e2)         cut <- base::which(e2$trace$scope == \"global\")[1]         if (!base::is.na(cut)) {             e2$trace <- e2$trace[-(1:cut), ]         }         base::saveRDS(base::list(\"error\", e2, e), file = base::paste0(\"/tmp/RtmpLnzsD7/callr-res-51ea773c12d7\",              \".error\"))     } }, callr_message = function(e) {     base::try(base::signalCondition(e)) }), error = function(e) {     NULL     if (FALSE) {         base::try(base::stop(e))     }     else {         base::invisible()     } }, interrupt = function(e) {     NULL     if (FALSE) {         e     }     else {         base::invisible()     } })  #>  #> Term (Intercept)  #>  #> Adjusted mean: #>          #> -2.6875  #>  #> Std. Error: #>            #> 0.5996899  #>  #> Linear hypothesis test #>  #> Hypothesis: #> 0.5 trt0  + 0.5 trt1 - 0.5 trt2 = 0 #>  #> Model 1: restricted model #> Model 2: Y ~ trt + loc #>  #>   Res.Df      RSS Df Sum of Sq        F     Pr(>F)     #> 1     22 118.1988                                      #> 2     21  60.4175  1  57.78125 20.08369 0.00020551 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #> ------  #------------------------------------------------------- ##  Trt1  vs Average Trt0+1+2 #------------------------------------------------------- contrast(     emmeans(object  = Exam3.3.lm1, specs = ~trt)   , list(trt = c(1/3, 1/3, -1, 1/3))   ) #>  contrast estimate    SE df t.ratio p.value #>  trt          2.33 0.692 21   3.370  0.0029 #>  #> Results are averaged over the levels of: loc  testFactors(model = Exam3.3.lm1, levels = list(trt = c(\"0\" = 1/3,\"1\" = -1,\"2\" = 1/3,\"3\" = 1/3))) #>  #> Call: base::tryCatch(model = base::withCallingHandlers({     NULL     base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/tmp/RtmpLnzsD7/callr-fun-51ea920e40b\"),          base::list(envir = .GlobalEnv, quote = TRUE)), envir = .GlobalEnv,          quote = TRUE), file = \"/tmp/RtmpLnzsD7/callr-res-51ea773c12d7\",          compress = FALSE)     base::flush(base::stdout())     base::flush(base::stderr())     NULL     base::invisible() }, error = function(e) {     {         callr_data <- base::as.environment(\"tools:callr\")$`__callr_data__`         err <- callr_data$err         if (FALSE) {             base::assign(\".Traceback\", base::.traceback(4), envir = callr_data)             utils::dump.frames(\"__callr_dump__\")             base::assign(\".Last.dump\", .GlobalEnv$`__callr_dump__`,                  envir = callr_data)             base::rm(\"__callr_dump__\", envir = .GlobalEnv)         }         e <- err$process_call(e)         e2 <- err$new_error(\"error in callr subprocess\")         class <- base::class         class(e2) <- base::c(\"callr_remote_error\", class(e2))         e2 <- err$add_trace_back(e2)         cut <- base::which(e2$trace$scope == \"global\")[1]         if (!base::is.na(cut)) {             e2$trace <- e2$trace[-(1:cut), ]         }         base::saveRDS(base::list(\"error\", e2, e), file = base::paste0(\"/tmp/RtmpLnzsD7/callr-res-51ea773c12d7\",              \".error\"))     } }, interrupt = function(e) {     {         callr_data <- base::as.environment(\"tools:callr\")$`__callr_data__`         err <- callr_data$err         if (FALSE) {             base::assign(\".Traceback\", base::.traceback(4), envir = callr_data)             utils::dump.frames(\"__callr_dump__\")             base::assign(\".Last.dump\", .GlobalEnv$`__callr_dump__`,                  envir = callr_data)             base::rm(\"__callr_dump__\", envir = .GlobalEnv)         }         e <- err$process_call(e)         e2 <- err$new_error(\"error in callr subprocess\")         class <- base::class         class(e2) <- base::c(\"callr_remote_error\", class(e2))         e2 <- err$add_trace_back(e2)         cut <- base::which(e2$trace$scope == \"global\")[1]         if (!base::is.na(cut)) {             e2$trace <- e2$trace[-(1:cut), ]         }         base::saveRDS(base::list(\"error\", e2, e), file = base::paste0(\"/tmp/RtmpLnzsD7/callr-res-51ea773c12d7\",              \".error\"))     } }, callr_message = function(e) {     base::try(base::signalCondition(e)) }), error = function(e) {     NULL     if (FALSE) {         base::try(base::stop(e))     }     else {         base::invisible()     } }, interrupt = function(e) {     NULL     if (FALSE) {         e     }     else {         base::invisible()     } })  #>  #> Term (Intercept)  #>  #> Adjusted mean: #>           #> 2.333333  #>  #> Std. Error: #>            #> 0.6924623  #>  #> Linear hypothesis test #>  #> Hypothesis: #> - 2.08166817117217e - 17 ((Intercept)  + 0.333333333333333 trt0 - trt1  + 0.333333333333333 trt2 - 6.93889390390723e - 18 loc1 - 6.93889390390723e - 18 loc2 - 6.93889390390723e - 18 loc3 - 6.93889390390723e - 18 loc4 - 6.93889390390723e - 18 loc5 - 6.93889390390723e - 18 loc6 - 6.93889390390723e - 18 loc7 = 0 #>  #> Model 1: restricted model #> Model 2: Y ~ trt + loc #>  #>   Res.Df      RSS Df Sum of Sq        F    Pr(>F)    #> 1     22 93.08417                                    #> 2     21 60.41750  1  32.66667 11.35433 0.0028974 ** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #> ------"},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam3.5.html","id":null,"dir":"Reference","previous_headings":"","what":"Example 3.5 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-85) — Exam3.5","title":"Example 3.5 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-85) — Exam3.5","text":"Exam3.5 fixed location, factorial treatment structure, Gaussian response","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam3.5.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Example 3.5 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-85) — Exam3.5","text":"Stroup, W. W. (2012).      Generalized Linear Mixed Models: Modern Concepts, Methods Applications.        CRC Press.","code":""},{"path":[]},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam3.5.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Example 3.5 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-85) — Exam3.5","text":"Muhammad Yaseen (myaseen208@gmail.com) Adeela Munawar (adeela.uaf@gmail.com)","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam3.5.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example 3.5 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-85) — Exam3.5","text":"","code":"data(DataSet3.2) DataSet3.2$A <- factor(x = DataSet3.2$A) DataSet3.2$B <- factor(x = DataSet3.2$B) DataSet3.2$loc <- factor(x = DataSet3.2$loc, level = c(8, 1, 2, 3, 4, 5, 6, 7))  Exam3.5.lm <- lm(formula =  Y~ A + B +loc, data =  DataSet3.2) Exam3.5.lm #>  #> Call: #> lm(formula = Y ~ A + B + loc, data = DataSet3.2) #>  #> Coefficients: #> (Intercept)           A1           B1         loc1         loc2         loc3   #>      25.981       -0.550        2.688       -0.975       -3.250       -1.675   #>        loc4         loc5         loc6         loc7   #>      -0.350        0.825       -0.300       -3.575   #>   ##---a0 marginal mean library(emmeans) contrast(        object = emmeans(object  = Exam3.5.lm, specs   = ~ B)      , list(trt = c(1, 0))      ) #>  contrast estimate    SE df t.ratio p.value #>  trt          24.5 0.416 22  58.974  <.0001 #>  #> Results are averaged over the levels of: A, loc  library(phia) testFactors(model = Exam3.5.lm, levels =  list(B = c(\"0\" = 1,\"1\" = 0) )) #>  #> Call: base::tryCatch(model = base::withCallingHandlers({     NULL     base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/tmp/RtmpLnzsD7/callr-fun-51ea920e40b\"),          base::list(envir = .GlobalEnv, quote = TRUE)), envir = .GlobalEnv,          quote = TRUE), file = \"/tmp/RtmpLnzsD7/callr-res-51ea773c12d7\",          compress = FALSE)     base::flush(base::stdout())     base::flush(base::stderr())     NULL     base::invisible() }, error = function(e) {     {         callr_data <- base::as.environment(\"tools:callr\")$`__callr_data__`         err <- callr_data$err         if (FALSE) {             base::assign(\".Traceback\", base::.traceback(4), envir = callr_data)             utils::dump.frames(\"__callr_dump__\")             base::assign(\".Last.dump\", .GlobalEnv$`__callr_dump__`,                  envir = callr_data)             base::rm(\"__callr_dump__\", envir = .GlobalEnv)         }         e <- err$process_call(e)         e2 <- err$new_error(\"error in callr subprocess\")         class <- base::class         class(e2) <- base::c(\"callr_remote_error\", class(e2))         e2 <- err$add_trace_back(e2)         cut <- base::which(e2$trace$scope == \"global\")[1]         if (!base::is.na(cut)) {             e2$trace <- e2$trace[-(1:cut), ]         }         base::saveRDS(base::list(\"error\", e2, e), file = base::paste0(\"/tmp/RtmpLnzsD7/callr-res-51ea773c12d7\",              \".error\"))     } }, interrupt = function(e) {     {         callr_data <- base::as.environment(\"tools:callr\")$`__callr_data__`         err <- callr_data$err         if (FALSE) {             base::assign(\".Traceback\", base::.traceback(4), envir = callr_data)             utils::dump.frames(\"__callr_dump__\")             base::assign(\".Last.dump\", .GlobalEnv$`__callr_dump__`,                  envir = callr_data)             base::rm(\"__callr_dump__\", envir = .GlobalEnv)         }         e <- err$process_call(e)         e2 <- err$new_error(\"error in callr subprocess\")         class <- base::class         class(e2) <- base::c(\"callr_remote_error\", class(e2))         e2 <- err$add_trace_back(e2)         cut <- base::which(e2$trace$scope == \"global\")[1]         if (!base::is.na(cut)) {             e2$trace <- e2$trace[-(1:cut), ]         }         base::saveRDS(base::list(\"error\", e2, e), file = base::paste0(\"/tmp/RtmpLnzsD7/callr-res-51ea773c12d7\",              \".error\"))     } }, callr_message = function(e) {     base::try(base::signalCondition(e)) }), error = function(e) {     NULL     if (FALSE) {         base::try(base::stop(e))     }     else {         base::invisible()     } }, interrupt = function(e) {     NULL     if (FALSE) {         e     }     else {         base::invisible()     } })  #>  #> Term (Intercept)  #>  #> Adjusted mean: #>           #> 24.54375  #>  #> Std. Error: #>            #> 0.4161811  #>  #> Linear hypothesis test #>  #> Hypothesis: #> (Intercept)  + 0.5 A1  + 0.125 loc1  + 0.125 loc2  + 0.125 loc3  + 0.125 loc4  + 0.125 loc5  + 0.125 loc6  + 0.125 loc7 = 0 #>  #> Model 1: restricted model #> Model 2: Y ~ A + B + loc #>  #>   Res.Df      RSS Df Sum of Sq        F     Pr(>F)     #> 1     23 9699.299                                      #> 2     22   60.969  1  9638.331 3477.901 < 2.22e-16 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #> ------  ##---b0 marginal mean testFactors(model = Exam3.5.lm, levels=list(B = c(\"0\" = 1, \"1\" = 0))) #>  #> Call: base::tryCatch(model = base::withCallingHandlers({     NULL     base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/tmp/RtmpLnzsD7/callr-fun-51ea920e40b\"),          base::list(envir = .GlobalEnv, quote = TRUE)), envir = .GlobalEnv,          quote = TRUE), file = \"/tmp/RtmpLnzsD7/callr-res-51ea773c12d7\",          compress = FALSE)     base::flush(base::stdout())     base::flush(base::stderr())     NULL     base::invisible() }, error = function(e) {     {         callr_data <- base::as.environment(\"tools:callr\")$`__callr_data__`         err <- callr_data$err         if (FALSE) {             base::assign(\".Traceback\", base::.traceback(4), envir = callr_data)             utils::dump.frames(\"__callr_dump__\")             base::assign(\".Last.dump\", .GlobalEnv$`__callr_dump__`,                  envir = callr_data)             base::rm(\"__callr_dump__\", envir = .GlobalEnv)         }         e <- err$process_call(e)         e2 <- err$new_error(\"error in callr subprocess\")         class <- base::class         class(e2) <- base::c(\"callr_remote_error\", class(e2))         e2 <- err$add_trace_back(e2)         cut <- base::which(e2$trace$scope == \"global\")[1]         if (!base::is.na(cut)) {             e2$trace <- e2$trace[-(1:cut), ]         }         base::saveRDS(base::list(\"error\", e2, e), file = base::paste0(\"/tmp/RtmpLnzsD7/callr-res-51ea773c12d7\",              \".error\"))     } }, interrupt = function(e) {     {         callr_data <- base::as.environment(\"tools:callr\")$`__callr_data__`         err <- callr_data$err         if (FALSE) {             base::assign(\".Traceback\", base::.traceback(4), envir = callr_data)             utils::dump.frames(\"__callr_dump__\")             base::assign(\".Last.dump\", .GlobalEnv$`__callr_dump__`,                  envir = callr_data)             base::rm(\"__callr_dump__\", envir = .GlobalEnv)         }         e <- err$process_call(e)         e2 <- err$new_error(\"error in callr subprocess\")         class <- base::class         class(e2) <- base::c(\"callr_remote_error\", class(e2))         e2 <- err$add_trace_back(e2)         cut <- base::which(e2$trace$scope == \"global\")[1]         if (!base::is.na(cut)) {             e2$trace <- e2$trace[-(1:cut), ]         }         base::saveRDS(base::list(\"error\", e2, e), file = base::paste0(\"/tmp/RtmpLnzsD7/callr-res-51ea773c12d7\",              \".error\"))     } }, callr_message = function(e) {     base::try(base::signalCondition(e)) }), error = function(e) {     NULL     if (FALSE) {         base::try(base::stop(e))     }     else {         base::invisible()     } }, interrupt = function(e) {     NULL     if (FALSE) {         e     }     else {         base::invisible()     } })  #>  #> Term (Intercept)  #>  #> Adjusted mean: #>           #> 24.54375  #>  #> Std. Error: #>            #> 0.4161811  #>  #> Linear hypothesis test #>  #> Hypothesis: #> (Intercept)  + 0.5 A1  + 0.125 loc1  + 0.125 loc2  + 0.125 loc3  + 0.125 loc4  + 0.125 loc5  + 0.125 loc6  + 0.125 loc7 = 0 #>  #> Model 1: restricted model #> Model 2: Y ~ A + B + loc #>  #>   Res.Df      RSS Df Sum of Sq        F     Pr(>F)     #> 1     23 9699.299                                      #> 2     22   60.969  1  9638.331 3477.901 < 2.22e-16 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #> ------  ##---Simple effect of A on B0 testInteractions(model  =  Exam3.5.lm, custom =  list(B = c(\"0\" = 1,\"1\" = 0)), across =  \"B\") #> Warning: number of columns of result, 6, is not a multiple of vector length 5 of arg 2 #> F Test:  #> P-value adjustment method: holm #>             Value      SE     Df Sum of Sq     F    Pr(>F)     #> B1        -2.6875  0.5886  1.000    57.781 20.85 0.0001513 *** #> Residuals         22.0000 60.969                               #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1  ##---Simple effect of B on A0 testInteractions(model = Exam3.5.lm, custom =  list(A = c(\"0\" = 1, \"1\" = 0)), across =  \"A\") #> Warning: number of columns of result, 6, is not a multiple of vector length 5 of arg 2 #> F Test:  #> P-value adjustment method: holm #>           Value      SE     Df Sum of Sq      F Pr(>F) #> A1         0.55  0.5886  1.000      2.42 0.8732 0.3602 #> Residuals       22.0000 60.969                          ##---Simple Effect of A over B testInteractions(model = Exam3.5.lm, fixed = \"A\", across = \"B\") #> Warning: number of columns of result, 6, is not a multiple of vector length 5 of arg 2 #> F Test:  #> P-value adjustment method: holm #>             Value      SE     Df Sum of Sq     F    Pr(>F)     #> 0         -2.6875  0.5886  1.000    57.781 20.85 0.0003027 *** #> 1         -2.6875  0.5886  1.000    57.781 20.85 0.0003027 *** #> Residuals         22.0000 60.969                               #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1  ##---Simple Effect of B over A testInteractions(model = Exam3.5.lm, fixed = \"B\", across = \"A\") #> Warning: number of columns of result, 6, is not a multiple of vector length 5 of arg 2 #> F Test:  #> P-value adjustment method: holm #>           Value      SE     Df Sum of Sq      F Pr(>F) #> 0          0.55  0.5886  1.000      2.42 0.8732 0.7204 #> 1          0.55  0.5886  1.000      2.42 0.8732 0.7204 #> Residuals       22.0000 60.969                          #------------------------------------------------------------- ## Individula least squares treatment means #------------------------------------------------------------- emmeans(object = Exam3.5.lm, specs = ~A*B) #>  A B emmean   SE df lower.CL upper.CL #>  0 0   24.8 0.51 22     23.8     25.9 #>  1 0   24.3 0.51 22     23.2     25.3 #>  0 1   27.5 0.51 22     26.4     28.6 #>  1 1   27.0 0.51 22     25.9     28.0 #>  #> Results are averaged over the levels of: loc  #> Confidence level used: 0.95"},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam3.9.html","id":null,"dir":"Reference","previous_headings":"","what":"Example 3.9 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-118) — Exam3.9","title":"Example 3.9 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-118) — Exam3.9","text":"Exam3.9 used differentiate conditional marginal binomial models without interaction S2 variable.","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam3.9.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Example 3.9 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-118) — Exam3.9","text":"Stroup, W. W. (2012).      Generalized Linear Mixed Models: Modern Concepts, Methods Applications.        CRC Press.","code":""},{"path":[]},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam3.9.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Example 3.9 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-118) — Exam3.9","text":"Muhammad Yaseen (myaseen208@gmail.com) Adeela Munawar (adeela.uaf@gmail.com)","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam3.9.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example 3.9 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-118) — Exam3.9","text":"","code":"#----------------------------------------------------------------------------------- ## Binomial conditional GLMM without interaction, logit link #----------------------------------------------------------------------------------- library(MASS) DataSet3.2$trt <- factor( x  =  DataSet3.2$trt ) DataSet3.2$loc <- factor( x  =  DataSet3.2$loc )  Exam3.9.fm1   <-   glmmPQL(       fixed    =  S2/Nbin~trt     , random   = ~1|loc     , family   =  quasibinomial(link = \"logit\")     , data     =  DataSet3.2     , niter    = 10     , verbose  = TRUE   ) #> iteration 1 #> iteration 2 #> iteration 3 #> iteration 4 summary(Exam3.9.fm1) #> Linear mixed-effects model fit by maximum likelihood #>   Data: DataSet3.2  #>   AIC BIC logLik #>    NA  NA     NA #>  #> Random effects: #>  Formula: ~1 | loc #>         (Intercept) Residual #> StdDev:   0.7710488  0.33184 #>  #> Variance function: #>  Structure: fixed weights #>  Formula: ~invwt  #> Fixed effects:  S2/Nbin ~ trt  #>                  Value Std.Error DF   t-value p-value #> (Intercept) -1.7997839 0.4591969 21 -3.919416  0.0008 #> trt1         0.2823215 0.4752384 21  0.594063  0.5588 #> trt2         0.8788371 0.4502862 21  1.951730  0.0644 #> trt3         1.0548226 0.4461060 21  2.364511  0.0278 #>  Correlation:  #>      (Intr) trt1   trt2   #> trt1 -0.561               #> trt2 -0.596  0.571        #> trt3 -0.603  0.576  0.610 #>  #> Standardized Within-Group Residuals: #>        Min         Q1        Med         Q3        Max  #> -2.0036140 -0.5699977 -0.2243692  0.4913423  2.4790311  #>  #> Number of Observations: 32 #> Number of Groups: 8  library(parameters) model_parameters(Exam3.9.fm1) #> # Fixed Effects #>  #> Parameter   | Log-Odds |   SE |         95% CI | t(21) |      p #> --------------------------------------------------------------- #> (Intercept) |    -1.80 | 0.46 | [-2.69, -0.91] | -3.92 | < .001 #> trt [1]     |     0.28 | 0.48 | [-0.64,  1.21] |  0.59 | 0.559  #> trt [2]     |     0.88 | 0.45 | [ 0.00,  1.75] |  1.95 | 0.064  #> trt [3]     |     1.05 | 0.45 | [ 0.19,  1.92] |  2.36 | 0.028  #>  #> # Random Effects #>  #> Parameter           | Coefficient #> --------------------------------- #> SD (Intercept: loc) |        0.77 #> SD (Residual)       |        0.33 #>  #> Uncertainty intervals (equal-tailed) and p-values (two-tailed) computed #>   using a Wald t-distribution approximation.  #------------------------------------------------------------- ##  treatment means #------------------------------------------------------------- library(emmeans) emmeans(object = Exam3.9.fm1, specs = ~trt, type = \"response\") #>  trt  prob     SE df lower.CL upper.CL #>  0   0.142 0.0559  7   0.0529    0.329 #>  1   0.180 0.0646  7   0.0722    0.382 #>  2   0.285 0.0833  7   0.1315    0.511 #>  3   0.322 0.0881  7   0.1546    0.552 #>  #> Degrees-of-freedom method: containment  #> Confidence level used: 0.95  #> Intervals are back-transformed from the logit scale  emmeans(object = Exam3.9.fm1, specs = ~trt, type = \"link\") #>  trt emmean    SE df lower.CL upper.CL #>  0   -1.800 0.459  7    -2.89  -0.7140 #>  1   -1.517 0.438  7    -2.55  -0.4813 #>  2   -0.921 0.409  7    -1.89   0.0458 #>  3   -0.745 0.403  7    -1.70   0.2089 #>  #> Degrees-of-freedom method: containment  #> Results are given on the logit (not the response) scale.  #> Confidence level used: 0.95  emmeans(object = Exam3.9.fm1, specs = ~trt, type = \"logit\") #>  trt emmean    SE df lower.CL upper.CL #>  0   -1.800 0.459  7    -2.89  -0.7140 #>  1   -1.517 0.438  7    -2.55  -0.4813 #>  2   -0.921 0.409  7    -1.89   0.0458 #>  3   -0.745 0.403  7    -1.70   0.2089 #>  #> Degrees-of-freedom method: containment  #> Results are given on the logit (not the response) scale.  #> Confidence level used: 0.95   ##--- Normal Approximation library(nlme) Exam3.9fm2 <-   lme(       fixed       = S2/Nbin~trt     , data        = DataSet3.2     , random      = ~1|loc     , method      = c(\"REML\", \"ML\")[1]   )  Exam3.9fm2 #> Linear mixed-effects model fit by REML #>   Data: DataSet3.2  #>   Log-restricted-likelihood: 2.381826 #>   Fixed: S2/Nbin ~ trt  #> (Intercept)        trt1        trt2        trt3  #>  0.16041667  0.03958333  0.14375000  0.17916667  #>  #> Random effects: #>  Formula: ~1 | loc #>         (Intercept)  Residual #> StdDev:   0.1218281 0.1659259 #>  #> Number of Observations: 32 #> Number of Groups: 8  model_parameters(Exam3.9fm2) #> # Fixed Effects #>  #> Parameter   | Coefficient |   SE |        95% CI | t(21) |     p #> ---------------------------------------------------------------- #> (Intercept) |        0.16 | 0.07 | [ 0.01, 0.31] |  2.20 | 0.039 #> trt [1]     |        0.04 | 0.08 | [-0.13, 0.21] |  0.48 | 0.638 #> trt [2]     |        0.14 | 0.08 | [-0.03, 0.32] |  1.73 | 0.098 #> trt [3]     |        0.18 | 0.08 | [ 0.01, 0.35] |  2.16 | 0.043 #>  #> # Random Effects #>  #> Parameter           | Coefficient #> --------------------------------- #> SD (Intercept: loc) |        0.12 #> SD (Residual)       |        0.17 #>  #> Uncertainty intervals (equal-tailed) and p-values (two-tailed) computed #>   using a Wald t-distribution approximation.  emmeans(object  = Exam3.9fm2, specs = ~trt) #>  trt emmean     SE df lower.CL upper.CL #>  0    0.160 0.0728  7  -0.0117    0.333 #>  1    0.200 0.0728  7   0.0279    0.372 #>  2    0.304 0.0728  7   0.1321    0.476 #>  3    0.340 0.0728  7   0.1675    0.512 #>  #> Degrees-of-freedom method: containment  #> Confidence level used: 0.95    ##---Binomial GLMM with interaction Exam3.9fm3   <-   glmmPQL(       fixed       =  S2/Nbin~trt     , random      = ~1|trt/loc     , family      =  quasibinomial(link = \"logit\")     , data        =  DataSet3.2     , niter = 10     , verbose = TRUE   ) #> iteration 1 #> iteration 2 #> iteration 3 #> iteration 4 #> iteration 5 #> iteration 6 #> iteration 7 #> iteration 8 #> iteration 9 #> iteration 10 summary(Exam3.9fm3) #> Warning: NaNs produced #> Linear mixed-effects model fit by maximum likelihood #>   Data: DataSet3.2  #>   AIC BIC logLik #>    NA  NA     NA #>  #> Random effects: #>  Formula: ~1 | trt #>         (Intercept) #> StdDev: 1.76876e-05 #>  #>  Formula: ~1 | loc %in% trt #>          (Intercept)  Residual #> StdDev: 2.946513e-06 0.4265118 #>  #> Variance function: #>  Structure: fixed weights #>  Formula: ~invwt  #> Fixed effects:  S2/Nbin ~ trt  #>                  Value Std.Error DF   t-value p-value #> (Intercept) -1.4485522 0.4379601 28 -3.307498  0.0026 #> trt1         0.2349559 0.5998313  0  0.391703     NaN #> trt2         0.6971934 0.5791864  0  1.203746     NaN #> trt3         0.7330440 0.5794759  0  1.265012     NaN #>  Correlation:  #>      (Intr) trt1   trt2   #> trt1 -0.730               #> trt2 -0.756  0.552        #> trt3 -0.756  0.552  0.571 #>  #> Standardized Within-Group Residuals: #>        Min         Q1        Med         Q3        Max  #> -1.8229824 -0.8793369 -0.4149872  0.5574551  2.2264946  #>  #> Number of Observations: 32 #> Number of Groups:  #>          trt loc %in% trt  #>            4           32  model_parameters(Exam3.9fm3) #> Warning: NaNs produced #> Warning: NaNs produced #> Warning: NaNs produced #> # Fixed Effects #>  #> Parameter   | Log-Odds |   SE |         95% CI |     t | df |     p #> ------------------------------------------------------------------- #> (Intercept) |    -1.45 | 0.44 | [-2.29, -0.61] | -3.31 | 28 | 0.003 #> trt [1]     |     0.23 | 0.60 |                |  0.39 |  0 |       #> trt [2]     |     0.70 | 0.58 |                |  1.20 |  0 |       #> trt [3]     |     0.73 | 0.58 |                |  1.27 |  0 |       #>  #> # Random Effects #>  #> Parameter           | Coefficient #> --------------------------------- #> SD (Intercept: trt) |    1.77e-05 #> SD (Intercept: loc) |    2.95e-06 #> SD (Residual)       |        0.43 #>  #> Uncertainty intervals (equal-tailed) and p-values (two-tailed) computed #>   using a Wald t-distribution approximation. emmeans(object = Exam3.9fm3, specs = ~trt) #> Warning: NaNs produced #>  trt emmean    SE df lower.CL upper.CL #>  0   -1.449 0.438  3    -2.84  -0.0548 #>  1   -1.214 0.410  0      NaN      NaN #>  2   -0.751 0.379  0      NaN      NaN #>  3   -0.716 0.379  0      NaN      NaN #>  #> Degrees-of-freedom method: containment  #> Results are given on the logit (not the response) scale.  #> Confidence level used: 0.95    ##---Binomial Marginal GLMM(assuming compound symmetry) Exam3.9fm4   <-   glmmPQL(       fixed       =  S2/Nbin~trt     , random      = ~1|loc     , family      =  quasibinomial(link = \"logit\")     , data        =  DataSet3.2     , correlation =  corCompSymm(form = ~1|loc)     , niter       = 10     , verbose     = TRUE   ) #> iteration 1 summary(Exam3.9fm4) #> Linear mixed-effects model fit by maximum likelihood #>   Data: DataSet3.2  #>   AIC BIC logLik #>    NA  NA     NA #>  #> Random effects: #>  Formula: ~1 | loc #>          (Intercept)  Residual #> StdDev: 0.0007465953 0.4412173 #>  #> Correlation Structure: Compound symmetry #>  Formula: ~1 | loc  #>  Parameter estimate(s): #>       Rho  #> 0.3817414  #> Variance function: #>  Structure: fixed weights #>  Formula: ~invwt  #> Fixed effects:  S2/Nbin ~ trt  #>                  Value Std.Error DF   t-value p-value #> (Intercept) -1.6551311 0.4544041 21 -3.642421  0.0015 #> trt1         0.2688368 0.4854471 21  0.553792  0.5856 #> trt2         0.8275968 0.4605683 21  1.796903  0.0867 #> trt3         0.9899796 0.4564203 21  2.169008  0.0417 #>  Correlation:  #>      (Intr) trt1   trt2   #> trt1 -0.608               #> trt2 -0.686  0.577        #> trt3 -0.701  0.583  0.624 #>  #> Standardized Within-Group Residuals: #>        Min         Q1        Med         Q3        Max  #> -1.6252165 -0.6846589 -0.3489664  0.6677812  2.6023420  #>  #> Number of Observations: 32 #> Number of Groups: 8  model_parameters(Exam3.9fm4) #> # Fixed Effects #>  #> Parameter   | Log-Odds |   SE |         95% CI | t(21) |     p #> -------------------------------------------------------------- #> (Intercept) |    -1.66 | 0.45 | [-2.54, -0.77] | -3.64 | 0.002 #> trt [1]     |     0.27 | 0.49 | [-0.68,  1.21] |  0.55 | 0.586 #> trt [2]     |     0.83 | 0.46 | [-0.07,  1.72] |  1.80 | 0.087 #> trt [3]     |     0.99 | 0.46 | [ 0.10,  1.88] |  2.17 | 0.042 #>  #> # Random Effects #>  #> Parameter           | Coefficient #> --------------------------------- #> SD (Intercept: loc) |    7.47e-04 #> SD (Residual)       |        0.44 #>  #> Uncertainty intervals (equal-tailed) and p-values (two-tailed) computed #>   using a Wald t-distribution approximation. emmeans(object  = Exam3.9fm4, specs  = ~trt) #>  trt emmean    SE df lower.CL upper.CL #>  0   -1.655 0.454  7    -2.73  -0.5806 #>  1   -1.386 0.417  7    -2.37  -0.4005 #>  2   -0.828 0.362  7    -1.68   0.0296 #>  3   -0.665 0.352  7    -1.50   0.1675 #>  #> Degrees-of-freedom method: containment  #> Results are given on the logit (not the response) scale.  #> Confidence level used: 0.95"},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam4.1.html","id":null,"dir":"Reference","previous_headings":"","what":"Example 4.1 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-138) — Exam4.1","title":"Example 4.1 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-138) — Exam4.1","text":"Exam4.1 REML vs ML criterion used keeping block effects random","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam4.1.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Example 4.1 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-138) — Exam4.1","text":"Stroup, W. W. (2012).      Generalized Linear Mixed Models: Modern Concepts, Methods Applications.        CRC Press.","code":""},{"path":[]},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam4.1.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Example 4.1 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-138) — Exam4.1","text":"Muhammad Yaseen (myaseen208@gmail.com) Adeela Munawar (adeela.uaf@gmail.com)","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam4.1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example 4.1 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-138) — Exam4.1","text":"","code":"DataSet4.1$trt   <- factor(x =  DataSet4.1$trt) DataSet4.1$block <- factor(x =  DataSet4.1$block)  #---REML estimates on page 138(article 4.4.3.3) library(lmerTest) #> Loading required package: lme4 #>  #> Attaching package: ‘lme4’ #> The following object is masked from ‘package:nlme’: #>  #>     lmList #>  #> Attaching package: ‘lmerTest’ #> The following object is masked from ‘package:lme4’: #>  #>     lmer #> The following object is masked from ‘package:stats’: #>  #>     step  Exam4.1REML  <- lmer(formula = y~ trt +( 1|block ), data = DataSet4.1) library(parameters) model_parameters(Exam4.1REML) #> # Fixed Effects #>  #> Parameter   | Coefficient |   SE |         95% CI | t(43) |      p #> ------------------------------------------------------------------ #> (Intercept) |       28.18 | 1.66 | [24.82, 31.53] | 16.93 | < .001 #> trt [2]     |       -4.12 | 2.22 | [-8.60,  0.36] | -1.86 | 0.070  #> trt [3]     |       -3.63 | 2.22 | [-8.10,  0.85] | -1.63 | 0.110  #> trt [4]     |       -0.34 | 2.22 | [-4.82,  4.14] | -0.15 | 0.880  #> trt [5]     |       -0.13 | 2.22 | [-4.60,  4.35] | -0.06 | 0.955  #> trt [6]     |        0.93 | 2.27 | [-3.65,  5.51] |  0.41 | 0.684  #> trt [7]     |       -0.29 | 2.22 | [-4.76,  4.19] | -0.13 | 0.898  #> trt [8]     |       -0.36 | 2.22 | [-4.84,  4.12] | -0.16 | 0.872  #> trt [9]     |        0.74 | 2.22 | [-3.74,  5.22] |  0.33 | 0.741  #> trt [10]    |       -3.26 | 2.22 | [-7.74,  1.21] | -1.47 | 0.149  #> trt [11]    |        0.81 | 2.27 | [-3.77,  5.39] |  0.36 | 0.723  #> trt [12]    |        2.35 | 2.22 | [-2.13,  6.83] |  1.06 | 0.295  #> trt [13]    |       -2.00 | 2.22 | [-6.48,  2.48] | -0.90 | 0.373  #> trt [14]    |       -3.26 | 2.22 | [-7.74,  1.22] | -1.47 | 0.149  #> trt [15]    |        0.42 | 2.22 | [-4.06,  4.90] |  0.19 | 0.852  #>  #> # Random Effects #>  #> Parameter             | Coefficient |   SE |       95% CI #> --------------------------------------------------------- #> SD (Intercept: block) |        2.16 | 0.66 | [1.18, 3.93] #> SD (Residual)         |        2.93 | 0.37 | [2.28, 3.75] #>  #> Uncertainty intervals (equal-tailed) and p-values (two-tailed) computed #>   using a Wald t-distribution approximation. print(VarCorr(x = Exam4.1REML), comp = c(\"Variance\")) #>  Groups   Name        Variance #>  block    (Intercept) 4.6522   #>  Residual             8.5559    ##---ML estimates on page 138(article 4.4.3.3) Exam4.1ML  <- lmer(formula = y ~ trt + (1|block), data = DataSet4.1, REML = FALSE) model_parameters(Exam4.1ML) #> # Fixed Effects #>  #> Parameter   | Coefficient |   SE |         95% CI | t(43) |      p #> ------------------------------------------------------------------ #> (Intercept) |       28.23 | 1.44 | [25.33, 31.12] | 19.66 | < .001 #> trt [2]     |       -4.16 | 1.88 | [-7.95, -0.37] | -2.21 | 0.032  #> trt [3]     |       -3.68 | 1.88 | [-7.47,  0.11] | -1.96 | 0.057  #> trt [4]     |       -0.58 | 1.88 | [-4.37,  3.21] | -0.31 | 0.760  #> trt [5]     |       -0.17 | 1.88 | [-3.96,  3.62] | -0.09 | 0.927  #> trt [6]     |        0.87 | 1.93 | [-3.02,  4.75] |  0.45 | 0.655  #> trt [7]     |       -0.37 | 1.88 | [-4.16,  3.42] | -0.20 | 0.844  #> trt [8]     |       -0.35 | 1.88 | [-4.14,  3.44] | -0.19 | 0.851  #> trt [9]     |        0.76 | 1.88 | [-3.03,  4.55] |  0.41 | 0.686  #> trt [10]    |       -3.27 | 1.88 | [-7.06,  0.52] | -1.74 | 0.089  #> trt [11]    |        0.68 | 1.93 | [-3.21,  4.56] |  0.35 | 0.728  #> trt [12]    |        2.22 | 1.88 | [-1.57,  6.01] |  1.18 | 0.243  #> trt [13]    |       -1.95 | 1.88 | [-5.74,  1.84] | -1.04 | 0.305  #> trt [14]    |       -3.24 | 1.88 | [-7.03,  0.55] | -1.72 | 0.092  #> trt [15]    |        0.35 | 1.88 | [-3.44,  4.14] |  0.18 | 0.855  #>  #> # Random Effects #>  #> Parameter             | Coefficient |   SE |       95% CI #> --------------------------------------------------------- #> SD (Intercept: block) |        2.12 | 0.52 | [1.31, 3.44] #> SD (Residual)         |        2.46 | 0.26 | [2.00, 3.02] #>  #> Uncertainty intervals (equal-tailed) and p-values (two-tailed) computed #>   using a Wald t-distribution approximation. print(VarCorr(x =  Exam4.1ML), comp = c(\"Variance\")) #>  Groups   Name        Variance #>  block    (Intercept) 4.5030   #>  Residual             6.0371    Exam4.1.lm <- lm(formula  = y~ trt + block, data = DataSet4.1) anova(object = Exam4.1.lm) #> Analysis of Variance Table #>  #> Response: y #>           Df Sum Sq Mean Sq F value   Pr(>F)    #> trt       14 299.43 21.3881  2.4825 0.017187 *  #> block     14 333.42 23.8159  2.7643 0.009004 ** #> Residuals 31 267.08  8.6154                     #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1"},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam5.1.html","id":null,"dir":"Reference","previous_headings":"","what":"Example 5.1 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-163) — Exam5.1","title":"Example 5.1 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-163) — Exam5.1","text":"Exam5.1 used show polynomial multiple regression binomial response","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam5.1.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Example 5.1 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-163) — Exam5.1","text":"Stroup, W. W. (2012).      Generalized Linear Mixed Models: Modern Concepts, Methods Applications.        CRC Press.","code":""},{"path":[]},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam5.1.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Example 5.1 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-163) — Exam5.1","text":"Muhammad Yaseen (myaseen208@gmail.com) Adeela Munawar (adeela.uaf@gmail.com)","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam5.1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example 5.1 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-163) — Exam5.1","text":"","code":"##---Sequential Fit of the logit Model Exam5.1.glm.1 <-   glm(       formula    =  F/N~ X     , family     =  quasibinomial(link = \"logit\")     , data       =  DataSet5.1     ) summary(Exam5.1.glm.1) #>  #> Call: #> glm(formula = F/N ~ X, family = quasibinomial(link = \"logit\"),  #>     data = DataSet5.1) #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|) #> (Intercept)  0.24519    0.33246   0.738    0.475 #> X            0.04325    0.04178   1.035    0.321 #>  #> (Dispersion parameter for quasibinomial family taken to be 0.1700061) #>  #>     Null deviance: 2.2947  on 13  degrees of freedom #> Residual deviance: 2.1078  on 12  degrees of freedom #> AIC: NA #>  #> Number of Fisher Scoring iterations: 3 #>  library(parameters) model_parameters(Exam5.1.glm.1) #> Parameter   | Log-Odds |   SE |        95% CI | t(12) |     p #> ------------------------------------------------------------- #> (Intercept) |     0.25 | 0.33 | [-0.40, 0.91] |  0.74 | 0.461 #> X           |     0.04 | 0.04 | [-0.04, 0.13] |  1.04 | 0.301 #>  #> Uncertainty intervals (profile-likelihood) and p-values (two-tailed) #>   computed using a Wald t-distribution approximation.  ## confint.default()   produce Wald Confidence interval as SAS produces ##---Likelihood Ratio test for Model 1 anova(object = Exam5.1.glm.1, test = \"Chisq\") #> Analysis of Deviance Table #>  #> Model: quasibinomial, link: logit #>  #> Response: F/N #>  #> Terms added sequentially (first to last) #>  #>  #>      Df Deviance Resid. Df Resid. Dev Pr(>Chi) #> NULL                    13     2.2947          #> X     1  0.18694        12     2.1078   0.2944  library(aod) #>  #> Attaching package: ‘aod’ #> The following object is masked from ‘package:survival’: #>  #>     rats WaldExam5.1.glm.1 <-   wald.test(       Sigma   = vcov(object = Exam5.1.glm.1)     , b       = coef(object = Exam5.1.glm.1)     , Terms   = 2     , L       = NULL     , H0      = NULL     , df      = NULL     , verbose = FALSE   )  ##---Sequential Fit of the logit Model quadratic terms involved Exam5.1.glm.2 <-   glm(       formula    =  F/N~ X + I(X^2)     , family     =  quasibinomial(link = \"logit\")     , data       =  DataSet5.1     ) summary( Exam5.1.glm.2 ) #>  #> Call: #> glm(formula = F/N ~ X + I(X^2), family = quasibinomial(link = \"logit\"),  #>     data = DataSet5.1) #>  #> Coefficients: #>              Estimate Std. Error t value Pr(>|t|)     #> (Intercept) -0.490760   0.259704  -1.890 0.085427 .   #> X            0.511312   0.107904   4.739 0.000611 *** #> I(X^2)      -0.029975   0.006617  -4.530 0.000858 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> (Dispersion parameter for quasibinomial family taken to be 0.06293754) #>  #>     Null deviance: 2.29474  on 13  degrees of freedom #> Residual deviance: 0.69489  on 11  degrees of freedom #> AIC: NA #>  #> Number of Fisher Scoring iterations: 4 #>  model_parameters( Exam5.1.glm.2 ) #> Parameter   | Log-Odds |       SE |         95% CI | t(11) |      p #> ------------------------------------------------------------------- #> (Intercept) |    -0.49 |     0.26 | [-1.01,  0.01] | -1.89 | 0.059  #> X           |     0.51 |     0.11 | [ 0.31,  0.73] |  4.74 | < .001 #> X^2         |    -0.03 | 6.62e-03 | [-0.04, -0.02] | -4.53 | < .001 #>  #> Uncertainty intervals (profile-likelihood) and p-values (two-tailed) #>   computed using a Wald t-distribution approximation.  ##---Likelihood Ratio test for Model Exam5.1.glm.2 anova(object = Exam5.1.glm.2, test = \"Chisq\") #> Analysis of Deviance Table #>  #> Model: quasibinomial, link: logit #>  #> Response: F/N #>  #> Terms added sequentially (first to last) #>  #>  #>        Df Deviance Resid. Df Resid. Dev  Pr(>Chi)     #> NULL                      13    2.29474               #> X       1  0.18694        12    2.10780   0.08481 .   #> I(X^2)  1  1.41292        11    0.69489 2.157e-06 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1  WaldExam5.1.glm.2 <-   wald.test(       Sigma   = vcov(object = Exam5.1.glm.2)     , b       = coef(object = Exam5.1.glm.2)     , Terms   = 3     , L       = NULL     , H0      = NULL     , df      = NULL     , verbose = FALSE   )  ##---Sequential Fit of the logit Model 5th power terms involved Exam5.1.glm.3 <-   glm(       formula    =  F/N~ X + I(X^2) + I(X^3) + I(X^4) + I(X^5)     , family     =  quasibinomial(link = \"logit\")     , data       =  DataSet5.1     ) summary(Exam5.1.glm.3) #>  #> Call: #> glm(formula = F/N ~ X + I(X^2) + I(X^3) + I(X^4) + I(X^5), family = quasibinomial(link = \"logit\"),  #>     data = DataSet5.1) #>  #> Coefficients: #>               Estimate Std. Error t value Pr(>|t|) #> (Intercept) -0.2986616  0.3875977  -0.771    0.463 #> X            0.2081471  0.7703070   0.270    0.794 #> I(X^2)       0.0603239  0.4225246   0.143    0.890 #> I(X^3)      -0.0120650  0.0821621  -0.147    0.887 #> I(X^4)       0.0008276  0.0064076   0.129    0.900 #> I(X^5)      -0.0000223  0.0001714  -0.130    0.900 #>  #> (Dispersion parameter for quasibinomial family taken to be 0.07609603) #>  #>     Null deviance: 2.29474  on 13  degrees of freedom #> Residual deviance: 0.62181  on  8  degrees of freedom #> AIC: NA #>  #> Number of Fisher Scoring iterations: 4 #>  model_parameters(Exam5.1.glm.3) #> Parameter   |  Log-Odds |       SE |        95% CI |  t(8) |     p #> ------------------------------------------------------------------ #> (Intercept) |     -0.30 |     0.39 | [-1.08, 0.46] | -0.77 | 0.441 #> X           |      0.21 |     0.77 | [-1.30, 1.73] |  0.27 | 0.787 #> X^2         |      0.06 |     0.42 | [-0.76, 0.90] |  0.14 | 0.886 #> X^3         |     -0.01 |     0.08 | [-0.18, 0.15] | -0.15 | 0.883 #> X^4         |  8.28e-04 | 6.41e-03 | [-0.01, 0.01] |  0.13 | 0.897 #> X^5         | -2.23e-05 | 1.71e-04 | [ 0.00, 0.00] | -0.13 | 0.897 #>  #> Uncertainty intervals (profile-likelihood) and p-values (two-tailed) #>   computed using a Wald t-distribution approximation.  ## confint.default()   produce Wald Confidence interval as SAS produces ##---Likelihood Ratio test for Model 1 anova(object =  Exam5.1.glm.3, test = \"Chisq\") #> Analysis of Deviance Table #>  #> Model: quasibinomial, link: logit #>  #> Response: F/N #>  #> Terms added sequentially (first to last) #>  #>  #>        Df Deviance Resid. Df Resid. Dev Pr(>Chi)     #> NULL                      13    2.29474              #> X       1  0.18694        12    2.10780   0.1170     #> I(X^2)  1  1.41292        11    0.69489 1.64e-05 *** #> I(X^3)  1  0.07179        10    0.62310   0.3314     #> I(X^4)  1  0.00000         9    0.62310   0.9952     #> I(X^5)  1  0.00129         8    0.62181   0.8965     #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1  WaldExam5.1.glm.3 <-   wald.test(       Sigma   = vcov(object = Exam5.1.glm.3)     , b       = coef(object = Exam5.1.glm.3)     , Terms   = 6     , L       = NULL     , H0      = NULL     , df      = NULL     , verbose = FALSE   )"},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam5.2.html","id":null,"dir":"Reference","previous_headings":"","what":"Example 5.2 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-164) — Exam5.2","title":"Example 5.2 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-164) — Exam5.2","text":"Exam5.2 three factor main effects design","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam5.2.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Example 5.2 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-164) — Exam5.2","text":"Stroup, W. W. (2012).      Generalized Linear Mixed Models: Modern Concepts, Methods Applications.        CRC Press.","code":""},{"path":[]},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam5.2.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Example 5.2 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-164) — Exam5.2","text":"Muhammad Yaseen (myaseen208@gmail.com) Adeela Munawar (adeela.uaf@gmail.com)","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam5.2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example 5.2 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-164) — Exam5.2","text":"","code":"DataSet5.2$a <- factor( x = DataSet5.2$a) DataSet5.2$b <- factor( x = DataSet5.2$b) DataSet5.2$c <- factor(x  = DataSet5.2$c)  ##---first adding factor a in model Exam5.2.lm1 <- lm(formula = y~ a, data  = DataSet5.2) summary(Exam5.2.lm1) #>  #> Call: #> lm(formula = y ~ a, data = DataSet5.2) #>  #> Residuals: #>     Min      1Q  Median      3Q     Max  #> -1.5833 -1.2833  0.4333  0.9333  1.1167  #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|)     #> (Intercept)   9.7667     0.6913   14.13 2.11e-06 *** #> a1            1.6167     0.8466    1.91   0.0978 .   #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 1.197 on 7 degrees of freedom #> Multiple R-squared:  0.3425,\tAdjusted R-squared:  0.2486  #> F-statistic: 3.646 on 1 and 7 DF,  p-value: 0.09783 #>  library(parameters) model_parameters(Exam5.2.lm1) #> Parameter   | Coefficient |   SE |         95% CI |  t(7) |      p #> ------------------------------------------------------------------ #> (Intercept) |        9.77 | 0.69 | [ 8.13, 11.40] | 14.13 | < .001 #> a [1]       |        1.62 | 0.85 | [-0.39,  3.62] |  1.91 | 0.098  #>  #> Uncertainty intervals (equal-tailed) and p-values (two-tailed) computed #>   using a Wald t-distribution approximation.  library(emmeans) ##---A first emmeans(object  = Exam5.2.lm1, specs = ~a) #>  a emmean    SE df lower.CL upper.CL #>  0   9.77 0.691  7     8.13     11.4 #>  1  11.38 0.489  7    10.23     12.5 #>  #> Confidence level used: 0.95  contrast(emmeans(object  = Exam5.2.lm1, specs = ~a), method = \"pairwise\") #>  contrast estimate    SE df t.ratio p.value #>  a0 - a1     -1.62 0.847  7  -1.910  0.0978 #>  anova(object = Exam5.2.lm1) #> Analysis of Variance Table #>  #> Response: y #>           Df  Sum Sq Mean Sq F value  Pr(>F)   #> a          1  5.2272  5.2272  3.6463 0.09783 . #> Residuals  7 10.0350  1.4336                   #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1  ##---then adding factor b in model Exam5.2.lm2 <- lm(formula = y~ a + b, data  = DataSet5.2) summary(Exam5.2.lm2) #>  #> Call: #> lm(formula = y ~ a + b, data = DataSet5.2) #>  #> Residuals: #>     Min      1Q  Median      3Q     Max  #> -1.8667 -0.7833  0.5667  0.7667  1.1833  #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|)     #> (Intercept)  10.2667     0.9083  11.303 2.87e-05 *** #> a1            1.3667     0.9083   1.505    0.183     #> b1           -0.7500     0.8617  -0.870    0.418     #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 1.219 on 6 degrees of freedom #> Multiple R-squared:  0.4162,\tAdjusted R-squared:  0.2216  #> F-statistic: 2.139 on 2 and 6 DF,  p-value: 0.199 #>  model_parameters(Exam5.2.lm2) #> Parameter   | Coefficient |   SE |         95% CI |  t(6) |      p #> ------------------------------------------------------------------ #> (Intercept) |       10.27 | 0.91 | [ 8.04, 12.49] | 11.30 | < .001 #> a [1]       |        1.37 | 0.91 | [-0.86,  3.59] |  1.50 | 0.183  #> b [1]       |       -0.75 | 0.86 | [-2.86,  1.36] | -0.87 | 0.418  #>  #> Uncertainty intervals (equal-tailed) and p-values (two-tailed) computed #>   using a Wald t-distribution approximation.  emmeans(object  = Exam5.2.lm2, specs = ~b) #>  b emmean    SE df lower.CL upper.CL #>  0   10.9 0.609  6     9.46     12.4 #>  1   10.2 0.609  6     8.71     11.7 #>  #> Results are averaged over the levels of: a  #> Confidence level used: 0.95  contrast(emmeans(object  = Exam5.2.lm2, specs = ~b), method = \"pairwise\") #>  contrast estimate    SE df t.ratio p.value #>  b0 - b1      0.75 0.862  6   0.870  0.4175 #>  #> Results are averaged over the levels of: a  anova(object = Exam5.2.lm2) #> Analysis of Variance Table #>  #> Response: y #>           Df Sum Sq Mean Sq F value Pr(>F) #> a          1 5.2272  5.2272  3.5200 0.1097 #> b          1 1.1250  1.1250  0.7576 0.4175 #> Residuals  6 8.9100  1.4850                 ##---then adding factor c in model Exam5.2.lm3 <- lm(formula = y~ a + b + c, data = DataSet5.2)  summary(Exam5.2.lm3) #>  #> Call: #> lm(formula = y ~ a + b + c, data = DataSet5.2) #>  #> Residuals: #>          1          2          3          4          5          6          7  #> -1.500e-01  1.500e-01  3.000e-01  1.000e-01 -8.000e-01  4.000e-01 -2.500e-01  #>          8          9  #>  2.500e-01  4.857e-17  #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|)     #> (Intercept)  10.5000     0.3469  30.264 7.39e-07 *** #> a1            1.6000     0.3469   4.612  0.00578 **  #> b1           -0.0500     0.3469  -0.144  0.89104     #> c1           -2.1000     0.3469  -6.053  0.00178 **  #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 0.4626 on 5 degrees of freedom #> Multiple R-squared:  0.9299,\tAdjusted R-squared:  0.8878  #> F-statistic: 22.11 on 3 and 5 DF,  p-value: 0.002584 #>  model_parameters(Exam5.2.lm3) #> Parameter   | Coefficient |   SE |         95% CI |  t(5) |      p #> ------------------------------------------------------------------ #> (Intercept) |       10.50 | 0.35 | [ 9.61, 11.39] | 30.26 | < .001 #> a [1]       |        1.60 | 0.35 | [ 0.71,  2.49] |  4.61 | 0.006  #> b [1]       |       -0.05 | 0.35 | [-0.94,  0.84] | -0.14 | 0.891  #> c [1]       |       -2.10 | 0.35 | [-2.99, -1.21] | -6.05 | 0.002  #>  #> Uncertainty intervals (equal-tailed) and p-values (two-tailed) computed #>   using a Wald t-distribution approximation.  emmeans(object  = Exam5.2.lm3, specs = ~c) #>  c emmean    SE df lower.CL upper.CL #>  0  11.28 0.200  5    10.76     11.8 #>  1   9.18 0.283  5     8.45      9.9 #>  #> Results are averaged over the levels of: a, b  #> Confidence level used: 0.95  contrast(emmeans(object  = Exam5.2.lm3, specs = ~c), method = \"pairwise\") #>  contrast estimate    SE df t.ratio p.value #>  c0 - c1       2.1 0.347  5   6.053  0.0018 #>  #> Results are averaged over the levels of: a, b  anova(object = Exam5.2.lm3) #> Analysis of Variance Table #>  #> Response: y #>           Df Sum Sq Mean Sq F value   Pr(>F)    #> a          1 5.2272  5.2272  24.426 0.004314 ** #> b          1 1.1250  1.1250   5.257 0.070401 .  #> c          1 7.8400  7.8400  36.636 0.001775 ** #> Residuals  5 1.0700  0.2140                     #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1  ##---Now Change the order and add b first in model Exam5.2.lm4 <- lm(formula = y ~  b, data = DataSet5.2) summary(Exam5.2.lm4) #>  #> Call: #> lm(formula = y ~ b, data = DataSet5.2) #>  #> Residuals: #>    Min     1Q Median     3Q    Max  #>  -2.96  -0.10   0.00   0.84   1.14  #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|)     #> (Intercept)  11.3600     0.5921  19.185  2.6e-07 *** #> b1           -1.1600     0.8882  -1.306    0.233     #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 1.324 on 7 degrees of freedom #> Multiple R-squared:  0.1959,\tAdjusted R-squared:  0.08105  #> F-statistic: 1.706 on 1 and 7 DF,  p-value: 0.2328 #>  model_parameters(Exam5.2.lm4) #> Parameter   | Coefficient |   SE |         95% CI |  t(7) |      p #> ------------------------------------------------------------------ #> (Intercept) |       11.36 | 0.59 | [ 9.96, 12.76] | 19.18 | < .001 #> b [1]       |       -1.16 | 0.89 | [-3.26,  0.94] | -1.31 | 0.233  #>  #> Uncertainty intervals (equal-tailed) and p-values (two-tailed) computed #>   using a Wald t-distribution approximation.  emmeans(object  = Exam5.2.lm4, specs = ~b) #>  b emmean    SE df lower.CL upper.CL #>  0   11.4 0.592  7     9.96     12.8 #>  1   10.2 0.662  7     8.63     11.8 #>  #> Confidence level used: 0.95  contrast(emmeans(object  = Exam5.2.lm4, specs = ~b), method = \"pairwise\") #>  contrast estimate    SE df t.ratio p.value #>  b0 - b1      1.16 0.888  7   1.306  0.2328 #>  anova(object = Exam5.2.lm4) #> Analysis of Variance Table #>  #> Response: y #>           Df  Sum Sq Mean Sq F value Pr(>F) #> b          1  2.9902  2.9902  1.7056 0.2328 #> Residuals  7 12.2720  1.7531                  ##---then adding factor a in model Exam5.2.lm5 <- lm(formula = y ~ b + a, data  = DataSet5.2) summary(Exam5.2.lm5) #>  #> Call: #> lm(formula = y ~ b + a, data = DataSet5.2) #>  #> Residuals: #>     Min      1Q  Median      3Q     Max  #> -1.8667 -0.7833  0.5667  0.7667  1.1833  #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|)     #> (Intercept)  10.2667     0.9083  11.303 2.87e-05 *** #> b1           -0.7500     0.8617  -0.870    0.418     #> a1            1.3667     0.9083   1.505    0.183     #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 1.219 on 6 degrees of freedom #> Multiple R-squared:  0.4162,\tAdjusted R-squared:  0.2216  #> F-statistic: 2.139 on 2 and 6 DF,  p-value: 0.199 #>  model_parameters(Exam5.2.lm5) #> Parameter   | Coefficient |   SE |         95% CI |  t(6) |      p #> ------------------------------------------------------------------ #> (Intercept) |       10.27 | 0.91 | [ 8.04, 12.49] | 11.30 | < .001 #> b [1]       |       -0.75 | 0.86 | [-2.86,  1.36] | -0.87 | 0.418  #> a [1]       |        1.37 | 0.91 | [-0.86,  3.59] |  1.50 | 0.183  #>  #> Uncertainty intervals (equal-tailed) and p-values (two-tailed) computed #>   using a Wald t-distribution approximation.  emmeans(object  = Exam5.2.lm5, specs = ~a) #>  a emmean    SE df lower.CL upper.CL #>  0   9.89 0.718  6     8.13     11.6 #>  1  11.26 0.518  6     9.99     12.5 #>  #> Results are averaged over the levels of: b  #> Confidence level used: 0.95  contrast(emmeans(object  = Exam5.2.lm5, specs = ~a), method = \"pairwise\") #>  contrast estimate    SE df t.ratio p.value #>  a0 - a1     -1.37 0.908  6  -1.505  0.1831 #>  #> Results are averaged over the levels of: b  anova(object = Exam5.2.lm5) #> Analysis of Variance Table #>  #> Response: y #>           Df Sum Sq Mean Sq F value Pr(>F) #> b          1 2.9902  2.9902  2.0136 0.2057 #> a          1 3.3620  3.3620  2.2640 0.1831 #> Residuals  6 8.9100  1.4850"},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam5.3.html","id":null,"dir":"Reference","previous_headings":"","what":"Example 5.3 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-172) — Exam5.3","title":"Example 5.3 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-172) — Exam5.3","text":"Exam5.3 Inference using empirical standard error different Bias connection","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam5.3.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Example 5.3 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-172) — Exam5.3","text":"Stroup, W. W. (2012).      Generalized Linear Mixed Models: Modern Concepts, Methods Applications.        CRC Press.","code":""},{"path":[]},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam5.3.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Example 5.3 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-172) — Exam5.3","text":"Muhammad Yaseen (myaseen208@gmail.com) Adeela Munawar (adeela.uaf@gmail.com)","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam5.3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example 5.3 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-172) — Exam5.3","text":"","code":"data(DataSet4.1) DataSet4.1$trt   <- factor(x = DataSet4.1$trt) DataSet4.1$block <- factor( x = DataSet4.1$block)  ##---REML estimates on page 172 library(lmerTest) Exam5.3REML <-  lmerTest::lmer(formula = y ~ trt + (1|block), data = DataSet4.1, REML = TRUE) Exam5.3REML #> Linear mixed model fit by REML ['lmerModLmerTest'] #> Formula: y ~ trt + (1 | block) #>    Data: DataSet4.1 #> REML criterion at convergence: 259.2176 #> Random effects: #>  Groups   Name        Std.Dev. #>  block    (Intercept) 2.157    #>  Residual             2.925    #> Number of obs: 60, groups:  block, 15 #> Fixed Effects: #> (Intercept)         trt2         trt3         trt4         trt5         trt6   #>     28.1752      -4.1221      -3.6258      -0.3369      -0.1262       0.9317   #>        trt7         trt8         trt9        trt10        trt11        trt12   #>     -0.2854      -0.3592       0.7379      -3.2646       0.8118       2.3530   #>       trt13        trt14        trt15   #>     -1.9975      -3.2621       0.4171   library(parameters) model_parameters(Exam5.3REML) #> # Fixed Effects #>  #> Parameter   | Coefficient |   SE |         95% CI | t(43) |      p #> ------------------------------------------------------------------ #> (Intercept) |       28.18 | 1.66 | [24.82, 31.53] | 16.93 | < .001 #> trt [2]     |       -4.12 | 2.22 | [-8.60,  0.36] | -1.86 | 0.070  #> trt [3]     |       -3.63 | 2.22 | [-8.10,  0.85] | -1.63 | 0.110  #> trt [4]     |       -0.34 | 2.22 | [-4.82,  4.14] | -0.15 | 0.880  #> trt [5]     |       -0.13 | 2.22 | [-4.60,  4.35] | -0.06 | 0.955  #> trt [6]     |        0.93 | 2.27 | [-3.65,  5.51] |  0.41 | 0.684  #> trt [7]     |       -0.29 | 2.22 | [-4.76,  4.19] | -0.13 | 0.898  #> trt [8]     |       -0.36 | 2.22 | [-4.84,  4.12] | -0.16 | 0.872  #> trt [9]     |        0.74 | 2.22 | [-3.74,  5.22] |  0.33 | 0.741  #> trt [10]    |       -3.26 | 2.22 | [-7.74,  1.21] | -1.47 | 0.149  #> trt [11]    |        0.81 | 2.27 | [-3.77,  5.39] |  0.36 | 0.723  #> trt [12]    |        2.35 | 2.22 | [-2.13,  6.83] |  1.06 | 0.295  #> trt [13]    |       -2.00 | 2.22 | [-6.48,  2.48] | -0.90 | 0.373  #> trt [14]    |       -3.26 | 2.22 | [-7.74,  1.22] | -1.47 | 0.149  #> trt [15]    |        0.42 | 2.22 | [-4.06,  4.90] |  0.19 | 0.852  #>  #> # Random Effects #>  #> Parameter             | Coefficient |   SE |       95% CI #> --------------------------------------------------------- #> SD (Intercept: block) |        2.16 | 0.66 | [1.18, 3.93] #> SD (Residual)         |        2.93 | 0.37 | [2.28, 3.75] #>  #> Uncertainty intervals (equal-tailed) and p-values (two-tailed) computed #>   using a Wald t-distribution approximation. ##---Standard Error Type \"Model Based\" with no Bias Connection anova(object = Exam5.3REML) #> Type III Analysis of Variance Table with Satterthwaite's method #>     Sum Sq Mean Sq NumDF  DenDF F value Pr(>F) #> trt 183.41    13.1    14 36.234  1.5312 0.1491 anova(object = Exam5.3REML, ddf = \"Satterthwaite\") #> Type III Analysis of Variance Table with Satterthwaite's method #>     Sum Sq Mean Sq NumDF  DenDF F value Pr(>F) #> trt 183.41    13.1    14 36.234  1.5312 0.1491   ##---Standard Error Type \"Model Based\" with \"Kenward-Roger approximation\" Bias Connection anova(object = Exam5.3REML, ddf = \"Kenward-Roger\") #> Type III Analysis of Variance Table with Kenward-Roger's method #>     Sum Sq Mean Sq NumDF  DenDF F value Pr(>F) #> trt 177.28  12.663    14 35.876  1.4799 0.1689  ##---ML estimates on page 172 Exam5.3ML <- lmerTest::lmer(formula = y ~ trt + ( 1|block ), data = DataSet4.1, REML = FALSE) Exam5.3ML #> Linear mixed model fit by maximum likelihood  ['lmerModLmerTest'] #> Formula: y ~ trt + (1 | block) #>    Data: DataSet4.1 #>       AIC       BIC    logLik  deviance  df.resid  #>  332.8808  368.4846 -149.4404  298.8808        43  #> Random effects: #>  Groups   Name        Std.Dev. #>  block    (Intercept) 2.122    #>  Residual             2.457    #> Number of obs: 60, groups:  block, 15 #> Fixed Effects: #> (Intercept)         trt2         trt3         trt4         trt5         trt6   #>     28.2268      -4.1617      -3.6804      -0.5774      -0.1739       0.8665   #>        trt7         trt8         trt9        trt10        trt11        trt12   #>     -0.3725      -0.3544       0.7644      -3.2707       0.6753       2.2244   #>       trt13        trt14        trt15   #>     -1.9513      -3.2356       0.3458   library(parameters) model_parameters(Exam5.3ML) #> # Fixed Effects #>  #> Parameter   | Coefficient |   SE |         95% CI | t(43) |      p #> ------------------------------------------------------------------ #> (Intercept) |       28.23 | 1.44 | [25.33, 31.12] | 19.66 | < .001 #> trt [2]     |       -4.16 | 1.88 | [-7.95, -0.37] | -2.21 | 0.032  #> trt [3]     |       -3.68 | 1.88 | [-7.47,  0.11] | -1.96 | 0.057  #> trt [4]     |       -0.58 | 1.88 | [-4.37,  3.21] | -0.31 | 0.760  #> trt [5]     |       -0.17 | 1.88 | [-3.96,  3.62] | -0.09 | 0.927  #> trt [6]     |        0.87 | 1.93 | [-3.02,  4.75] |  0.45 | 0.655  #> trt [7]     |       -0.37 | 1.88 | [-4.16,  3.42] | -0.20 | 0.844  #> trt [8]     |       -0.35 | 1.88 | [-4.14,  3.44] | -0.19 | 0.851  #> trt [9]     |        0.76 | 1.88 | [-3.03,  4.55] |  0.41 | 0.686  #> trt [10]    |       -3.27 | 1.88 | [-7.06,  0.52] | -1.74 | 0.089  #> trt [11]    |        0.68 | 1.93 | [-3.21,  4.56] |  0.35 | 0.728  #> trt [12]    |        2.22 | 1.88 | [-1.57,  6.01] |  1.18 | 0.243  #> trt [13]    |       -1.95 | 1.88 | [-5.74,  1.84] | -1.04 | 0.305  #> trt [14]    |       -3.24 | 1.88 | [-7.03,  0.55] | -1.72 | 0.092  #> trt [15]    |        0.35 | 1.88 | [-3.44,  4.14] |  0.18 | 0.855  #>  #> # Random Effects #>  #> Parameter             | Coefficient |   SE |       95% CI #> --------------------------------------------------------- #> SD (Intercept: block) |        2.12 | 0.52 | [1.31, 3.44] #> SD (Residual)         |        2.46 | 0.26 | [2.00, 3.02] #>  #> Uncertainty intervals (equal-tailed) and p-values (two-tailed) computed #>   using a Wald t-distribution approximation.  ##---Standard Error Type \"Model Based\" with no Bias Connection anova(object = Exam5.3ML ) #> Type III Analysis of Variance Table with Satterthwaite's method #>     Sum Sq Mean Sq NumDF  DenDF F value  Pr(>F)   #> trt 175.26  12.518    14 49.043  2.0736 0.03067 * #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 anova(object = Exam5.3ML, ddf = \"Satterthwaite\") #> Type III Analysis of Variance Table with Satterthwaite's method #>     Sum Sq Mean Sq NumDF  DenDF F value  Pr(>F)   #> trt 175.26  12.518    14 49.043  2.0736 0.03067 * #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1"},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam7.1.html","id":null,"dir":"Reference","previous_headings":"","what":"Example 7.1 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup (p-213) — Exam7.1","title":"Example 7.1 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup (p-213) — Exam7.1","text":"Exam7.1 explains multifactor models factors qualitative","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam7.1.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Example 7.1 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup (p-213) — Exam7.1","text":"Stroup, W. W. (2012).      Generalized Linear Mixed Models: Modern Concepts, Methods Applications.        CRC Press. @seealso    DataSet7.1","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam7.1.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Example 7.1 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup (p-213) — Exam7.1","text":"Muhammad Yaseen (myaseen208@gmail.com) Adeela Munawar (adeela.uaf@gmail.com)","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam7.1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example 7.1 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup (p-213) — Exam7.1","text":"","code":"library(emmeans) library(car) data(DataSet7.1)  DataSet7.1$a <- factor(x = DataSet7.1$a) DataSet7.1$b <- factor(x = DataSet7.1$b)  Exam7.1.lm1 <- lm(formula = y ~ a + b + a*b, data = DataSet7.1) summary(Exam7.1.lm1) #>  #> Call: #> lm(formula = y ~ a + b + a * b, data = DataSet7.1) #>  #> Residuals: #>    Min     1Q Median     3Q    Max  #> -10.50  -2.50   0.00   3.25   7.75  #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|)     #> (Intercept)   50.500      2.561  19.718 1.23e-13 *** #> a1            17.250      3.622   4.763 0.000156 *** #> b1             9.250      3.622   2.554 0.019936 *   #> b2            21.000      3.622   5.798 1.71e-05 *** #> a1:b1         -9.750      5.122  -1.904 0.073089 .   #> a1:b2        -17.750      5.122  -3.465 0.002761 **  #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 5.122 on 18 degrees of freedom #> Multiple R-squared:  0.7352,\tAdjusted R-squared:  0.6617  #> F-statistic: 9.997 on 5 and 18 DF,  p-value: 0.0001049 #>  library(parameters) model_parameters(Exam7.1.lm1) #> Parameter     | Coefficient |   SE |          95% CI | t(18) |      p #> --------------------------------------------------------------------- #> (Intercept)   |       50.50 | 2.56 | [ 45.12, 55.88] | 19.72 | < .001 #> a [1]         |       17.25 | 3.62 | [  9.64, 24.86] |  4.76 | < .001 #> b [1]         |        9.25 | 3.62 | [  1.64, 16.86] |  2.55 | 0.020  #> b [2]         |       21.00 | 3.62 | [ 13.39, 28.61] |  5.80 | < .001 #> a [1] × b [1] |       -9.75 | 5.12 | [-20.51,  1.01] | -1.90 | 0.073  #> a [1] × b [2] |      -17.75 | 5.12 | [-28.51, -6.99] | -3.47 | 0.003  #>  #> Uncertainty intervals (equal-tailed) and p-values (two-tailed) computed #>   using a Wald t-distribution approximation. anova(Exam7.1.lm1) #> Analysis of Variance Table #>  #> Response: y #>           Df Sum Sq Mean Sq F value    Pr(>F)     #> a          1 392.04  392.04 14.9428 0.0011330 **  #> b          2 603.25  301.62 11.4966 0.0006068 *** #> a:b        2 316.08  158.04  6.0238 0.0099348 **  #> Residuals 18 472.25   26.24                       #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1  ##---Result obtained as in SLICE statement in SAS for a0 & a1 library(phia) testInteractions(     model  = Exam7.1.lm1   , custom = list(a = c(\"0\" = 1))   , across = \"b\"   ) #> Warning: number of columns of result, 8, is not a multiple of vector length 6 of arg 2 #> F Test:  #> P-value adjustment method: holm #>            b1     b2     SE1    SE2 Df Sum of Sq      F    Pr(>F)     #> a1        -21 -11.75  3.6219   3.62  2    886.17 16.888 7.417e-05 *** #> Residuals            18.0000 472.25                                   #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1  testInteractions(     model  = Exam7.1.lm1   , custom = list(a = c(\"1\" = 1))   , across = \"b\"   ) #> Warning: number of columns of result, 8, is not a multiple of vector length 6 of arg 2 #> F Test:  #> P-value adjustment method: holm #>              b1    b2     SE1    SE2 Df Sum of Sq      F Pr(>F) #> a1        -3.25 -3.75  3.6219   3.62  2    33.167 0.6321 0.5429 #> Residuals             18.0000 472.25                              ##---Interaction plot emmip(        object  = Exam7.1.lm1      , formula = a~b      , ylab    = \"y Lsmeans\"      , main    = \"Lsmeans for a*b\"       )   #------------------------------------------------------------- ## Individula least squares treatment means #------------------------------------------------------------- emmeans(object = Exam7.1.lm1, specs = ~a*b) #>  a b emmean   SE df lower.CL upper.CL #>  0 0   50.5 2.56 18     45.1     55.9 #>  1 0   67.8 2.56 18     62.4     73.1 #>  0 1   59.8 2.56 18     54.4     65.1 #>  1 1   67.2 2.56 18     61.9     72.6 #>  0 2   71.5 2.56 18     66.1     76.9 #>  1 2   71.0 2.56 18     65.6     76.4 #>  #> Confidence level used: 0.95   ##---Simpe effects comparison of interaction by a ##   (but it doesn't give the same p-value as in article 7.4.2 page#215) emmeans(object = Exam7.1.lm1, specs = pairwise~b|a)$contrasts #> a = 0: #>  contrast estimate   SE df t.ratio p.value #>  b0 - b1     -9.25 3.62 18  -2.554  0.0498 #>  b0 - b2    -21.00 3.62 18  -5.798  <.0001 #>  b1 - b2    -11.75 3.62 18  -3.244  0.0119 #>  #> a = 1: #>  contrast estimate   SE df t.ratio p.value #>  b0 - b1      0.50 3.62 18   0.138  0.9896 #>  b0 - b2     -3.25 3.62 18  -0.897  0.6488 #>  b1 - b2     -3.75 3.62 18  -1.035  0.5649 #>  #> P value adjustment: tukey method for comparing a family of 3 estimates   pairs(emmeans(object = Exam7.1.lm1, specs = ~b|a), simple = \"each\", combine = TRUE) #>  a b contrast estimate   SE df t.ratio p.value #>  0 . b0 - b1     -9.25 3.62 18  -2.554  0.1794 #>  0 . b0 - b2    -21.00 3.62 18  -5.798  0.0002 #>  0 . b1 - b2    -11.75 3.62 18  -3.244  0.0405 #>  1 . b0 - b1      0.50 3.62 18   0.138  1.0000 #>  1 . b0 - b2     -3.25 3.62 18  -0.897  1.0000 #>  1 . b1 - b2     -3.75 3.62 18  -1.035  1.0000 #>  . 0 a0 - a1    -17.25 3.62 18  -4.763  0.0014 #>  . 1 a0 - a1     -7.50 3.62 18  -2.071  0.4773 #>  . 2 a0 - a1      0.50 3.62 18   0.138  1.0000 #>  #> P value adjustment: bonferroni method for 9 tests  pairs(emmeans(object = Exam7.1.lm1, specs = ~b|a), simple = \"a\") #> b = 0: #>  contrast estimate   SE df t.ratio p.value #>  a0 - a1     -17.2 3.62 18  -4.763  0.0002 #>  #> b = 1: #>  contrast estimate   SE df t.ratio p.value #>  a0 - a1      -7.5 3.62 18  -2.071  0.0530 #>  #> b = 2: #>  contrast estimate   SE df t.ratio p.value #>  a0 - a1       0.5 3.62 18   0.138  0.8917 #>  pairs(emmeans(object = Exam7.1.lm1, specs = ~b|a), simple = \"b\") #> a = 0: #>  contrast estimate   SE df t.ratio p.value #>  b0 - b1     -9.25 3.62 18  -2.554  0.0498 #>  b0 - b2    -21.00 3.62 18  -5.798  <.0001 #>  b1 - b2    -11.75 3.62 18  -3.244  0.0119 #>  #> a = 1: #>  contrast estimate   SE df t.ratio p.value #>  b0 - b1      0.50 3.62 18   0.138  0.9896 #>  b0 - b2     -3.25 3.62 18  -0.897  0.6488 #>  b1 - b2     -3.75 3.62 18  -1.035  0.5649 #>  #> P value adjustment: tukey method for comparing a family of 3 estimates  pairs(emmeans(object = Exam7.1.lm1, specs = ~b|a)) #> a = 0: #>  contrast estimate   SE df t.ratio p.value #>  b0 - b1     -9.25 3.62 18  -2.554  0.0498 #>  b0 - b2    -21.00 3.62 18  -5.798  <.0001 #>  b1 - b2    -11.75 3.62 18  -3.244  0.0119 #>  #> a = 1: #>  contrast estimate   SE df t.ratio p.value #>  b0 - b1      0.50 3.62 18   0.138  0.9896 #>  b0 - b2     -3.25 3.62 18  -0.897  0.6488 #>  b1 - b2     -3.75 3.62 18  -1.035  0.5649 #>  #> P value adjustment: tukey method for comparing a family of 3 estimates  contrast(emmeans(object = Exam7.1.lm1, specs = ~b|a)) #> a = 0: #>  contrast  estimate   SE df t.ratio p.value #>  b0 effect  -10.083 2.09 18  -4.822  0.0002 #>  b1 effect   -0.833 2.09 18  -0.399  0.6949 #>  b2 effect   10.917 2.09 18   5.221  0.0002 #>  #> a = 1: #>  contrast  estimate   SE df t.ratio p.value #>  b0 effect   -0.917 2.09 18  -0.438  0.6663 #>  b1 effect   -1.417 2.09 18  -0.677  0.6663 #>  b2 effect    2.333 2.09 18   1.116  0.6663 #>  #> P value adjustment: fdr method for 3 tests  emmeans(object = Exam7.1.lm1, specs = pairwise~b|a) #> $emmeans #> a = 0: #>  b emmean   SE df lower.CL upper.CL #>  0   50.5 2.56 18     45.1     55.9 #>  1   59.8 2.56 18     54.4     65.1 #>  2   71.5 2.56 18     66.1     76.9 #>  #> a = 1: #>  b emmean   SE df lower.CL upper.CL #>  0   67.8 2.56 18     62.4     73.1 #>  1   67.2 2.56 18     61.9     72.6 #>  2   71.0 2.56 18     65.6     76.4 #>  #> Confidence level used: 0.95  #>  #> $contrasts #> a = 0: #>  contrast estimate   SE df t.ratio p.value #>  b0 - b1     -9.25 3.62 18  -2.554  0.0498 #>  b0 - b2    -21.00 3.62 18  -5.798  <.0001 #>  b1 - b2    -11.75 3.62 18  -3.244  0.0119 #>  #> a = 1: #>  contrast estimate   SE df t.ratio p.value #>  b0 - b1      0.50 3.62 18   0.138  0.9896 #>  b0 - b2     -3.25 3.62 18  -0.897  0.6488 #>  b1 - b2     -3.75 3.62 18  -1.035  0.5649 #>  #> P value adjustment: tukey method for comparing a family of 3 estimates  #>  emmeans(object = Exam7.1.lm1, specs = pairwise~b|a)$contrasts #> a = 0: #>  contrast estimate   SE df t.ratio p.value #>  b0 - b1     -9.25 3.62 18  -2.554  0.0498 #>  b0 - b2    -21.00 3.62 18  -5.798  <.0001 #>  b1 - b2    -11.75 3.62 18  -3.244  0.0119 #>  #> a = 1: #>  contrast estimate   SE df t.ratio p.value #>  b0 - b1      0.50 3.62 18   0.138  0.9896 #>  b0 - b2     -3.25 3.62 18  -0.897  0.6488 #>  b1 - b2     -3.75 3.62 18  -1.035  0.5649 #>  #> P value adjustment: tukey method for comparing a family of 3 estimates   ##---Alternative method of pairwise comparisons by ## applying contrast ##   coefficient (gives the same p-value as in 7.4.2) contrast(           emmeans(object = Exam7.1.lm1, specs = ~a*b)         , list (                 c1 = c(1, 0, -1, 0, 0, 0)               , c2 = c(1, 0, 0, 0, -1, 0)               , c3 = c(0, 0, 1, 0, -1, 0)               , c4 = c(0, 1, 0, -1, 0, 0)               , c5 = c(0, 1, 0, 0, 0, -1)               , c6 = c(0, 1, 0, 0, -1, 0)               )   ) #>  contrast estimate   SE df t.ratio p.value #>  c1          -9.25 3.62 18  -2.554  0.0199 #>  c2         -21.00 3.62 18  -5.798  <.0001 #>  c3         -11.75 3.62 18  -3.244  0.0045 #>  c4           0.50 3.62 18   0.138  0.8917 #>  c5          -3.25 3.62 18  -0.897  0.3814 #>  c6          -3.75 3.62 18  -1.035  0.3142 #>    ##---Nested Model (page 216)---- Exam7.1.lm2 <- lm(formula = y ~ a + a %in% b, data = DataSet7.1)  summary(Exam7.1.lm2) #>  #> Call: #> lm(formula = y ~ a + a %in% b, data = DataSet7.1) #>  #> Residuals: #>    Min     1Q Median     3Q    Max  #> -10.50  -2.50   0.00   3.25   7.75  #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|)     #> (Intercept)   50.500      2.561  19.718 1.23e-13 *** #> a1            17.250      3.622   4.763 0.000156 *** #> a0:b1          9.250      3.622   2.554 0.019936 *   #> a1:b1         -0.500      3.622  -0.138 0.891734     #> a0:b2         21.000      3.622   5.798 1.71e-05 *** #> a1:b2          3.250      3.622   0.897 0.381392     #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 5.122 on 18 degrees of freedom #> Multiple R-squared:  0.7352,\tAdjusted R-squared:  0.6617  #> F-statistic: 9.997 on 5 and 18 DF,  p-value: 0.0001049 #>  model_parameters(Exam7.1.lm2) #> Parameter   | Coefficient |   SE |         95% CI | t(18) |      p #> ------------------------------------------------------------------ #> (Intercept) |       50.50 | 2.56 | [45.12, 55.88] | 19.72 | < .001 #> a [1]       |       17.25 | 3.62 | [ 9.64, 24.86] |  4.76 | < .001 #> a [0] × b1  |        9.25 | 3.62 | [ 1.64, 16.86] |  2.55 | 0.020  #> a [1] × b1  |       -0.50 | 3.62 | [-8.11,  7.11] | -0.14 | 0.892  #> a [0] × b2  |       21.00 | 3.62 | [13.39, 28.61] |  5.80 | < .001 #> a [1] × b2  |        3.25 | 3.62 | [-4.36, 10.86] |  0.90 | 0.381  #>  #> Uncertainty intervals (equal-tailed) and p-values (two-tailed) computed #>   using a Wald t-distribution approximation. anova(Exam7.1.lm2) #> Analysis of Variance Table #>  #> Response: y #>           Df Sum Sq Mean Sq F value    Pr(>F)     #> a          1 392.04  392.04 14.9428 0.0011330 **  #> a:b        4 919.33  229.83  8.7602 0.0004147 *** #> Residuals 18 472.25   26.24                       #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1  car::linearHypothesis(Exam7.1.lm2, c(\"a0:b1 = a0:b2\")) #> Linear hypothesis test #>  #> Hypothesis: #> a0:b1 - a0:b2 = 0 #>  #> Model 1: restricted model #> Model 2: y ~ a + a %in% b #>  #>   Res.Df    RSS Df Sum of Sq      F   Pr(>F)    #> 1     19 748.38                                 #> 2     18 472.25  1    276.12 10.525 0.004503 ** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 car::linearHypothesis(Exam7.1.lm2, c(\"a1:b1 = a1:b2\")) #> Linear hypothesis test #>  #> Hypothesis: #> a1:b1 - a1:b2 = 0 #>  #> Model 1: restricted model #> Model 2: y ~ a + a %in% b #>  #>   Res.Df    RSS Df Sum of Sq     F Pr(>F) #> 1     19 500.38                           #> 2     18 472.25  1    28.125 1.072 0.3142   ##---Bonferroni's adjusted p-values emmeans(object  = Exam7.1.lm2, specs = pairwise~b|a, adjust  = \"bonferroni\")$contrasts #> NOTE: A nesting structure was detected in the fitted model: #>     b %in% a #> a = 0: #>  contrast estimate   SE df t.ratio p.value #>  b0 - b1     -9.25 3.62 18  -2.554  0.0598 #>  b0 - b2    -21.00 3.62 18  -5.798  0.0001 #>  b1 - b2    -11.75 3.62 18  -3.244  0.0135 #>  #> a = 1: #>  contrast estimate   SE df t.ratio p.value #>  b0 - b1      0.50 3.62 18   0.138  1.0000 #>  b0 - b2     -3.25 3.62 18  -0.897  1.0000 #>  b1 - b2     -3.75 3.62 18  -1.035  0.9426 #>  #> P value adjustment: bonferroni method for 3 tests   ##--- Alternative method of pairwise comparisons by ##  applying contrast coefficient with Bonferroni adjustment contrast(           emmeans(object = Exam7.1.lm1, specs = ~a*b)         , list (                 c1 = c(1, 0, -1, 0, 0, 0)               , c2 = c(1, 0, 0, 0, -1, 0)               , c3 = c(0, 0, 1, 0, -1, 0)               , c4 = c(0, 1, 0, -1, 0, 0)               , c5 = c(0, 1, 0, 0, 0, -1)               , c6 = c(0, 1, 0, 0, -1, 0)               )         , adjust = \"bonferroni\"   ) #>  contrast estimate   SE df t.ratio p.value #>  c1          -9.25 3.62 18  -2.554  0.1196 #>  c2         -21.00 3.62 18  -5.798  0.0001 #>  c3         -11.75 3.62 18  -3.244  0.0270 #>  c4           0.50 3.62 18   0.138  1.0000 #>  c5          -3.25 3.62 18  -0.897  1.0000 #>  c6          -3.75 3.62 18  -1.035  1.0000 #>  #> P value adjustment: bonferroni method for 6 tests"},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam7.2.html","id":null,"dir":"Reference","previous_headings":"","what":"Example 7.2 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup (p-219) — Exam7.2","title":"Example 7.2 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup (p-219) — Exam7.2","text":"Exam7.2 explains multifactor models factors qualitative quantitative(Equal slopes ANCOVA)","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam7.2.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Example 7.2 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup (p-219) — Exam7.2","text":"Stroup, W. W. (2012).      Generalized Linear Mixed Models: Modern Concepts, Methods Applications.        CRC Press. @seealso    DataSet7.2","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam7.2.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Example 7.2 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup (p-219) — Exam7.2","text":"Muhammad Yaseen (myaseen208@gmail.com) Adeela Munawar (adeela.uaf@gmail.com)","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam7.2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example 7.2 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup (p-219) — Exam7.2","text":"","code":"library(emmeans) library(car) library(ggplot2)  data(DataSet7.2) DataSet7.2$trt <- factor( x = DataSet7.2$trt )  ##----ANCOVA(Equal slope Model) Exam7.2fm1 <- aov(formula = y ~ trt*x, data = DataSet7.2) car::Anova(mod = Exam7.2fm1 , type = \"III\") #> Anova Table (Type III tests) #>  #> Response: y #>              Sum Sq Df  F value    Pr(>F)     #> (Intercept) 1225.64  1 199.1846 7.785e-09 *** #> trt           55.55  3   3.0091   0.07225 .   #> x            209.27  1  34.0093 8.064e-05 *** #> trt:x         25.96  3   1.4062   0.28893     #> Residuals     73.84 12                        #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1  ##---ANCOVA(without interaction because of non significant slope effect) Exam7.2fm2 <- aov(formula = y ~ trt + x, data    = DataSet7.2) car::Anova(mod = Exam7.2fm2 , type = \"III\") #> Anova Table (Type III tests) #>  #> Response: y #>              Sum Sq Df F value    Pr(>F)     #> (Intercept) 2994.45  1 450.076 1.340e-12 *** #> trt          302.16  3  15.138 8.301e-05 *** #> x            542.90  1  81.599 1.871e-07 *** #> Residuals     99.80 15                       #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1  ##---Ls means for 2nd model emmeans(object  = Exam7.2fm2, specs = ~trt) #>  trt emmean   SE df lower.CL upper.CL #>  1     47.7 1.17 15     45.2     50.2 #>  2     54.6 1.19 15     52.1     57.1 #>  3     44.9 1.23 15     42.3     47.5 #>  4     53.1 1.26 15     50.4     55.8 #>  #> Confidence level used: 0.95   ##---Anova without covariate Exam7.2fm3 <- aov(formula = y ~ trt, data = DataSet7.2) car::Anova(mod = Exam7.2fm3, type = \"III\") #> Anova Table (Type III tests) #>  #> Response: y #>              Sum Sq Df  F value    Pr(>F)     #> (Intercept) 10448.2  1 260.1115 2.564e-11 *** #> trt           385.3  3   3.1972   0.05183 .   #> Residuals     642.7 16                        #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1  ##---Ls means for 3rd model emmeans(object = Exam7.2fm3, specs = ~trt) #>  trt emmean   SE df lower.CL upper.CL #>  1     45.7 2.83 16     39.7     51.7 #>  2     57.4 2.83 16     51.4     63.4 #>  3     48.7 2.83 16     42.7     54.8 #>  4     48.4 2.83 16     42.4     54.5 #>  #> Confidence level used: 0.95   ##---Box Plot of Covariate by treatment Plot <-    ggplot(           data    = DataSet7.2         , mapping = aes(x = factor(trt), y = x)          )                 +    geom_boxplot(width = 0.5) +    coord_flip()            +    geom_point()            +    stat_summary(          fun    = \"mean\"        , geom     = \"point\"        , shape    =  23        , size     =  2        , fill     = \"red\"        )                   +    theme_bw()              +    ggtitle(\"Covariate by treatment Box Plot\") +    xlab(\"Treatment\") print(Plot)"},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam7.3.html","id":null,"dir":"Reference","previous_headings":"","what":"Example 7.3 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup (p-223) — Exam7.3","title":"Example 7.3 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup (p-223) — Exam7.3","text":"Exam7.3 explains multifactor models factors qualitative quantitative(Unequal slopes ANCOVA)","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam7.3.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Example 7.3 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup (p-223) — Exam7.3","text":"Stroup, W. W. (2012).      Generalized Linear Mixed Models: Modern Concepts, Methods Applications.        CRC Press. @seealso    DataSet7.3","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam7.3.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Example 7.3 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup (p-223) — Exam7.3","text":"Muhammad Yaseen (myaseen208@gmail.com) Adeela Munawar (adeela.uaf@gmail.com)","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam7.3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example 7.3 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup (p-223) — Exam7.3","text":"","code":"library(car) library(ggplot2) library(emmeans) data(DataSet7.3)  DataSet7.3$trt <- factor(x = DataSet7.3$trt )  ##----ANCOVA(Unequal slope Model) Exam7.3fm1 <- aov(formula = y ~ trt*x, data = DataSet7.3) car::Anova( mod = Exam7.3fm1 , type = \"III\") #> Anova Table (Type III tests) #>  #> Response: y #>             Sum Sq Df F value    Pr(>F)     #> (Intercept) 422.13  1 57.6572 6.388e-06 *** #> trt         145.43  3  6.6212  0.006881 **  #> x             4.20  1  0.5733  0.463568     #> trt:x       184.51  3  8.4005  0.002809 **  #> Residuals    87.86 12                       #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1  Plot <-    ggplot(           data    = DataSet7.3         , mapping = aes(x = factor(trt), y = x)          )                 +    geom_boxplot(width = 0.5) +    coord_flip()            +    geom_point()            +    stat_summary(          fun      = \"mean\"        , geom     = \"point\"        , shape    =  23        , size     =  2        , fill     = \"red\"        )                   +    theme_bw()              +    ggtitle(\"Covariate by treatment Box Plot\") +    xlab(\"Treatment\") print(Plot)   ##----ANCOVA(Unequal slope Model without intercept at page 224) Exam7.3fm2 <- lm(formula = y ~ 0 + trt/x, data = DataSet7.3) summary(Exam7.3fm2) #>  #> Call: #> lm(formula = y ~ 0 + trt/x, data = DataSet7.3) #>  #> Residuals: #>     Min      1Q  Median      3Q     Max  #> -4.1473 -1.5168 -0.3092  1.2697  4.2013  #>  #> Coefficients: #>        Estimate Std. Error t value Pr(>|t|)     #> trt1    52.2940     6.8869   7.593 6.39e-06 *** #> trt2    74.2824     4.4731  16.607 1.21e-09 *** #> trt3    78.2623     4.8592  16.106 1.72e-09 *** #> trt4    56.8222     3.7134  15.302 3.09e-09 *** #> trt1:x  -0.6754     0.8921  -0.757    0.464     #> trt2:x  -3.7459     0.5007  -7.481 7.42e-06 *** #> trt3:x  -4.4552     0.4278 -10.414 2.31e-07 *** #> trt4:x  -2.3346     0.3080  -7.581 6.49e-06 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 2.706 on 12 degrees of freedom #> Multiple R-squared:  0.9971,\tAdjusted R-squared:  0.9952  #> F-statistic: 519.7 on 8 and 12 DF,  p-value: 4.737e-14 #>  library(parameters) model_parameters(Exam7.3fm2) #> Parameter   | Coefficient |   SE |         95% CI |  t(12) |      p #> ------------------------------------------------------------------- #> trt [1]     |       52.29 | 6.89 | [37.29, 67.30] |   7.59 | < .001 #> trt [2]     |       74.28 | 4.47 | [64.54, 84.03] |  16.61 | < .001 #> trt [3]     |       78.26 | 4.86 | [67.68, 88.85] |  16.11 | < .001 #> trt [4]     |       56.82 | 3.71 | [48.73, 64.91] |  15.30 | < .001 #> trt [1] × x |       -0.68 | 0.89 | [-2.62,  1.27] |  -0.76 | 0.464  #> trt [2] × x |       -3.75 | 0.50 | [-4.84, -2.65] |  -7.48 | < .001 #> trt [3] × x |       -4.46 | 0.43 | [-5.39, -3.52] | -10.41 | < .001 #> trt [4] × x |       -2.33 | 0.31 | [-3.01, -1.66] |  -7.58 | < .001 #>  #> Uncertainty intervals (equal-tailed) and p-values (two-tailed) computed #>   using a Wald t-distribution approximation.  ##--Lsmeans treatment at x=7 & 12 at page 225 emmeans(object = Exam7.3fm2, specs = ~trt|x, at = list(x = c(7, 12))) #> NOTE: A nesting structure was detected in the fitted model: #>     x %in% trt #> trt = 1, x =  7: #>  emmean   SE df lower.CL upper.CL #>    47.6 1.32 12     44.7     50.4 #>  #> trt = 2, x =  7: #>  emmean   SE df lower.CL upper.CL #>    48.1 1.45 12     44.9     51.2 #>  #> trt = 3, x =  7: #>  emmean   SE df lower.CL upper.CL #>    47.1 2.10 12     42.5     51.6 #>  #> trt = 4, x =  7: #>  emmean   SE df lower.CL upper.CL #>    40.5 1.82 12     36.5     44.4 #>  #> trt = 1, x = 12: #>  emmean   SE df lower.CL upper.CL #>    44.2 4.11 12     35.2     53.1 #>  #> trt = 2, x = 12: #>  emmean   SE df lower.CL upper.CL #>    29.3 2.09 12     24.8     33.9 #>  #> trt = 3, x = 12: #>  emmean   SE df lower.CL upper.CL #>    24.8 1.28 12     22.0     27.6 #>  #> trt = 4, x = 12: #>  emmean   SE df lower.CL upper.CL #>    28.8 1.22 12     26.1     31.5 #>  #> Confidence level used: 0.95"},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam7.6.2.1.html","id":null,"dir":"Reference","previous_headings":"","what":"Example 7.6.2.1 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup (p-231) — Exam7.6.2.1","title":"Example 7.6.2.1 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup (p-231) — Exam7.6.2.1","text":"Exam7.6.2.1 Nonlinear Mean Models ( Quantitative quantitative models)","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam7.6.2.1.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Example 7.6.2.1 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup (p-231) — Exam7.6.2.1","text":"Stroup, W. W. (2012).      Generalized Linear Mixed Models: Modern Concepts, Methods Applications.        CRC Press. @seealso    DataSet7.6","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam7.6.2.1.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Example 7.6.2.1 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup (p-231) — Exam7.6.2.1","text":"Muhammad Yaseen (myaseen208@gmail.com) Adeela Munawar (adeela.uaf@gmail.com)","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/Exam7.6.2.1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example 7.6.2.1 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup (p-231) — Exam7.6.2.1","text":"","code":"library(scatterplot3d) data(DataSet7.6)  library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following object is masked from ‘package:MASS’: #>  #>     select #> The following object is masked from ‘package:car’: #>  #>     recode #> The following object is masked from ‘package:nlme’: #>  #>     collapse #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union library(magrittr)  DataSet7.6 <-    DataSet7.6 %>%    mutate(      logx1 = ifelse(test = x1 == 0, yes = log(x1 + 0.1), no = log(x1))    , logx2 = ifelse(test = x2 == 0, yes = log(x2 + 0.1), no = log(x2))    ) DataSet7.6 #>    x1 x2 response      logx1      logx2 #> 1   0  0      7.6 -2.3025851 -2.3025851 #> 2   0  1      6.9 -2.3025851  0.0000000 #> 3   0  2      8.1 -2.3025851  0.6931472 #> 4   0  3      8.7 -2.3025851  1.0986123 #> 5   0  4      7.7 -2.3025851  1.3862944 #> 6   1  0      7.4  0.0000000 -2.3025851 #> 7   1  1     14.1  0.0000000  0.0000000 #> 8   1  2     13.8  0.0000000  0.6931472 #> 9   1  3     13.8  0.0000000  1.0986123 #> 10  1  4     14.0  0.0000000  1.3862944 #> 11  2  0      7.6  0.6931472 -2.3025851 #> 12  2  1     13.3  0.6931472  0.0000000 #> 13  2  2     15.4  0.6931472  0.6931472 #> 14  2  3     14.8  0.6931472  1.0986123 #> 15  2  4     15.8  0.6931472  1.3862944 #> 16  3  0      6.1  1.0986123 -2.3025851 #> 17  3  1     11.7  1.0986123  0.0000000 #> 18  3  2     15.8  1.0986123  0.6931472 #> 19  3  3     17.1  1.0986123  1.0986123 #> 20  3  4     15.2  1.0986123  1.3862944 #> 21  4  0      5.7  1.3862944 -2.3025851 #> 22  4  1     14.4  1.3862944  0.0000000 #> 23  4  2     16.6  1.3862944  0.6931472 #> 24  4  3     17.0  1.3862944  1.0986123 #> 25  4  4     16.2  1.3862944  1.3862944 Exam7.6.2.1.lm <- lm(formula = response ~ x1*x2 + logx1*logx2 , data = DataSet7.6) summary(Exam7.6.2.1.lm) #>  #> Call: #> lm(formula = response ~ x1 * x2 + logx1 * logx2, data = DataSet7.6) #>  #> Residuals: #>      Min       1Q   Median       3Q      Max  #> -2.15804 -0.34365  0.05536  0.48754  1.45395  #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|)     #> (Intercept) 13.81950    1.04461  13.229 1.03e-10 *** #> x1          -0.48366    0.44810  -1.079 0.294673     #> x2          -0.62134    0.44810  -1.387 0.182491     #> logx1        2.10830    0.33211   6.348 5.57e-06 *** #> logx2        2.63409    0.33211   7.931 2.77e-07 *** #> x1:x2       -0.06844    0.16211  -0.422 0.677871     #> logx1:logx2  0.84545    0.18510   4.568 0.000239 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 0.9269 on 18 degrees of freedom #> Multiple R-squared:  0.9587,\tAdjusted R-squared:  0.945  #> F-statistic: 69.71 on 6 and 18 DF,  p-value: 1.767e-11 #>  library(parameters) model_parameters(Exam7.6.2.1.lm) #> Parameter     | Coefficient |   SE |         95% CI | t(18) |      p #> -------------------------------------------------------------------- #> (Intercept)   |       13.82 | 1.04 | [11.62, 16.01] | 13.23 | < .001 #> x1            |       -0.48 | 0.45 | [-1.43,  0.46] | -1.08 | 0.295  #> x2            |       -0.62 | 0.45 | [-1.56,  0.32] | -1.39 | 0.182  #> logx1         |        2.11 | 0.33 | [ 1.41,  2.81] |  6.35 | < .001 #> logx2         |        2.63 | 0.33 | [ 1.94,  3.33] |  7.93 | < .001 #> x1 × x2       |       -0.07 | 0.16 | [-0.41,  0.27] | -0.42 | 0.678  #> logx1 × logx2 |        0.85 | 0.19 | [ 0.46,  1.23] |  4.57 | < .001 #>  #> Uncertainty intervals (equal-tailed) and p-values (two-tailed) computed #>   using a Wald t-distribution approximation.  ##---3D Scatter plot ( page#232) attach(DataSet7.6) (   ScatterPlot1 <-    scatterplot3d(              x           = x1            , y           = x2            , z           = response            , color      = response            , main        = \" 3D Scatter plot of response\")   )  #> $xyz.convert #> function (x, y = NULL, z = NULL)  #> { #>     xyz <- xyz.coords(x, y, z) #>     if (angle > 2) { #>         temp <- xyz$x #>         xyz$x <- xyz$y #>         xyz$y <- temp #>     } #>     y <- (xyz$y - y.add)/y.scal #>     return(list(x = xyz$x/x.scal + yx.f * y, y = xyz$z/z.scal +  #>         yz.f * y)) #> } #> <bytecode: 0x5652e90128a8> #> <environment: 0x5652e9030ed0> #>  #> $points3d #> function (x, y = NULL, z = NULL, type = \"p\", ...)  #> { #>     xyz <- xyz.coords(x, y, z) #>     if (angle > 2) { #>         temp <- xyz$x #>         xyz$x <- xyz$y #>         xyz$y <- temp #>     } #>     y2 <- (xyz$y - y.add)/y.scal #>     x <- xyz$x/x.scal + yx.f * y2 #>     y <- xyz$z/z.scal + yz.f * y2 #>     mem.par <- par(mar = mar, usr = usr) #>     if (type == \"h\") { #>         y2 <- z.min + yz.f * y2 #>         segments(x, y, x, y2, ...) #>         points(x, y, type = \"p\", ...) #>     } #>     else points(x, y, type = type, ...) #> } #> <bytecode: 0x5652e9014db0> #> <environment: 0x5652e9030ed0> #>  #> $plane3d #> function (Intercept, x.coef = NULL, y.coef = NULL, lty = \"dashed\",  #>     lty.box = NULL, draw_lines = TRUE, draw_polygon = FALSE,  #>     polygon_args = list(border = NA, col = rgb(0, 0, 0, 0.2)),  #>     ...)  #> { #>     if (!is.atomic(Intercept) && !is.null(coef(Intercept))) { #>         Intercept <- coef(Intercept) #>         if (!(\"(Intercept)\" %in% names(Intercept)))  #>             Intercept <- c(0, Intercept) #>     } #>     if (is.null(lty.box))  #>         lty.box <- lty #>     if (is.null(x.coef) && length(Intercept) == 3) { #>         x.coef <- Intercept[if (angle > 2)  #>             3 #>         else 2] #>         y.coef <- Intercept[if (angle > 2)  #>             2 #>         else 3] #>         Intercept <- Intercept[1] #>     } #>     mem.par <- par(mar = mar, usr = usr) #>     x <- x.min:x.max #>     y <- 0:y.max #>     ltya <- c(lty.box, rep(lty, length(x) - 2), lty.box) #>     x.coef <- x.coef * x.scal #>     z1 <- (Intercept + x * x.coef + y.add * y.coef)/z.scal #>     z2 <- (Intercept + x * x.coef + (y.max * y.scal + y.add) *  #>         y.coef)/z.scal #>     if (draw_polygon)  #>         do.call(\"polygon\", c(list(c(x.min, x.min + y.max * yx.f,  #>             x.max + y.max * yx.f, x.max), c(z1[1], z2[1] + yz.f *  #>             y.max, z2[length(z2)] + yz.f * y.max, z1[length(z1)])),  #>             polygon_args)) #>     if (draw_lines)  #>         segments(x, z1, x + y.max * yx.f, z2 + yz.f * y.max,  #>             lty = ltya, ...) #>     ltya <- c(lty.box, rep(lty, length(y) - 2), lty.box) #>     y.coef <- (y * y.scal + y.add) * y.coef #>     z1 <- (Intercept + x.min * x.coef + y.coef)/z.scal #>     z2 <- (Intercept + x.max * x.coef + y.coef)/z.scal #>     if (draw_lines)  #>         segments(x.min + y * yx.f, z1 + y * yz.f, x.max + y *  #>             yx.f, z2 + y * yz.f, lty = ltya, ...) #> } #> <bytecode: 0x5652e9016170> #> <environment: 0x5652e9030ed0> #>  #> $box3d #> function (...)  #> { #>     mem.par <- par(mar = mar, usr = usr) #>     lines(c(x.min, x.max), c(z.max, z.max), ...) #>     lines(c(0, y.max * yx.f) + x.max, c(0, y.max * yz.f) + z.max,  #>         ...) #>     lines(c(0, y.max * yx.f) + x.min, c(0, y.max * yz.f) + z.max,  #>         ...) #>     lines(c(x.max, x.max), c(z.min, z.max), ...) #>     lines(c(x.min, x.min), c(z.min, z.max), ...) #>     lines(c(x.min, x.max), c(z.min, z.min), ...) #> } #> <bytecode: 0x5652e9023ed8> #> <environment: 0x5652e9030ed0> #>  #> $contour3d #> function (f, x.count = 10, y.count = 10, type = \"l\", lty = \"24\",  #>     x.resolution = 50, y.resolution = 50, ...)  #> { #>     if (inherits(f, \"lm\")) { #>         vars <- all.vars(formula(f)) #>     } #>     else vars <- c(\"z\", \"x\", \"y\") #>     for (x1 in seq(x.range.fix[1], x.range.fix[2], length = x.count)) { #>         d <- data.frame(x1, seq(y.range.fix[1], y.range.fix[2],  #>             length = y.resolution)) #>         names(d) <- vars[-1] #>         if (inherits(f, \"lm\")) { #>             d[vars[1]] <- predict(f, newdata = d) #>         } #>         else d[vars[1]] <- f(d[[1]], d[[2]]) #>         xyz <- xyz.coords(d) #>         if (angle > 2) { #>             temp <- xyz$x #>             xyz$x <- xyz$y #>             xyz$y <- temp #>         } #>         y2 <- (xyz$y - y.add)/y.scal #>         x <- xyz$x/x.scal + yx.f * y2 #>         y <- xyz$z/z.scal + yz.f * y2 #>         mem.par <- par(mar = mar, usr = usr) #>         if (type == \"h\") { #>             y2 <- z.min + yz.f * y2 #>             segments(x, y, x, y2, ...) #>             points(x, y, type = \"p\", ...) #>         } #>         else points(x, y, type = type, lty = lty, ...) #>     } #>     for (x2 in seq(y.range.fix[1], y.range.fix[2], length = y.count)) { #>         d <- data.frame(seq(x.range.fix[1], x.range.fix[2], length = x.resolution),  #>             x2) #>         names(d) <- vars[-1] #>         if (inherits(f, \"lm\")) { #>             d[vars[1]] <- predict(f, newdata = d) #>         } #>         else d[vars[1]] <- f(d[[1]], d[[2]]) #>         xyz <- xyz.coords(d) #>         if (angle > 2) { #>             temp <- xyz$x #>             xyz$x <- xyz$y #>             xyz$y <- temp #>         } #>         y2 <- (xyz$y - y.add)/y.scal #>         x <- xyz$x/x.scal + yx.f * y2 #>         y <- xyz$z/z.scal + yz.f * y2 #>         mem.par <- par(mar = mar, usr = usr) #>         if (type == \"h\") { #>             y2 <- z.min + yz.f * y2 #>             segments(x, y, x, y2, ...) #>             points(x, y, type = \"p\", ...) #>         } #>         else points(x, y, type = type, lty = lty, ...) #>     } #> } #> <bytecode: 0x5652e9026098> #> <environment: 0x5652e9030ed0> #>  #> $par.mar #> $par.mar$mar #> [1] 5.1 4.1 4.1 2.1 #>  #>   ##--- scatter plot with regression plane by using Hoerl function ( page#233) grid.lines <-  5 x1.pred <- seq(min(x1), max(x1), length.out = grid.lines) x2.pred <- seq(min(x2), max(x2), length.out = grid.lines) x1x2    <- expand.grid( x = x1.pred, y = x2.pred)  z.pred  <- matrix(data = predict(Exam7.6.2.1.lm, newdata = x1x2),                   nrow = grid.lines                 , ncol = grid.lines) (ScatterPlot2 <-    scatterplot3d(              x           = x1            , y           = x2            , z           = response            , pch         = 20            , phi         = 25            , theta       = 30            , ticktype   = \"detailed\"            , xlab       =  \"x1\"            , ylab       =  \"x2\"            , zlab       = \"response\"            , add         = FALSE            , surf        = list(x      = x1.pred ,                                 y      = x2.pred ,                                 z      = z.pred  ,                                 facets = NA                                 )            , plot        = TRUE            , main        = \"Fitted Response Surface by Hoerl Function\"            )            ) #> Warning: \"phi\" is not a graphical parameter #> Warning: \"theta\" is not a graphical parameter #> Warning: \"ticktype\" is not a graphical parameter #> Warning: \"add\" is not a graphical parameter #> Warning: \"surf\" is not a graphical parameter #> Warning: \"plot\" is not a graphical parameter #> Warning: \"phi\" is not a graphical parameter #> Warning: \"theta\" is not a graphical parameter #> Warning: \"ticktype\" is not a graphical parameter #> Warning: \"add\" is not a graphical parameter #> Warning: \"surf\" is not a graphical parameter #> Warning: \"plot\" is not a graphical parameter  #> $xyz.convert #> function (x, y = NULL, z = NULL)  #> { #>     xyz <- xyz.coords(x, y, z) #>     if (angle > 2) { #>         temp <- xyz$x #>         xyz$x <- xyz$y #>         xyz$y <- temp #>     } #>     y <- (xyz$y - y.add)/y.scal #>     return(list(x = xyz$x/x.scal + yx.f * y, y = xyz$z/z.scal +  #>         yz.f * y)) #> } #> <bytecode: 0x5652e90128a8> #> <environment: 0x5652e9349748> #>  #> $points3d #> function (x, y = NULL, z = NULL, type = \"p\", ...)  #> { #>     xyz <- xyz.coords(x, y, z) #>     if (angle > 2) { #>         temp <- xyz$x #>         xyz$x <- xyz$y #>         xyz$y <- temp #>     } #>     y2 <- (xyz$y - y.add)/y.scal #>     x <- xyz$x/x.scal + yx.f * y2 #>     y <- xyz$z/z.scal + yz.f * y2 #>     mem.par <- par(mar = mar, usr = usr) #>     if (type == \"h\") { #>         y2 <- z.min + yz.f * y2 #>         segments(x, y, x, y2, ...) #>         points(x, y, type = \"p\", ...) #>     } #>     else points(x, y, type = type, ...) #> } #> <bytecode: 0x5652e9014db0> #> <environment: 0x5652e9349748> #>  #> $plane3d #> function (Intercept, x.coef = NULL, y.coef = NULL, lty = \"dashed\",  #>     lty.box = NULL, draw_lines = TRUE, draw_polygon = FALSE,  #>     polygon_args = list(border = NA, col = rgb(0, 0, 0, 0.2)),  #>     ...)  #> { #>     if (!is.atomic(Intercept) && !is.null(coef(Intercept))) { #>         Intercept <- coef(Intercept) #>         if (!(\"(Intercept)\" %in% names(Intercept)))  #>             Intercept <- c(0, Intercept) #>     } #>     if (is.null(lty.box))  #>         lty.box <- lty #>     if (is.null(x.coef) && length(Intercept) == 3) { #>         x.coef <- Intercept[if (angle > 2)  #>             3 #>         else 2] #>         y.coef <- Intercept[if (angle > 2)  #>             2 #>         else 3] #>         Intercept <- Intercept[1] #>     } #>     mem.par <- par(mar = mar, usr = usr) #>     x <- x.min:x.max #>     y <- 0:y.max #>     ltya <- c(lty.box, rep(lty, length(x) - 2), lty.box) #>     x.coef <- x.coef * x.scal #>     z1 <- (Intercept + x * x.coef + y.add * y.coef)/z.scal #>     z2 <- (Intercept + x * x.coef + (y.max * y.scal + y.add) *  #>         y.coef)/z.scal #>     if (draw_polygon)  #>         do.call(\"polygon\", c(list(c(x.min, x.min + y.max * yx.f,  #>             x.max + y.max * yx.f, x.max), c(z1[1], z2[1] + yz.f *  #>             y.max, z2[length(z2)] + yz.f * y.max, z1[length(z1)])),  #>             polygon_args)) #>     if (draw_lines)  #>         segments(x, z1, x + y.max * yx.f, z2 + yz.f * y.max,  #>             lty = ltya, ...) #>     ltya <- c(lty.box, rep(lty, length(y) - 2), lty.box) #>     y.coef <- (y * y.scal + y.add) * y.coef #>     z1 <- (Intercept + x.min * x.coef + y.coef)/z.scal #>     z2 <- (Intercept + x.max * x.coef + y.coef)/z.scal #>     if (draw_lines)  #>         segments(x.min + y * yx.f, z1 + y * yz.f, x.max + y *  #>             yx.f, z2 + y * yz.f, lty = ltya, ...) #> } #> <bytecode: 0x5652e9016170> #> <environment: 0x5652e9349748> #>  #> $box3d #> function (...)  #> { #>     mem.par <- par(mar = mar, usr = usr) #>     lines(c(x.min, x.max), c(z.max, z.max), ...) #>     lines(c(0, y.max * yx.f) + x.max, c(0, y.max * yz.f) + z.max,  #>         ...) #>     lines(c(0, y.max * yx.f) + x.min, c(0, y.max * yz.f) + z.max,  #>         ...) #>     lines(c(x.max, x.max), c(z.min, z.max), ...) #>     lines(c(x.min, x.min), c(z.min, z.max), ...) #>     lines(c(x.min, x.max), c(z.min, z.min), ...) #> } #> <bytecode: 0x5652e9023ed8> #> <environment: 0x5652e9349748> #>  #> $contour3d #> function (f, x.count = 10, y.count = 10, type = \"l\", lty = \"24\",  #>     x.resolution = 50, y.resolution = 50, ...)  #> { #>     if (inherits(f, \"lm\")) { #>         vars <- all.vars(formula(f)) #>     } #>     else vars <- c(\"z\", \"x\", \"y\") #>     for (x1 in seq(x.range.fix[1], x.range.fix[2], length = x.count)) { #>         d <- data.frame(x1, seq(y.range.fix[1], y.range.fix[2],  #>             length = y.resolution)) #>         names(d) <- vars[-1] #>         if (inherits(f, \"lm\")) { #>             d[vars[1]] <- predict(f, newdata = d) #>         } #>         else d[vars[1]] <- f(d[[1]], d[[2]]) #>         xyz <- xyz.coords(d) #>         if (angle > 2) { #>             temp <- xyz$x #>             xyz$x <- xyz$y #>             xyz$y <- temp #>         } #>         y2 <- (xyz$y - y.add)/y.scal #>         x <- xyz$x/x.scal + yx.f * y2 #>         y <- xyz$z/z.scal + yz.f * y2 #>         mem.par <- par(mar = mar, usr = usr) #>         if (type == \"h\") { #>             y2 <- z.min + yz.f * y2 #>             segments(x, y, x, y2, ...) #>             points(x, y, type = \"p\", ...) #>         } #>         else points(x, y, type = type, lty = lty, ...) #>     } #>     for (x2 in seq(y.range.fix[1], y.range.fix[2], length = y.count)) { #>         d <- data.frame(seq(x.range.fix[1], x.range.fix[2], length = x.resolution),  #>             x2) #>         names(d) <- vars[-1] #>         if (inherits(f, \"lm\")) { #>             d[vars[1]] <- predict(f, newdata = d) #>         } #>         else d[vars[1]] <- f(d[[1]], d[[2]]) #>         xyz <- xyz.coords(d) #>         if (angle > 2) { #>             temp <- xyz$x #>             xyz$x <- xyz$y #>             xyz$y <- temp #>         } #>         y2 <- (xyz$y - y.add)/y.scal #>         x <- xyz$x/x.scal + yx.f * y2 #>         y <- xyz$z/z.scal + yz.f * y2 #>         mem.par <- par(mar = mar, usr = usr) #>         if (type == \"h\") { #>             y2 <- z.min + yz.f * y2 #>             segments(x, y, x, y2, ...) #>             points(x, y, type = \"p\", ...) #>         } #>         else points(x, y, type = type, lty = lty, ...) #>     } #> } #> <bytecode: 0x5652e9026098> #> <environment: 0x5652e9349748> #>  #> $par.mar #> $par.mar$mar #> [1] 5.1 3.1 4.1 3.1 #>  #>"},{"path":"https://myaseen208.com/StroupGLMM/reference/Table1.1.html","id":null,"dir":"Reference","previous_headings":"","what":"Data for Table1.1 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — Table1.1","title":"Data for Table1.1 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — Table1.1","text":"Table1.1 used inspecting probability distribution define plausible process.","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/Table1.1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data for Table1.1 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — Table1.1","text":"","code":"data(Table1.1)"},{"path":"https://myaseen208.com/StroupGLMM/reference/Table1.1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data for Table1.1 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — Table1.1","text":"data.frame 11 rows 3 variables.","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/Table1.1.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Data for Table1.1 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — Table1.1","text":"x independent variable Nx bernouli trials (bernouli outcomes individual) y number successes individual","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/Table1.1.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Data for Table1.1 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — Table1.1","text":"Stroup, W. W. (2012).Generalized linear mixed models: modern concepts, methods applications.              CRC press.","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/Table1.1.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Data for Table1.1 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — Table1.1","text":"Muhammad Yaseen (myaseen208@gmail.com) Adeela Munawar (adeela.uaf@gmail.com)","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/Table1.1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data for Table1.1 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup — Table1.1","text":"","code":"library(StroupGLMM) data(Table1.1)"},{"path":"https://myaseen208.com/StroupGLMM/reference/Table1.2.html","id":null,"dir":"Reference","previous_headings":"","what":"Data for Table1.2 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-10) — Table1.2","title":"Data for Table1.2 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-10) — Table1.2","text":"Exam1.2 used see types model effects plotting regression data","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/Table1.2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data for Table1.2 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-10) — Table1.2","text":"","code":"data(Table1.2)"},{"path":"https://myaseen208.com/StroupGLMM/reference/Table1.2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data for Table1.2 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-10) — Table1.2","text":"data.frame 36 rows 5 variables.","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/Table1.2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Data for Table1.2 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-10) — Table1.2","text":"X     11 levels varying intervals 0 48 observed multiple batches Y     continuous variable observed level X Fav   number successes N     number bernoulli trials Batch Batches 1, 2, 3, 4","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/Table1.2.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Data for Table1.2 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-10) — Table1.2","text":"Stroup, W. W. (2012).Generalized linear mixed models: modern concepts, methods applications.              CRC press.","code":""},{"path":[]},{"path":"https://myaseen208.com/StroupGLMM/reference/Table1.2.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Data for Table1.2 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-10) — Table1.2","text":"Muhammad Yaseen (myaseen208@gmail.com) Adeela Munawar (adeela.uaf@gmail.com)","code":""},{"path":"https://myaseen208.com/StroupGLMM/reference/Table1.2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data for Table1.2 from Generalized Linear Mixed Models: Modern Concepts, Methods and Applications by Walter W. Stroup(p-10) — Table1.2","text":"","code":"data(Table1.2)"},{"path":[]},{"path":"https://myaseen208.com/StroupGLMM/news/index.html","id":"new-features-0-2-0","dir":"Changelog","previous_headings":"","what":"New Features","title":"Changes in StroupGLMM Version 0.2.0","text":"Revised code documentation Updated DESCRIPTION file fulfill requirements CRAN","code":""},{"path":"https://myaseen208.com/StroupGLMM/news/index.html","id":"changes-in-stroupglmm-version-010","dir":"Changelog","previous_headings":"","what":"Changes in StroupGLMM Version 0.1.0","title":"Changes in StroupGLMM Version 0.1.0","text":"CRAN release: 2016-04-19","code":""},{"path":"https://myaseen208.com/StroupGLMM/news/index.html","id":"new-features-0-1-0","dir":"Changelog","previous_headings":"","what":"New Features","title":"Changes in StroupGLMM Version 0.1.0","text":"First version StroupGLMM","code":""}]
